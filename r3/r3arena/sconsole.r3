| Super console
| PHREDA 2021
^r3/lib/gui.r3

#romfont (
$00 $00 $00 $00 $00 $00 $00 $00
$f0 $f0 $f0 $e0 $00 $00 $00 $00
$0f $0f $0f $07 $00 $00 $00 $00
$ff $ff $ff $ff $00 $00 $00 $00
$00 $00 $00 $00 $07 $0f $0f $0f
$f0 $f0 $f0 $e0 $07 $0f $0f $0f
$0f $0f $0f $0f $0f $0f $0f $0f
$00 $00 $00 $00 $e0 $f0 $f0 $f0
$00 $00 $00 $ff $ff $00 $00 $00
$18 $18 $18 $18 $18 $18 $18 $18
$18 $18 $18 $f1 $0f $00 $00 $00
$18 $18 $18 $f8 $f0 $00 $00 $00
$00 $00 $00 $0f $f1 $18 $18 $18
$00 $00 $00 $f0 $f8 $18 $18 $18
$18 $18 $18 $ff $ff $18 $18 $18
$55 $aa $55 $aa $55 $aa $55 $aa
$00 $60 $78 $7e $7e $78 $60 $00
$00 $00 $00 $00 $00 $00 $00 $00
$00 $00 $00 $00 $00 $00 $00 $00
$00 $00 $00 $00 $00 $00 $00 $00
$00 $00 $00 $00 $00 $00 $00 $00
$00 $00 $00 $00 $00 $00 $00 $00
$00 $00 $00 $00 $00 $00 $00 $00
$00 $00 $00 $00 $00 $00 $00 $00
$00 $00 $00 $00 $00 $00 $00 $00
$00 $00 $00 $00 $00 $00 $00 $00
$00 $00 $00 $00 $00 $00 $00 $00
$00 $00 $00 $00 $00 $00 $00 $00
$00 $00 $00 $00 $00 $00 $00 $00
$00 $00 $00 $00 $00 $00 $00 $00
$00 $00 $00 $00 $00 $00 $00 $00
$00 $00 $00 $00 $00 $00 $00 $00
$00 $00 $00 $00 $00 $00 $00 $00 | 32
$00 $10 $10 $10 $10 $00 $10 $00
$00 $24 $24 $00 $00 $00 $00 $00
$00 $24 $7e $24 $24 $7e $24 $00 | 35 #
$00 $08 $3e $28 $3e $0a $3e $08
$00 $62 $64 $08 $10 $26 $46 $00
$00 $10 $28 $10 $2a $44 $3a $00
$00 $08 $10 $00 $00 $00 $00 $00
$04 $08 $10 $10 $10 $10 $08 $04 | 40 (
$20 $10 $08 $08 $08 $08 $10 $20 |)
$00 $00 $14 $08 $3e $08 $14 $00 |*
$00 $00 $08 $08 $3e $08 $08 $00 |+
$00 $00 $00 $00 $00 $08 $08 $10 |,
$00 $00 $00 $00 $3e $00 $00 $00 | 45 -
$00 $00 $00 $00 $00 $18 $18 $00 | .
$00 $00 $02 $04 $08 $10 $20 $00 | /
$00 $3c $46 $4a $52 $62 $3c $00 | 0
$00 $18 $28 $08 $08 $08 $3e $00
$00 $3c $42 $02 $3c $40 $7e $00 | 50 2
$00 $3c $42 $0c $02 $42 $3c $00
$00 $08 $18 $28 $48 $7e $08 $00
$00 $7e $40 $7c $02 $42 $3c $00
$00 $3c $40 $7c $42 $42 $3c $00
$00 $7e $02 $04 $08 $10 $10 $00 | 55 7
$00 $3c $42 $3c $42 $42 $3c $00
$00 $3c $42 $42 $3e $02 $3c $00
$00 $00 $00 $10 $00 $00 $10 $00
$00 $00 $10 $00 $00 $10 $10 $20
$00 $00 $04 $08 $10 $08 $04 $00 | 60 <
$00 $00 $00 $3e $00 $3e $00 $00
$00 $00 $10 $08 $04 $08 $10 $00
$00 $3c $42 $04 $08 $00 $08 $00
$00 $3c $4a $56 $5e $40 $3c $00
$00 $3c $42 $42 $7e $42 $42 $00 | 65 A
$00 $7c $42 $7c $42 $42 $7c $00
$00 $3c $42 $40 $40 $42 $3c $00
$00 $78 $44 $42 $42 $44 $78 $00
$00 $7e $40 $7c $40 $40 $7e $00
$00 $7e $40 $7c $40 $40 $40 $00 | 70 F
$00 $3c $42 $40 $4e $42 $3c $00
$00 $42 $42 $7e $42 $42 $42 $00
$00 $3e $08 $08 $08 $08 $3e $00
$00 $02 $02 $02 $42 $42 $3c $00
$00 $44 $48 $70 $48 $44 $42 $00 | 75 K
$00 $40 $40 $40 $40 $40 $7e $00
$00 $42 $66 $5a $42 $42 $42 $00
$00 $42 $62 $52 $4a $46 $42 $00
$00 $3c $42 $42 $42 $42 $3c $00
$00 $7c $42 $42 $7c $40 $40 $00 | 80 P
$00 $3c $42 $42 $52 $4a $3c $00
$00 $7c $42 $42 $7c $44 $42 $00
$00 $3c $40 $3c $02 $42 $3c $00
$00 $fe $10 $10 $10 $10 $10 $00
$00 $42 $42 $42 $42 $42 $3c $00 | 85 U
$00 $42 $42 $42 $42 $24 $18 $00
$00 $42 $42 $42 $42 $5a $24 $00
$00 $42 $24 $18 $18 $24 $42 $00
$00 $82 $44 $28 $10 $10 $10 $00
$00 $7e $04 $08 $10 $20 $7e $00 | 9. Z
$00 $0e $08 $08 $08 $08 $0e $00
$00 $00 $40 $20 $10 $08 $04 $00
$00 $70 $10 $10 $10 $10 $70 $00
$00 $10 $38 $54 $10 $10 $10 $00
$00 $00 $00 $00 $00 $00 $00 $ff | 95 _
$00 $1c $22 $78 $20 $20 $7e $00
$00 $00 $38 $04 $3c $44 $3c $00
$00 $20 $20 $3c $22 $22 $3c $00
$00 $00 $1c $20 $20 $20 $1c $00
$00 $04 $04 $3c $44 $44 $3c $00 |1.. d
$00 $00 $38 $44 $78 $40 $3c $00
$00 $0c $10 $18 $10 $10 $10 $00
$00 $00 $3c $44 $44 $3c $04 $38
$00 $40 $40 $78 $44 $44 $44 $00
$00 $10 $00 $30 $10 $10 $38 $00 | 1.5 i
$00 $04 $00 $04 $04 $04 $24 $18
$00 $20 $28 $30 $30 $28 $24 $00
$00 $10 $10 $10 $10 $10 $0c $00
$00 $00 $68 $54 $54 $54 $54 $00
$00 $00 $78 $44 $44 $44 $44 $00 | 11. n
$00 $00 $38 $44 $44 $44 $38 $00
$00 $00 $78 $44 $44 $78 $40 $40
$00 $00 $3c $44 $44 $3c $04 $06
$00 $00 $1c $20 $20 $20 $20 $00
$00 $00 $38 $40 $38 $04 $78 $00 | 115 s
$00 $10 $38 $10 $10 $10 $0c $00
$00 $00 $44 $44 $44 $44 $38 $00
$00 $00 $44 $44 $28 $28 $10 $00
$00 $00 $44 $54 $54 $54 $28 $00
$00 $00 $44 $28 $10 $28 $44 $00 | 12. x
$00 $00 $44 $44 $44 $3c $04 $38 | y
$00 $00 $7c $08 $10 $20 $7c $00 | z
$00 $0e $08 $30 $08 $08 $0e $00 | {
$00 $08 $08 $08 $08 $08 $08 $00 | |
$00 $70 $10 $0c $10 $10 $70 $00 | 125 }
$00 $14 $28 $00 $00 $00 $00 $00 ) | ~

| 80x60
#screen * 19200

#c1 $ff00
#c2 $0
#vblink
#c.x #c.y
#c.cursor
#c.atrib $ff000000

::c.ink | color --
	26 << c.atrib $00ff0000 and or 'c.atrib ! ;

::c.paper | color --
	18 << c.atrib $ff000000 and or 'c.atrib ! ;

:c.in
	c.x c.y
::c.at | x y --
	80 * + 2 <<
	'screen + 'c.cursor ! ;

:c.uscroll
	'screen 80 2 << over + 80 59 * move
	'screen 80 59 * 2 << + $3f000000 80 fill
	;

::c.cr
	0 'c.x !
	c.y 1 + 60 <? ( 'c.y ! c.in ; ) drop
	c.uscroll c.in ;

::c.emit | char --
	$ff and c.atrib or c.cursor !
	c.x 1 + 80 <? ( 'c.x ! c.in ; ) drop
	0 'c.x !
	c.y 1 + 60 <? ( 'c.y ! c.in ; ) drop
	c.uscroll c.in ;

::c.print | "" --
	sprint ( c@+ 1? c.emit ) 2drop ;

::c.cls
	'screen 'c.cursor ! 0 'c.x ! 0 'c.y !
	'screen c.atrib 80 60 * fill ;

:c.le
	c.x 0 >? ( 1 - 'c.x ! c.in ; ) drop
	80 1 - 'c.x !
	c.y 0 >? ( 1 - 'c.y ! c.in ; ) drop
	c.in ;
:c.ri
	c.x 80 <? ( 1 + 'c.x ! c.in ; ) drop
	0 'c.x !
	c.y 60 <? ( 1 + 'c.y ! c.in ; ) drop
	c.in ;
:c.up
	c.y 0 >? ( 1 - 'c.y ! c.in ; ) drop
	60 1 - 'c.y ! c.in ;
:c.dn
	c.y 60 <? ( 1 + 'c.y ! c.in ; ) drop
	0 'c.y ! c.in ;

:uni2ascii
	$80 <? ( ; )
	dup $1f and 6 <<
	swap 8 >> $3f and or ;


|-------------- draw
#xa #ya

::c.pset | x y --
	over 2 >> over 2 >> 80 * + 2 << 'screen + | adr
	rot $3 and rot $3 and 3 xor 2 << + $8000 swap >> | adr bit
	over @ $ffff and c.atrib $10000 or or	| adr bit set
	or swap !
	;

:ihline | xd yd xa --
	pick2 - 0? ( drop c.pset ; )
	-? ( rot over + rot rot neg )
	( 1? 1 - >r
		2dup c.pset
		swap 1 + swap
		r> ) 3drop ;

:ivline | x y y --
	over >? ( swap )
	( over <=?
		pick2 over c.pset
		1 + ) 3drop ;

::rline | xd yd --
	ya =? ( xa ihline ; )
	xa ya pick2 <? ( 2swap )	| xm ym xM yM
	pick2 - 1 + >r			| xm ym xM  r:canty
	pick2 - r@ 16 <</
	rot 16 << $8000 +
	rot rot r> 				|xm<<16 ym delta canty
	( 1? 1 - >r >r
		over 16 >> over pick3 r@ + 16 >> ihline
		1 + swap
		r@ + swap
		r> r> )
	4drop ;

::c.op | x y  --
	'ya ! 'xa ! ;

::c.line | x y --
	2dup rline 'ya ! 'xa ! ;

|---------------------------------------------
#paleta
$000000 $05fec1 $32af87 $387261 $1c332a $2a5219 $2d8430 $00b716
$50fe34 $a2d18e $84926c $aabab3 $cdfff1 $05dcdd $499faa $2f6d82
$3894d7 $78cef8 $bbc6ec $8e8cfd $1f64f4 $25477e $72629f $a48db5
$f5b8f4 $df6ff1 $a831ee $3610e3 $241267 $7f2387 $471a3a $93274e
$976877 $e57ea3 $d5309d $dd385a $f28071 $ee2911 $9e281f $4e211a
$5b5058 $5e4d28 $7e751a $a2af22 $e0f53f $fffbc6 $dfb9ba $ab8c76
$eec191 $c19029 $f8cb1a $ea7924 $a15e30 $1A1C2C $5D275D $B13E53
$EF7D57 $FFCD75 $A7F070 $38B764 $257179 $29366F $3B5DC9 $ffffff

:get6paleta 2 << 'paleta + @ ;

:pix | v mask -- v
	and? ( c1 a!+ ; )
	c2 a!+ ;

:2pix | v mask -- v
	and? ( c1 dup a!+ a!+ ; )
	c2 dup a!+ a!+ ;

:decodegrap
	$ffff and pick2 1 >> $3 and 2 << >>
	$8 2pix $4 2pix $2 2pix $1 2pix
	drop ;

:decodechar | y -xc -- y -xc pix
	b@+
	dup 26 >> $3f and get6paleta 'c1 !
	dup 18 >> $3f and get6paleta 'c2 !
	$10000 and? ( decodegrap ; )
	0 swap $20000 and? ( nip vblink swap )
	$ff and 3 << 'romfont + pick3 $7 and + c@ xor
	$80 pix $40 pix $20 pix $10 pix $8 pix $4 pix $2 pix $1 pix
	drop ;

:drawline | y --
	dup 3 >> 80 2 << * 'screen + >b | nextcharline
	80 ( 1? 1 - decodechar ) drop ;

#c.prevc

:drawcon
	c.cursor dup @ dup 'c.prevc !
	$20000 or swap !
	0 blink 1? ( $ffffff or swap ) drop 'vblink !
	sw 640 - 1 >>
	sh 480 - 1 >>
	xy>v >a
	 0 ( 480 <?
		drawline
		sw 640 - 2 << a+
		1 + ) drop
	c.prevc c.cursor ! ;

|--------------------------
:randxy
	rand 320 mod abs
	rand 240 mod abs
	;
::c.keys
	char
	1? ( uni2ascii c.emit ; )
	drop
	key
	>esc< =? ( exit )
	<f2> =? ( c.cls )
	<f3> =? ( c.uscroll )
	<f4> =? ( randxy c.op randxy c.line )
	<f5> =? ( rand c.ink )

	<ret> =? ( c.cr )

	<le> =? ( c.le )
	<ri> =? ( c.ri )
	<up> =? ( c.up )
	<dn> =? ( c.dn )
	drop
	;

:main
	drawcon
	c.keys
	;

:
	c.cls
	63 c.ink
	"r3 console" c.print c.cr
	0 ( 64 <?
		dup c.ink dup "color %d - " c.print 1 + ) drop

|	23 c.ink 10 40 c.op 300 140 c.line

	'main onshow ;