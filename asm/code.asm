;---r3 compiler code.asm; r3/games/chess.r3;--------------------------; :10/mod  |3082|e     .  | calls:3 niv:0 len:49 ( a -- bc )w3A:;---------GEN; DUPadd rbp,8mov [rbp],rax; 1; OPTN >>sar rax,1; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 2; OPTN >>sar rax,2; +add rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 4; OPTN >>sar rax,4; +add rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 8; OPTN >>sar rax,8; +add rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 16; OPTN >>sar rax,16; +add rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 32; OPTN >>sar rax,32; +add rax,[rbp]sub rbp,8; 3; OPTN >>sar rax,3; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; DUPadd rbp,8mov [rbp],rax; 2; OPTN <<shl rax,2; +add rax,[rbp]sub rbp,8; 1; OPTN <<shl rax,1; -neg raxadd rax,[rbp]sub rbp,8; 6; OPTN +add rax,6; 4; OPTN >>sar rax,4; +add rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; DUPadd rbp,8mov [rbp],rax; 2; OPTN <<shl rax,2; +add rax,[rbp]sub rbp,8; 1; OPTN <<shl rax,1; -neg raxadd rax,[rbp]sub rbp,8; ;ret;--------------------------; :setxy  |5084|l'    .  | calls:5 niv:0 len:9 ( ab --  )w60:;---------GEN; SWadd rbp,8mov [rbp],raxmov rax,XRES; *imul rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; 2; OPTN <<shl rax,2; VFRAMEadd rbp,8mov [rbp],raxmov rax,[SYSFRAME]; +add rax,[rbp]sub rbp,8; >Amov r8,raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :acpx!+  |1080|l     .  | calls:1 niv:0 len:37 ( ab --  )w61:;---------GEN; DUPadd rbp,8mov [rbp],rax; $ff00ff; OPTN ANDand rax,16711935; A@add rbp,8mov [rbp],raxmovsxd rax,dword[r8]; DUPadd rbp,8mov [rbp],rax; $ff00ff; OPTN ANDand rax,16711935; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; -neg raxadd rax,[rbp]sub rbp,8; PICK4add rbp,8mov [rbp],raxmov rax,[rbp-8*4]; *imul rax,[rbp]sub rbp,8; 8; OPTN >>sar rax,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; +add rax,[rbp]sub rbp,8; $ff00ff; OPTN ANDand rax,16711935; >Rpush raxmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; $ff00; OPTN ANDand rax,65280; SWAPxchg rax,[rbp]; $ff00; OPTN ANDand rax,65280; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; -neg raxadd rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; *imul rax,[rbp]sub rbp,8; 8; OPTN >>sar rax,8; +add rax,[rbp]sub rbp,8; $ff00; OPTN ANDand rax,65280; R>add rbp,8mov [rbp],raxpop rax; ORor rax,[rbp]sub rbp,8; A!+mov dword[r8],eaxadd r8,4mov rax,[rbp]sub rbp,8; ;ret;--------------------------; :wvline  |1001490|l  ;  . I| calls:1 niv:1 len:68 ( ab --  )w65:;---------GEN; -?or rax,raxjns _o0; (; DROPmov rax,[rbp]sub rbp,8; 'opy; OPTAV !mov dword[w55],eaxmov rax,[rbp]sub rbp,8; ;ret; )_o0:; SWadd rbp,8mov [rbp],raxmov rax,XRES; >=?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjl _o1; (; DROPmov rax,[rbp]sub rbp,8; 'opy; OPTAV !mov dword[w55],eaxmov rax,[rbp]sub rbp,8; ;ret; )_o1:; opyadd rbp,8mov [rbp],raxmovsxd rax,dword[w55]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; DUPadd rbp,8mov [rbp],rax; 'opy; OPTAV !mov dword[w55],eaxmov rax,[rbp]sub rbp,8; <?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjge _o2; (; SWAPxchg rax,[rbp]; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; )_o2:; -?or rax,raxjns _o3; (; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; ;ret; )_o3:; SHadd rbp,8mov [rbp],raxmov rax,YRES; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; -neg raxadd rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; ANDand rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; SHadd rbp,8mov [rbp],raxmov rax,YRES; >=?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjl _o4; (; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; ;ret; )_o4:; DUPadd rbp,8mov [rbp],rax; NEGneg rax; 63; OPTN >>sar rax,63; ANDand rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; -neg raxadd rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; SWAPxchg rax,[rbp]; A>add rbp,8mov [rbp],raxmov rax,r8; >Rpush raxmov rax,[rbp]sub rbp,8; setxycall w60; 1; OPTN +add rax,1; (_i5:; 1?or rax,raxjz _o5; 1; OPTN -sub rax,1; ink; OPTV A!movsxd rbx,dword[w53]mov dword[r8],ebx; SWadd rbp,8mov [rbp],raxmov rax,XRES; 2; OPTN <<shl rax,2; A+add r8,raxmov rax,[rbp]sub rbp,8; )jmp _i5_o5:; DROPmov rax,[rbp]sub rbp,8; R>add rbp,8mov [rbp],raxpop rax; >Amov r8,raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :whline  |1001490|l  ;  . I| calls:1 niv:1 len:61 ( ab --  )w66:;---------GEN; -?or rax,raxjns _o6; (; DROPmov rax,[rbp]sub rbp,8; 'opx; OPTAV !mov dword[w54],eaxmov rax,[rbp]sub rbp,8; ;ret; )_o6:; SHadd rbp,8mov [rbp],raxmov rax,YRES; >=?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjl _o7; (; DROPmov rax,[rbp]sub rbp,8; 'opx; OPTAV !mov dword[w54],eaxmov rax,[rbp]sub rbp,8; ;ret; )_o7:; opxadd rbp,8mov [rbp],raxmovsxd rax,dword[w54]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; DUPadd rbp,8mov [rbp],rax; 'opx; OPTAV !mov dword[w54],eaxmov rax,[rbp]sub rbp,8; <?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjge _o8; (; SWAPxchg rax,[rbp]; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; )_o8:; -?or rax,raxjns _o9; (; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; ;ret; )_o9:; SWadd rbp,8mov [rbp],raxmov rax,XRES; SWAPxchg rax,[rbp]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; -neg raxadd rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; ANDand rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; SWadd rbp,8mov [rbp],raxmov rax,XRES; >=?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjl _oA; (; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; ;ret; )_oA:; DUPadd rbp,8mov [rbp],rax; NEGneg rax; 63; OPTN >>sar rax,63; ANDand rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; -neg raxadd rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; A>add rbp,8mov [rbp],raxmov rax,r8; >Rpush raxmov rax,[rbp]sub rbp,8; setxycall w60; 1; OPTN +add rax,1; (_iB:; 1?or rax,raxjz _oB; 1; OPTN -sub rax,1; ink; OPTV A!+movsxd rbx,dword[w53]mov dword[r8],ebxadd r8,4; )jmp _iB_oB:; DROPmov rax,[rbp]sub rbp,8; R>add rbp,8mov [rbp],raxpop rax; >Amov r8,raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :li  |2090|l  ;  .  | calls:2 niv:0 len:12 ( a -- b )w67:;---------GEN; 8; OPTN <?cmp rax,8jge _oC; (; 0add rbp,8mov [rbp],raxxor rax,rax; NIPsub rbp,8; ;ret; )_oC:; SHadd rbp,8mov [rbp],raxmov rax,YRES; 2; OPTN -sub rax,2; NIPsub rbp,8; ;ret;--------------------------; :clip1  |1001080|l     .  | calls:1 niv:1 len:34 ( abcde -- fghij )w68:;---------GEN; licall w67; >Rpush raxmov rax,[rbp]sub rbp,8; 2SWAPxchg rax,[rbp-8]mov rcx,[rbp-8*2]xchg rcx,[rbp]mov [rbp-8*2],rcx; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; -neg raxadd rax,[rbp]sub rbp,8; R@add rbp,8mov [rbp],raxmov rax,[rsp]; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; -neg raxadd rax,[rbp]sub rbp,8; PICK4add rbp,8mov [rbp],raxmov rax,[rbp-8*4]; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; -neg raxadd rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; */mov rbx,raxmov rcx,[rbp]mov rax,[rbp-8]sub rbp,8*2cqoimul rcxidiv rbx; +add rax,[rbp]sub rbp,8; NIPsub rbp,8; R>add rbp,8mov [rbp],raxpop rax; SWAPxchg rax,[rbp]; DUPadd rbp,8mov [rbp],rax; SWadd rbp,8mov [rbp],raxmov rax,XRES; -neg raxadd rax,[rbp]sub rbp,8; NOTnot rax; $200000; OPTN ANDand rax,2097152; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; $100000; OPTN ANDand rax,1048576; ORor rax,[rbp]sub rbp,8; 20; OPTN >>sar rax,20; >Rpush raxmov rax,[rbp]sub rbp,8; 2SWAPxchg rax,[rbp-8]mov rcx,[rbp-8*2]xchg rcx,[rbp]mov [rbp-8*2],rcx; R>add rbp,8mov [rbp],raxpop rax; ;ret;--------------------------; :clip2  |1001080|l     .  | calls:1 niv:1 len:31 ( abcde -- fghij )w69:;---------GEN; licall w67; >Rpush raxmov rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; PICK4add rbp,8mov [rbp],raxmov rax,[rbp-8*4]; -neg raxadd rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; PICK4add rbp,8mov [rbp],raxmov rax,[rbp-8*4]; -neg raxadd rax,[rbp]sub rbp,8; R@add rbp,8mov [rbp],raxmov rax,[rsp]; PICK4add rbp,8mov [rbp],raxmov rax,[rbp-8*4]; -neg raxadd rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; */mov rbx,raxmov rcx,[rbp]mov rax,[rbp-8]sub rbp,8*2cqoimul rcxidiv rbx; +add rax,[rbp]sub rbp,8; NIPsub rbp,8; R>add rbp,8mov [rbp],raxpop rax; SWAPxchg rax,[rbp]; DUPadd rbp,8mov [rbp],rax; SWadd rbp,8mov [rbp],raxmov rax,XRES; -neg raxadd rax,[rbp]sub rbp,8; NOTnot rax; $200000; OPTN ANDand rax,2097152; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; $100000; OPTN ANDand rax,1048576; ORor rax,[rbp]sub rbp,8; 20; OPTN >>sar rax,20; ;ret;--------------------------; :li  |2090|l  ;  .  | calls:2 niv:0 len:12 ( a -- b )w6A:;---------GEN; 1; OPTN =?cmp rax,1jne _oD; (; 0add rbp,8mov [rbp],raxxor rax,rax; NIPsub rbp,8; ;ret; )_oD:; SWadd rbp,8mov [rbp],raxmov rax,XRES; 1; OPTN -sub rax,1; NIPsub rbp,8; ;ret;--------------------------; :clip3  |1001080|l     .  | calls:1 niv:1 len:20 ( abcde -- fghij )w6B:;---------GEN; licall w6A; >Rpush raxmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; DUPadd rbp,8mov [rbp],rax; PICK4add rbp,8mov [rbp],raxmov rax,[rbp-8*4]; -neg raxadd rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; PICK4add rbp,8mov [rbp],raxmov rax,[rbp-8*4]; -neg raxadd rax,[rbp]sub rbp,8; R@add rbp,8mov [rbp],raxmov rax,[rsp]; PICK4add rbp,8mov [rbp],raxmov rax,[rbp-8*4]; -neg raxadd rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; */mov rbx,raxmov rcx,[rbp]mov rax,[rbp-8]sub rbp,8*2cqoimul rcxidiv rbx; +add rax,[rbp]sub rbp,8; NIPsub rbp,8; R>add rbp,8mov [rbp],raxpop rax; 0add rbp,8mov [rbp],raxxor rax,rax; ;ret;--------------------------; :clip4  |1001080|l     .  | calls:1 niv:1 len:22 ( abcde -- fghij )w6C:;---------GEN; licall w6A; >Rpush raxmov rax,[rbp]sub rbp,8; 2SWAPxchg rax,[rbp-8]mov rcx,[rbp-8*2]xchg rcx,[rbp]mov [rbp-8*2],rcx; SWAPxchg rax,[rbp]; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; -neg raxadd rax,[rbp]sub rbp,8; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; -neg raxadd rax,[rbp]sub rbp,8; R@add rbp,8mov [rbp],raxmov rax,[rsp]; PICK4add rbp,8mov [rbp],raxmov rax,[rbp-8*4]; -neg raxadd rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; */mov rbx,raxmov rcx,[rbp]mov rax,[rbp-8]sub rbp,8*2cqoimul rcxidiv rbx; +add rax,[rbp]sub rbp,8; NIPsub rbp,8; R>add rbp,8mov [rbp],raxpop rax; 2SWAPxchg rax,[rbp-8]mov rcx,[rbp-8*2]xchg rcx,[rbp]mov [rbp-8*2],rcx; 0add rbp,8mov [rbp],raxxor rax,rax; ;ret;--------------------------; :clipline  |2001090|l  ;  .  | calls:1 niv:2 len:123 ( abcd -- efghi )w6D:;---------GEN; DUPadd rbp,8mov [rbp],rax; $400000; OPTN ANDand rax,4194304; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; SHadd rbp,8mov [rbp],raxmov rax,YRES; -neg raxadd rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; NOTnot rax; $800000; OPTN ANDand rax,8388608; ORor rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; DUPadd rbp,8mov [rbp],rax; $100000; OPTN ANDand rax,1048576; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; SWadd rbp,8mov [rbp],raxmov rax,XRES; -neg raxadd rax,[rbp]sub rbp,8; NOTnot rax; $200000; OPTN ANDand rax,2097152; ORor rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; ORor rax,[rbp]sub rbp,8; 20; OPTN >>sar rax,20; >Rpush raxmov rax,[rbp]sub rbp,8; 2SWAPxchg rax,[rbp-8]mov rcx,[rbp-8*2]xchg rcx,[rbp]mov [rbp-8*2],rcx; DUPadd rbp,8mov [rbp],rax; $400000; OPTN ANDand rax,4194304; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; SHadd rbp,8mov [rbp],raxmov rax,YRES; -neg raxadd rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; NOTnot rax; $800000; OPTN ANDand rax,8388608; ORor rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; DUPadd rbp,8mov [rbp],rax; $100000; OPTN ANDand rax,1048576; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; SWadd rbp,8mov [rbp],raxmov rax,XRES; -neg raxadd rax,[rbp]sub rbp,8; NOTnot rax; $200000; OPTN ANDand rax,2097152; ORor rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; ORor rax,[rbp]sub rbp,8; 20; OPTN >>sar rax,20; R>add rbp,8mov [rbp],raxpop rax; 2DUPmov rcx,[rbp]mov [rbp+8],raxmov [rbp+8*2],rcxadd rbp,8*2; ANDand rax,[rbp]sub rbp,8; 1?or rax,raxjz _oE; (; DROPmov rax,[rbp]sub rbp,8; ORor rax,[rbp]sub rbp,8; ;ret; )_oE:; DROPmov rax,[rbp]sub rbp,8; 2DUPmov rcx,[rbp]mov [rbp+8],raxmov [rbp+8*2],rcxadd rbp,8*2; ORor rax,[rbp]sub rbp,8; 0?or rax,raxjnz _oF; (; DROPmov rax,[rbp]sub rbp,8; ORor rax,[rbp]sub rbp,8; ;ret; )_oF:; DROPmov rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; 12; OPTN and?test rax,12jz _o10; (; clip2call w69; )_o10:; R>add rbp,8mov [rbp],raxpop rax; SWAPxchg rax,[rbp]; >Rpush raxmov rax,[rbp]sub rbp,8; 12; OPTN and?test rax,12jz _o11; (; clip1call w68; )_o11:; R>add rbp,8mov [rbp],raxpop rax; 2DUPmov rcx,[rbp]mov [rbp+8],raxmov [rbp+8*2],rcxadd rbp,8*2; ANDand rax,[rbp]sub rbp,8; 1?or rax,raxjz _o12; (; DROPmov rax,[rbp]sub rbp,8; ORor rax,[rbp]sub rbp,8; ;ret; )_o12:; DROPmov rax,[rbp]sub rbp,8; 2DUPmov rcx,[rbp]mov [rbp+8],raxmov [rbp+8*2],rcxadd rbp,8*2; ORor rax,[rbp]sub rbp,8; 0?or rax,raxjnz _o13; (; DROPmov rax,[rbp]sub rbp,8; ORor rax,[rbp]sub rbp,8; ;ret; )_o13:; DROPmov rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; 1?or rax,raxjz _o14; (; clip4call w6C; )_o14:; R>add rbp,8mov [rbp],raxpop rax; SWAPxchg rax,[rbp]; >Rpush raxmov rax,[rbp]sub rbp,8; 1?or rax,raxjz _o15; (; clip3call w6B; )_o15:; R>add rbp,8mov [rbp],raxpop rax; ORor rax,[rbp]sub rbp,8; ;ret;--------------------------; :nline21  |2001480|l     . I| calls:1 niv:2 len:52 ( abc --  )w6E:;---------GEN; 16; OPTN <<shl rax,16; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; /mov rbx,raxmov rax,[rbp]sub rbp,8cqoidiv rbx; 0add rbp,8mov [rbp],raxxor rax,rax; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; (_i16:; 1?or rax,raxjz _o16; 1; OPTN -sub rax,1; >Rpush raxmov rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; +add rax,[rbp]sub rbp,8; $ffff0000; OPTN and?mov rbx,4294901760test rax,rbxjz _o17; (; $ffff; OPTN ANDand rax,65535; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 2; OPTN <<shl rax,2; A+add r8,raxmov rax,[rbp]sub rbp,8; )_o17:; SWadd rbp,8mov [rbp],raxmov rax,XRES; 2; OPTN <<shl rax,2; A+add r8,raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 8; OPTN >>sar rax,8; DUPadd rbp,8mov [rbp],rax; inkadd rbp,8mov [rbp],raxmovsxd rax,dword[w53]; acpx!+call w61; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; 1; OPTN -sub rax,1; 2; OPTN <<shl rax,2; A+add r8,raxmov rax,[rbp]sub rbp,8; $ff; OPTN XORxor rax,255; inkadd rbp,8mov [rbp],raxmovsxd rax,dword[w53]; acpx!+call w61; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; NEGneg rax; 1; OPTN -sub rax,1; 2; OPTN <<shl rax,2; A+add r8,raxmov rax,[rbp]sub rbp,8; R>add rbp,8mov [rbp],raxpop rax; )jmp _i16_o16:; 4DROPmov rax,[rbp-8*3]sub rbp,8*4; ;ret;--------------------------; :LINE  |2007492|e  ;  . I| calls:7 niv:2 len:133 ( ab --  )w6F:;---------GEN; opy; OPTV =?cmp eax,dword[w55]jne _o18; (; whlinejmp w66; ;; )_o18:; SWAPxchg rax,[rbp]; opx; OPTV =?cmp eax,dword[w54]jne _o19; (; wvlinejmp w65; ;; )_o19:; SWAPxchg rax,[rbp]; opxadd rbp,8mov [rbp],raxmovsxd rax,dword[w54]; opyadd rbp,8mov [rbp],raxmovsxd rax,dword[w55]; 2OVERmov [rbp+8],raxadd rbp,8*2mov rbx,[rbp-8*4]mov [rbp],rbxmov rax,[rbp-8*3]; 'opy; OPTAV !mov dword[w55],eaxmov rax,[rbp]sub rbp,8; 'opx; OPTAV !mov dword[w54],eaxmov rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; <?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjge _o1A; (; 2SWAPxchg rax,[rbp-8]mov rcx,[rbp-8*2]xchg rcx,[rbp]mov [rbp-8*2],rcx; )_o1A:; -?or rax,raxjns _o1B; (; 4DROPmov rax,[rbp-8*3]sub rbp,8*4; ;ret; )_o1B:; 2SWAPxchg rax,[rbp-8]mov rcx,[rbp-8*2]xchg rcx,[rbp]mov [rbp-8*2],rcx; SHadd rbp,8mov [rbp],raxmov rax,YRES; 1; OPTN -sub rax,1; >=?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjl _o1C; (; 4DROPmov rax,[rbp-8*3]sub rbp,8*4; ;ret; )_o1C:; cliplinecall w6D; 1?or rax,raxjz _o1D; (; NIPsub rbp,8; 4DROPmov rax,[rbp-8*3]sub rbp,8*4; ;ret; )_o1D:; DROPmov rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; -neg raxadd rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; -neg raxadd rax,[rbp]sub rbp,8; 0?or rax,raxjnz _o1E; (; 4DROPmov rax,[rbp-8*3]sub rbp,8*4; ;ret; )_o1E:; 2SWAPxchg rax,[rbp-8]mov rcx,[rbp-8*2]xchg rcx,[rbp]mov [rbp-8*2],rcx; A>add rbp,8mov [rbp],raxmov rax,r8; >Rpush raxmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; setxycall w60; ink; OPTV A!movsxd rbx,dword[w53]mov dword[r8],ebx; SWAPxchg rax,[rbp]; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; 1; OPTN ORor rax,1; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; ABScqoadd rax,rdxxor rax,rdx; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; <?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjge _o1F; (; nline21call w6E; R>add rbp,8mov [rbp],raxpop rax; >Amov r8,raxmov rax,[rbp]sub rbp,8; ;ret; )_o1F:; SWAPxchg rax,[rbp]; 16; OPTN <<shl rax,16; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; /mov rbx,raxmov rax,[rbp]sub rbp,8cqoidiv rbx; 0add rbp,8mov [rbp],raxxor rax,rax; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; (_i20:; 1?or rax,raxjz _o20; 1; OPTN -sub rax,1; >Rpush raxmov rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; +add rax,[rbp]sub rbp,8; $ffff0000; OPTN and?mov rbx,4294901760test rax,rbxjz _o21; (; $ffff; OPTN ANDand rax,65535; SWadd rbp,8mov [rbp],raxmov rax,XRES; 2; OPTN <<shl rax,2; A+add r8,raxmov rax,[rbp]sub rbp,8; )_o21:; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 2; OPTN <<shl rax,2; A+add r8,raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 8; OPTN >>sar rax,8; DUPadd rbp,8mov [rbp],rax; inkadd rbp,8mov [rbp],raxmovsxd rax,dword[w53]; acpx!+call w61; SWadd rbp,8mov [rbp],raxmov rax,XRES; 1; OPTN -sub rax,1; 2; OPTN <<shl rax,2; A+add r8,raxmov rax,[rbp]sub rbp,8; $ff; OPTN XORxor rax,255; inkadd rbp,8mov [rbp],raxmovsxd rax,dword[w53]; acpx!+call w61; SWadd rbp,8mov [rbp],raxmov rax,XRES; 1; OPTN +add rax,1; NEGneg rax; 2; OPTN <<shl rax,2; A+add r8,raxmov rax,[rbp]sub rbp,8; R>add rbp,8mov [rbp],raxpop rax; )jmp _i20_o20:; 4DROPmov rax,[rbp-8*3]sub rbp,8*4; R>add rbp,8mov [rbp],raxpop rax; >Amov r8,raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :OP  |4082|e     .  | calls:4 niv:0 len:14 ( ab --  )w70:;---------GEN; 2DUPmov rcx,[rbp]mov [rbp+8],raxmov [rbp+8*2],rcxadd rbp,8*2; 2; OPTN <<shl rax,2; 'pyBPP; OPTAV !mov dword[w57],eaxmov rax,[rbp]sub rbp,8; 2; OPTN <<shl rax,2; 'pxBPP; OPTAV !mov dword[w56],eaxmov rax,[rbp]sub rbp,8; 'opy; OPTAV !mov dword[w55],eaxmov rax,[rbp]sub rbp,8; 'opx; OPTAV !mov dword[w54],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :CURVE  |30030B2|e  ;R .  | calls:3 niv:3 len:60 ( abcd --  )w71:;---------GEN; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; pxBPP; OPTV +movsxd rbx,dword[w56]add rax,rbx; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 1; OPTN <<shl rax,1; -neg raxadd rax,[rbp]sub rbp,8; ABScqoadd rax,rdxxor rax,rdx; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; pyBPP; OPTV +movsxd rbx,dword[w57]add rax,rbx; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 1; OPTN <<shl rax,1; -neg raxadd rax,[rbp]sub rbp,8; ABScqoadd rax,rdxxor rax,rdx; +add rax,[rbp]sub rbp,8; 4; OPTN <?cmp rax,4jge _o22; (; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; LINEjmp w6F; ;; )_o22:; DROPmov rax,[rbp]sub rbp,8; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; +add rax,[rbp]sub rbp,8; 1; OPTN >>sar rax,1; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; +add rax,[rbp]sub rbp,8; 1; OPTN >>sar rax,1; 2SWAPxchg rax,[rbp-8]mov rcx,[rbp-8*2]xchg rcx,[rbp]mov [rbp-8*2],rcx; opy; OPTV +movsxd rbx,dword[w55]add rax,rbx; 1; OPTN >>sar rax,1; SWAPxchg rax,[rbp]; opx; OPTV +movsxd rbx,dword[w54]add rax,rbx; 1; OPTN >>sar rax,1; SWAPxchg rax,[rbp]; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; +add rax,[rbp]sub rbp,8; 1; OPTN >>sar rax,1; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; +add rax,[rbp]sub rbp,8; 1; OPTN >>sar rax,1; 2SWAPxchg rax,[rbp-8]mov rcx,[rbp-8*2]xchg rcx,[rbp]mov [rbp-8*2],rcx; CURVEcall w71; CURVEjmp w71; ;;--------------------------; :cc3  |3004030|l  ;R    | calls:4 niv:3 len:113 ( abcdefg --  )w78:;---------GEN; 3; OPTN <?cmp rax,3jge _o23; (; DROPmov rax,[rbp]sub rbp,8; 4DROPmov rax,[rbp-8*3]sub rbp,8*4; LINEjmp w6F; ;; )_o23:; DROPmov rax,[rbp]sub rbp,8;--------------------------; :CURVE3  |4001082|e     .  | calls:1 niv:4 len:104 ( abcdef --  )w79:;---------GEN; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; +add rax,[rbp]sub rbp,8; 1; OPTN >>sar rax,1; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; +add rax,[rbp]sub rbp,8; 1; OPTN >>sar rax,1; 'by; OPTAV !mov dword[w77],eaxmov rax,[rbp]sub rbp,8; 'bx; OPTAV !mov dword[w76],eaxmov rax,[rbp]sub rbp,8; 'y1; OPTAV !mov dword[w73],eaxmov rax,[rbp]sub rbp,8; 'x1; OPTAV !mov dword[w72],eaxmov rax,[rbp]sub rbp,8; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; +add rax,[rbp]sub rbp,8; 1; OPTN >>sar rax,1; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; +add rax,[rbp]sub rbp,8; 1; OPTN >>sar rax,1; 2SWAPxchg rax,[rbp-8]mov rcx,[rbp-8*2]xchg rcx,[rbp]mov [rbp-8*2],rcx; 'y2; OPTAV !mov dword[w75],eaxmov rax,[rbp]sub rbp,8; 'x2; OPTAV !mov dword[w74],eaxmov rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; bx; OPTV +movsxd rbx,dword[w76]add rax,rbx; 1; OPTN >>sar rax,1; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; by; OPTV +movsxd rbx,dword[w77]add rax,rbx; 1; OPTN >>sar rax,1; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; x2; OPTV -movsxd rbx,dword[w74]sub rax,rbx; ABScqoadd rax,rdxxor rax,rdx; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; y2; OPTV -movsxd rbx,dword[w75]sub rax,rbx; ABScqoadd rax,rdxxor rax,rdx; +add rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; opxadd rbp,8mov [rbp],raxmovsxd rax,dword[w54]; x1; OPTV +movsxd rbx,dword[w72]add rax,rbx; 1; OPTN >>sar rax,1; opyadd rbp,8mov [rbp],raxmovsxd rax,dword[w55]; y1; OPTV +movsxd rbx,dword[w73]add rax,rbx; 1; OPTN >>sar rax,1; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; bx; OPTV +movsxd rbx,dword[w76]add rax,rbx; 1; OPTN >>sar rax,1; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; by; OPTV +movsxd rbx,dword[w77]add rax,rbx; 1; OPTN >>sar rax,1; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; x1; OPTV -movsxd rbx,dword[w72]sub rax,rbx; ABScqoadd rax,rdxxor rax,rdx; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; y1; OPTV -movsxd rbx,dword[w73]sub rax,rbx; ABScqoadd rax,rdxxor rax,rdx; +add rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; 2SWAPxchg rax,[rbp-8]mov rcx,[rbp-8*2]xchg rcx,[rbp]mov [rbp-8*2],rcx; >Rpush raxmov rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; +add rax,[rbp]sub rbp,8; 1; OPTN >>sar rax,1; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; +add rax,[rbp]sub rbp,8; 1; OPTN >>sar rax,1; 2SWAPxchg rax,[rbp-8]mov rcx,[rbp-8*2]xchg rcx,[rbp]mov [rbp-8*2],rcx; R>add rbp,8mov [rbp],raxpop rax; R>add rbp,8mov [rbp],raxpop rax; R>add rbp,8mov [rbp],raxpop rax; cc3call w78; R>add rbp,8mov [rbp],raxpop rax; cc3jmp w78; ;;--------------------------; :rlq  |3001490|l  ;  . I| calls:1 niv:3 len:17 ( ab --  )w81:;---------GEN; $f; OPTN >=?cmp rax,15jl _o24; (; DROPmov rax,[rbp]sub rbp,8; (_i25:; 1?or rax,raxjz _o25; 1; OPTN -sub rax,1; ink; OPTV A!+movsxd rbx,dword[w53]mov dword[r8],ebxadd r8,4; )jmp _i25_o25:; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o24:; 1?or rax,raxjz _o26; (; DUPadd rbp,8mov [rbp],rax; 4; OPTN <<shl rax,4; ORor rax,[rbp]sub rbp,8; $ff; OPTN XORxor rax,255; SWAPxchg rax,[rbp]; (_i27:; 1?or rax,raxjz _o27; 1; OPTN -sub rax,1; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; inkadd rbp,8mov [rbp],raxmovsxd rax,dword[w53]; acpx!+call w61; )jmp _i27_o27:; 2DROPmov rax,[rbp-8]sub rbp,8*2; ;ret; )_o26:; DROPmov rax,[rbp]sub rbp,8; 2; OPTN <<shl rax,2; A+add r8,raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :runlenSolid  |4001484|l'    . I| calls:1 niv:4 len:14 (  --  )w82:;---------GEN; 'runlenscanadd rbp,8mov [rbp],raxmov rax,w5F; (_i28:; @+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o28; DUPadd rbp,8mov [rbp],rax; 9; OPTN >>sar rax,9; $7ff; OPTN ANDand rax,2047; SWAPxchg rax,[rbp]; $1ff; OPTN ANDand rax,511; rlqcall w81; )jmp _i28_o28:; 2DROPmov rax,[rbp-8]sub rbp,8*2; -4; OPTN A+add r8,-4; ;ret;--------------------------; :heap!  |1001490|l  ;  . I| calls:1 niv:1 len:32 ( a --  )w99:;---------GEN; heapcntadd rbp,8mov [rbp],raxmovsxd rax,dword[w5C]; DUPadd rbp,8mov [rbp],rax; 1; OPTN +add rax,1; 'heapcnt; OPTAV !mov dword[w5C],eaxmov rax,[rbp]sub rbp,8; (_i29:; 1?or rax,raxjz _o29; DUPadd rbp,8mov [rbp],rax; 1; OPTN -sub rax,1; 1; OPTN >>sar rax,1; DUPadd rbp,8mov [rbp],rax; 2; OPTN <<shl rax,2; 'heapseg; OPTAV +add rax,w5B; @movsxd rax,dword [rax]; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; <?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjge _o2A; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; 2; OPTN <<shl rax,2; 'heapseg; OPTAV +add rax,w5B; !mov rcx,[rbp]mov dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; ;ret; )_o2A:; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; 2; OPTN <<shl rax,2; 'heapseg; OPTAV +add rax,w5B; !mov rcx,[rbp]mov dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; )jmp _i29_o29:; DROPmov rax,[rbp]sub rbp,8; 'heapseg; OPTAV !mov dword[w5B],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :heapl  |1001490|l  ;  . I| calls:1 niv:1 len:18 ( abc -- de )w9A:;---------GEN; heapcnt; OPTV >=?cmp eax,dword[w5C]jl _o2B; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o2B:; 2; OPTN <<shl rax,2; 'heapseg; OPTAV +add rax,w5B; @movsxd rax,dword [rax]; >?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjle _o2C; (; DROPmov rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; DUPadd rbp,8mov [rbp],rax; 2; OPTN <<shl rax,2; 'heapseg; OPTAV +add rax,w5B; @movsxd rax,dword [rax]; )_o2C:; ;ret;--------------------------; :moveDown  |1001490|l  ;  . I| calls:1 niv:1 len:35 ( ab --  )w9B:;---------GEN; (_i2D:; heapcntadd rbp,8mov [rbp],raxmovsxd rax,dword[w5C]; 1; OPTN >>sar rax,1; <?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjge _o2D; DUPadd rbp,8mov [rbp],rax; 1; OPTN <<shl rax,1; 1; OPTN +add rax,1; DUPadd rbp,8mov [rbp],rax; 2; OPTN <<shl rax,2; 'heapseg; OPTAV +add rax,w5B; @movsxd rax,dword [rax]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 1; OPTN +add rax,1; heaplcall w9A; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; >=?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjl _o2E; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; 2; OPTN <<shl rax,2; 'heapseg; OPTAV +add rax,w5B; !mov rcx,[rbp]mov dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; ;ret; )_o2E:; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; SWAPxchg rax,[rbp]; 2; OPTN <<shl rax,2; 'heapseg; OPTAV +add rax,w5B; !mov rcx,[rbp]mov dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; DROPmov rax,[rbp]sub rbp,8; )jmp _i2D_o2D:; 2; OPTN <<shl rax,2; 'heapseg; OPTAV +add rax,w5B; !mov rcx,[rbp]mov dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; ;ret;--------------------------; :heap@  |2001480|l     . I| calls:1 niv:2 len:20 (  -- a )w9C:;---------GEN; heapsegadd rbp,8mov [rbp],raxmovsxd rax,dword[w5B]; heapcntadd rbp,8mov [rbp],raxmovsxd rax,dword[w5C]; 1; OPTN -sub rax,1; 2; OPTN <<shl rax,2; 'heapseg; OPTAV +add rax,w5B; @movsxd rax,dword [rax]; 0add rbp,8mov [rbp],raxxor rax,rax; moveDowncall w9B; heapcntadd rbp,8mov [rbp],raxmovsxd rax,dword[w5C]; 1; OPTN -sub rax,1; 0?or rax,raxjnz _o2F; (; -1mov dword[w5B],-1; )_o2F:; 'heapcnt; OPTAV !mov dword[w5C],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :PLINEI  |2003090|l  ;  .  | calls:3 niv:2 len:95 ( ab --  )w9D:;---------GEN; pyBPP; OPTV =?cmp eax,dword[w57]jne _o30; (; DROPmov rax,[rbp]sub rbp,8; 'pxBPP; OPTAV !mov dword[w56],eaxmov rax,[rbp]sub rbp,8; ;ret; )_o30:; pxBPPadd rbp,8mov [rbp],raxmovsxd rax,dword[w56]; pyBPPadd rbp,8mov [rbp],raxmovsxd rax,dword[w57]; 2OVERmov [rbp+8],raxadd rbp,8*2mov rbx,[rbp-8*4]mov [rbp],rbxmov rax,[rbp-8*3]; 'pyBPP; OPTAV !mov dword[w57],eaxmov rax,[rbp]sub rbp,8; 'pxBPP; OPTAV !mov dword[w56],eaxmov rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; >?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjle _o31; (; 2SWAPxchg rax,[rbp-8]mov rcx,[rbp-8*2]xchg rcx,[rbp]mov [rbp-8*2],rcx; )_o31:; SHadd rbp,8mov [rbp],raxmov rax,YRES; 2; OPTN <<shl rax,2; >=?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjl _o32; (; 4DROPmov rax,[rbp-8*3]sub rbp,8*4; ;ret; )_o32:; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; 0; OPTN <=?cmp rax,0jg _o33; (; 4DROPmov rax,[rbp-8*3]sub rbp,8*4; ;ret; )_o33:; ymax; OPTV >?cmp eax,dword[w58]jle _o34; (; DUPadd rbp,8mov [rbp],rax; 'ymax; OPTAV !mov dword[w58],eaxmov rax,[rbp]sub rbp,8; )_o34:; >Rpush raxmov rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; 8; OPTN <<shl rax,8; SWAPxchg rax,[rbp]; 8; OPTN <<shl rax,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; -neg raxadd rax,[rbp]sub rbp,8; R>add rbp,8mov [rbp],raxpop rax; R@add rbp,8mov [rbp],raxmov rax,[rsp]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; -neg raxadd rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; SWAPxchg rax,[rbp]; /mov rbx,raxmov rax,[rbp]sub rbp,8cqoidiv rbx; SWAPxchg rax,[rbp]; -?or rax,raxjns _o35; (; NEGneg rax; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; *imul rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; +add rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; 0add rbp,8mov [rbp],raxxor rax,rax; )_o35:; DUPadd rbp,8mov [rbp],rax; 16; OPTN <<shl rax,16; segs>add rbp,8mov [rbp],raxmovsxd rax,dword[w5A]; 'segs; OPTAV -sub rax,w59; 4; OPTN >>sar rax,4; ORor rax,[rbp]sub rbp,8; heap!call w99; segs>; OPTV !+movsxd rbx,dword[w5A]mov dword[rbx],eaxadd rbx,4mov rax,rbx; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 1; OPTN >>sar rax,1; +add rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; !+mov rcx,[rbp]mov dword[rax],ecxadd rax,4sub rbp,8; !+mov rcx,[rbp]mov dword[rax],ecxadd rax,4sub rbp,8; R>add rbp,8mov [rbp],raxpop rax; SWAPxchg rax,[rbp]; !+mov rcx,[rbp]mov dword[rax],ecxadd rax,4sub rbp,8; 'segs>; OPTAV !mov dword[w5A],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :searchscan  |1001490|l  ;  . I| calls:1 niv:1 len:18 ( a -- b )w9F:;---------GEN; (_i36:; B@+add rbp,8mov [rbp],raxmovsxd rax,dword[r9]add r9,4; 1?or rax,raxjz _o36; 20; OPTN >>>shr rax,20; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; >?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjle _o37; (; DROPmov rax,[rbp]sub rbp,8; -8; OPTN B+add r9,-8; ;ret; )_o37:; DROPmov rax,[rbp]sub rbp,8; )jmp _i36_o36:; DROPmov rax,[rbp]sub rbp,8; -8; OPTN B+add r9,-8; ;ret;--------------------------; :inserta1  |3080|l     .  | calls:3 niv:0 len:15 (  --  )wA0:;---------GEN; B>add rbp,8mov [rbp],raxmov rax,r9; >Rpush raxmov rax,[rbp]sub rbp,8; B@+add rbp,8mov [rbp],raxmovsxd rax,dword[r9]add r9,4; (_i38:; B@add rbp,8mov [rbp],raxmovsxd rax,dword[r9]; 1?or rax,raxjz _o38; SWAPxchg rax,[rbp]; B!+mov dword[r9],eaxadd r9,4mov rax,[rbp]sub rbp,8; )jmp _i38_o38:; SWAPxchg rax,[rbp]; B!+mov dword[r9],eaxadd r9,4mov rax,[rbp]sub rbp,8; B!mov dword[r9],eaxmov rax,[rbp]sub rbp,8; R>add rbp,8mov [rbp],raxpop rax; >Bmov r9,raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :inserta2  |1080|l     .  | calls:1 niv:0 len:18 (  --  )wA1:;---------GEN; B>add rbp,8mov [rbp],raxmov rax,r9; >Rpush raxmov rax,[rbp]sub rbp,8; B@+add rbp,8mov [rbp],raxmovsxd rax,dword[r9]add r9,4; DUPadd rbp,8mov [rbp],rax; (_i39:; B@add rbp,8mov [rbp],raxmovsxd rax,dword[r9]; 1?or rax,raxjz _o39; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; B!+mov dword[r9],eaxadd r9,4mov rax,[rbp]sub rbp,8; )jmp _i39_o39:; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; B!+mov dword[r9],eaxadd r9,4mov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; B!+mov dword[r9],eaxadd r9,4mov rax,[rbp]sub rbp,8; B!mov dword[r9],eaxmov rax,[rbp]sub rbp,8; R>add rbp,8mov [rbp],raxpop rax; >Bmov r9,raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :add.1  |1004490|l  ;  . I| calls:4 niv:1 len:100 ( ab --  )wA2:;---------GEN; B@add rbp,8mov [rbp],raxmovsxd rax,dword[r9]; DUPadd rbp,8mov [rbp],rax; 9; OPTN >>sar rax,9; $7ff; OPTN ANDand rax,2047; 1; OPTN =?cmp rax,1jne _o3A; (; DROPmov rax,[rbp]sub rbp,8; NIPsub rbp,8; +add rax,[rbp]sub rbp,8; B!+mov dword[r9],eaxadd r9,4mov rax,[rbp]sub rbp,8; ;ret; )_o3A:; DROPmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 20; OPTN >>>shr rax,20; =?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjne _o3B; (; inserta1call wA0; DROPmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; $fff001ff; OPTN ANDmov rbx,4293919231and rax,rbx; +add rax,[rbp]sub rbp,8; $200; OPTN ORor rax,512; B!+mov dword[r9],eaxadd r9,4mov rax,[rbp]sub rbp,8; $100000; OPTN +add rax,1048576; $200; OPTN -sub rax,512; B!mov dword[r9],eaxmov rax,[rbp]sub rbp,8; ;ret; )_o3B:; B>add rbp,8mov [rbp],raxmov rax,r9; 4; OPTN +add rax,4; @movsxd rax,dword [rax]; 20; OPTN >>>shr rax,20; 1; OPTN -sub rax,1; =?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjne _o3C; (; inserta1call wA0; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; $200; OPTN -sub rax,512; B!+mov dword[r9],eaxadd r9,4mov rax,[rbp]sub rbp,8; 20; OPTN <<shl rax,20; $200; OPTN ORor rax,512; SWAPxchg rax,[rbp]; $1ff; OPTN ANDand rax,511; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; +add rax,[rbp]sub rbp,8; ORor rax,[rbp]sub rbp,8; B!+mov dword[r9],eaxadd r9,4mov rax,[rbp]sub rbp,8; ;ret; )_o3C:; inserta2call wA1; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; $fff001ff; OPTN ANDmov rbx,4293919231and rax,rbx; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; 20; OPTN >>>shr rax,20; -neg raxadd rax,[rbp]sub rbp,8; 9; OPTN <<shl rax,9; ORor rax,[rbp]sub rbp,8; B!+mov dword[r9],eaxadd r9,4mov rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; $1ff; OPTN ANDand rax,511; +add rax,[rbp]sub rbp,8; $200; OPTN ORor rax,512; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 20; OPTN <<shl rax,20; ORor rax,[rbp]sub rbp,8; B!+mov dword[r9],eaxadd r9,4mov rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; B@add rbp,8mov [rbp],raxmovsxd rax,dword[r9]; DUPadd rbp,8mov [rbp],rax; 20; OPTN >>>shr rax,20; SWAPxchg rax,[rbp]; 9; OPTN >>sar rax,9; $7ff; OPTN ANDand rax,2047; +add rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; -neg raxadd rax,[rbp]sub rbp,8; 9; OPTN <<shl rax,9; SWAPxchg rax,[rbp]; 20; OPTN <<shl rax,20; ORor rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; $1ff; OPTN ANDand rax,511; ORor rax,[rbp]sub rbp,8; B!mov dword[r9],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :add.len  |10024B0|l  ;R . I| calls:2 niv:1 len:62 ( ab --  )wA3:;---------GEN; 1; OPTN =?cmp rax,1jne _o3D; (; DROPmov rax,[rbp]sub rbp,8; $4add rbp,8mov [rbp],raxmov rax,4; SWAPxchg rax,[rbp]; add.1jmp wA2; ;; )_o3D:; B@add rbp,8mov [rbp],raxmovsxd rax,dword[r9]; 9; OPTN >>sar rax,9; $7ff; OPTN ANDand rax,2047; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; >?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjle _o3E; (; inserta1call wA0; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 20; OPTN <<shl rax,20; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 9; OPTN <<shl rax,9; ORor rax,[rbp]sub rbp,8; B@add rbp,8mov [rbp],raxmovsxd rax,dword[r9]; $1ff; OPTN ANDand rax,511; $4; OPTN +add rax,4; ORor rax,[rbp]sub rbp,8; B!+mov dword[r9],eaxadd r9,4mov rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; -neg raxadd rax,[rbp]sub rbp,8; 9; OPTN <<shl rax,9; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; +add rax,[rbp]sub rbp,8; 20; OPTN <<shl rax,20; ORor rax,[rbp]sub rbp,8; B@add rbp,8mov [rbp],raxmovsxd rax,dword[r9]; $1ff; OPTN ANDand rax,511; ORor rax,[rbp]sub rbp,8; B!mov dword[r9],eaxmov rax,[rbp]sub rbp,8; ;ret; )_o3E:; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; <?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjge _o3F; (; B@add rbp,8mov [rbp],raxmovsxd rax,dword[r9]; $4; OPTN +add rax,4; B!+mov dword[r9],eaxadd r9,4mov rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; +add rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; -neg raxadd rax,[rbp]sub rbp,8; add.lenjmp wA3; ;; )_o3F:; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; B@add rbp,8mov [rbp],raxmovsxd rax,dword[r9]; $4; OPTN +add rax,4; B!+mov dword[r9],eaxadd r9,4mov rax,[rbp]sub rbp,8; ;ret;--------------------------; :coverl  |2001090|l  ;  .  | calls:1 niv:2 len:20 ( abc -- de )wA4:;---------GEN; +?or rax,raxjs _o40; (; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; $3; OPTN ANDand rax,3; $4add rbp,8mov [rbp],raxmov rax,4; SWAPxchg rax,[rbp]; -neg raxadd rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; add.1call wA2; 1; OPTN +add rax,1; ;ret; )_o40:; DROPmov rax,[rbp]sub rbp,8; NIPsub rbp,8; 0add rbp,8mov [rbp],raxxor rax,rax; 'runlenscan; OPTAV >Bmov r9,w5F; ;ret;--------------------------; :limup  |1090|l  ;  .  | calls:1 niv:0 len:12 ( ab -- cde )wA5:;---------GEN; SWadd rbp,8mov [rbp],raxmov rax,XRES; >?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjle _o41; (; SWadd rbp,8mov [rbp],raxmov rax,XRES; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; -neg raxadd rax,[rbp]sub rbp,8; ;ret; )_o41:; DUPadd rbp,8mov [rbp],rax; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; -neg raxadd rax,[rbp]sub rbp,8; ;ret;--------------------------; :limdn  |2001090|l  ;  .  | calls:1 niv:2 len:11 ( abc -- d )wA6:;---------GEN; 0; OPTN >?cmp rax,0jle _o42; (; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; SWAPxchg rax,[rbp]; add.lenjmp wA3; ;; )_o42:; DROPmov rax,[rbp]sub rbp,8; NIPsub rbp,8; ;ret;--------------------------; :coverpixels  |2001090|l  ;  .  | calls:1 niv:2 len:57 ( ab --  )wA7:;---------GEN; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 2; OPTN >>sar rax,2; -?or rax,raxjns _o43; (; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; ;ret; )_o43:; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 2; OPTN >>sar rax,2; SWadd rbp,8mov [rbp],raxmov rax,XRES; >=?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjl _o44; (; 4DROPmov rax,[rbp-8*3]sub rbp,8*4; ;ret; )_o44:; searchscancall w9F; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; =?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjne _o45; (; NIPsub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; $3; OPTN ANDand rax,3; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; $3; OPTN ANDand rax,3; -neg raxadd rax,[rbp]sub rbp,8; 1?or rax,raxjz _o46; (; SWAPxchg rax,[rbp]; add.1jmp wA2; ;; )_o46:; 2DROPmov rax,[rbp-8]sub rbp,8*2; ;ret; )_o45:; coverlcall wA4; SWAPxchg rax,[rbp]; limupcall wA5; limdncall wA6; SWadd rbp,8mov [rbp],raxmov rax,XRES; <?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjge _o47; (; SWAPxchg rax,[rbp]; $3; OPTN ANDand rax,3; 1?or rax,raxjz _o48; (; SWAPxchg rax,[rbp]; add.1jmp wA2; ;; )_o48:; )_o47:; 2DROPmov rax,[rbp-8]sub rbp,8*2; ;ret;--------------------------; :fillcover  |3001080|l     .  | calls:1 niv:3 len:26 (  --  )wA8:;---------GEN; 'runlenscan; OPTAV >Bmov r9,w5F; 'activosadd rbp,8mov [rbp],raxmov rax,w5D; (_i49:; activos>add rbp,8mov [rbp],raxmovsxd rax,dword[w5E]; 4; OPTN -sub rax,4; <?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjge _o49; @+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; 4; OPTN +add rax,4; @movsxd rax,dword [rax]; 8; OPTN >>sar rax,8; SWAPxchg rax,[rbp]; @+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; 4; OPTN +add rax,4; @movsxd rax,dword [rax]; 8; OPTN >>sar rax,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; coverpixelscall wA7; )jmp _i49_o49:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :activosort  |2090|l  ;  .  | calls:2 niv:0 len:30 ( abc --  )wAA:;---------GEN; (_i4A:; 'activos; OPTAV >?cmp rax,w5Djle _o4A; 4; OPTN -sub rax,4; DUPadd rbp,8mov [rbp],rax; @movsxd rax,dword [rax]; DUPadd rbp,8mov [rbp],rax; 4; OPTN +add rax,4; @movsxd rax,dword [rax]; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; <?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjge _o4B; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; NIPsub rbp,8; 4; OPTN +add rax,4; !mov rcx,[rbp]mov dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; ;ret; )_o4B:; DROPmov rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 4; OPTN +add rax,4; !mov rcx,[rbp]mov dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; )jmp _i4A_o4A:; NIPsub rbp,8; !mov rcx,[rbp]mov dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; ;ret;--------------------------; :activosresort  |1001080|l     .  | calls:1 niv:1 len:15 ( ab -- c )wAC:;---------GEN; DUPadd rbp,8mov [rbp],rax; 4; OPTN +add rax,4; @+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; SWAPxchg rax,[rbp]; @movsxd rax,dword [rax]; +add rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 4; OPTN +add rax,4; !mov rcx,[rbp]mov dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; activosortjmp wAA; ;;--------------------------; :delc  |1090|l  ;  .  | calls:1 niv:0 len:11 ( abcde -- fgh )wAE:;---------GEN; PICK4add rbp,8mov [rbp],raxmov rax,[rbp-8*4]; >?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjle _o4C; (; DROPmov rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; !+mov rcx,[rbp]mov dword[rax],ecxadd rax,4sub rbp,8; SWAPxchg rax,[rbp]; ;ret; )_o4C:; 2DROPmov rax,[rbp-8]sub rbp,8*2; ;ret;--------------------------; :deletecopy  |1001080|l     .  | calls:1 niv:1 len:17 ( a --  )wAF:;---------GEN; DUPadd rbp,8mov [rbp],rax; 4; OPTN +add rax,4; (_i4D:; activos>; OPTV <?cmp eax,dword[w5E]jge _o4D; @+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; DUPadd rbp,8mov [rbp],rax; 12; OPTN +add rax,12; @movsxd rax,dword [rax]; delccall wAE; )jmp _i4D_o4D:; DROPmov rax,[rbp]sub rbp,8; 'activos>; OPTAV !mov dword[w5E],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :deleteline  |2001090|l  ;  .  | calls:1 niv:2 len:22 ( a -- b )wB0:;---------GEN; 'activosadd rbp,8mov [rbp],raxmov rax,w5D; (_i4E:; activos>; OPTV <?cmp eax,dword[w5E]jge _o4E; DUPadd rbp,8mov [rbp],rax; @movsxd rax,dword [rax]; 12; OPTN +add rax,12; @movsxd rax,dword [rax]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; =?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjne _o4F; (; DROPmov rax,[rbp]sub rbp,8; deletecopyjmp wAF; ;; )_o4F:; DROPmov rax,[rbp]sub rbp,8; 4; OPTN +add rax,4; )jmp _i4E_o4E:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :POLI  |1002492|e  ;  . I| calls:2 niv:1 len:75 (  --  )wB2:;---------GEN; ymaxadd rbp,8mov [rbp],raxmovsxd rax,dword[w58]; -?or rax,raxjns _o50; (; DROPmov rax,[rbp]sub rbp,8; 'segsadd rbp,8mov [rbp],raxmov rax,w59; 'segs>; OPTAV !mov dword[w5A],eaxmov rax,[rbp]sub rbp,8; -1mov dword[w58],-1; 0mov dword[w5C],0; ;ret; )_o50:; A>add rbp,8mov [rbp],raxmov rax,r8; B>add rbp,8mov [rbp],raxmov rax,r9; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; SHadd rbp,8mov [rbp],raxmov rax,YRES; 2; OPTN <<shl rax,2; >?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjle _o51; (; SHadd rbp,8mov [rbp],raxmov rax,YRES; 2; OPTN <<shl rax,2; 'ymax; OPTAV !mov dword[w58],eaxmov rax,[rbp]sub rbp,8; )_o51:; DROPmov rax,[rbp]sub rbp,8; 'activosadd rbp,8mov [rbp],raxmov rax,w5D; 'activos>; OPTAV !mov dword[w5E],eaxmov rax,[rbp]sub rbp,8; heapsegadd rbp,8mov [rbp],raxmovsxd rax,dword[w5B]; 16; OPTN >>sar rax,16; DUPadd rbp,8mov [rbp],rax; 0add rbp,8mov [rbp],raxxor rax,rax; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 2; OPTN >>sar rax,2; setxycall w60; (_i52:; ymax; OPTV <?cmp eax,dword[w58]jge _o52; 0add rbp,8mov [rbp],raxxor rax,rax; SWadd rbp,8mov [rbp],raxmov rax,XRES; 1; OPTN +add rax,1; 9; OPTN <<shl rax,9; 'runlenscan; OPTAV !+mov rcx,w5Fmov dword[rcx],eaxadd rcx,4mov rax,rcx; !mov rcx,[rbp]mov dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; $4add rbp,8mov [rbp],raxmov rax,4; (_i53:; 1?or rax,raxjz _o53; 1; OPTN -sub rax,1; >Rpush raxmov rax,[rbp]sub rbp,8; (_i54:; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; =?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjne _o54; NIPsub rbp,8; heap@call w9C; $ffff; OPTN ANDand rax,65535; 4; OPTN <<shl rax,4; 'segs; OPTAV +add rax,w59; DUPadd rbp,8mov [rbp],rax; 4; OPTN +add rax,4; @movsxd rax,dword [rax]; activos>add rbp,8mov [rbp],raxmovsxd rax,dword[w5E]; DUPadd rbp,8mov [rbp],rax; 4; OPTN +add rax,4; 'activos>; OPTAV !mov dword[w5E],eaxmov rax,[rbp]sub rbp,8; activosortcall wAA; heapsegadd rbp,8mov [rbp],raxmovsxd rax,dword[w5B]; 16; OPTN >>sar rax,16; SWAPxchg rax,[rbp]; )jmp _i54_o54:; fillcovercall wA8; 1; OPTN +add rax,1; deletelinecall wB0; 'activosadd rbp,8mov [rbp],raxmov rax,w5D; (_i55:; activos>; OPTV <?cmp eax,dword[w5E]jge _o55; DUPadd rbp,8mov [rbp],rax; @movsxd rax,dword [rax]; activosresortcall wAC; 4; OPTN +add rax,4; )jmp _i55_o55:; DROPmov rax,[rbp]sub rbp,8; R>add rbp,8mov [rbp],raxpop rax; )jmp _i53_o53:; DROPmov rax,[rbp]sub rbp,8; 'runlenSolid; OPTAW EXcall w82; )jmp _i52_o52:; 2DROPmov rax,[rbp-8]sub rbp,8*2; >Bmov r9,raxmov rax,[rbp]sub rbp,8; >Amov r8,raxmov rax,[rbp]sub rbp,8; 'segsadd rbp,8mov [rbp],raxmov rax,w59; 'segs>; OPTAV !mov dword[w5A],eaxmov rax,[rbp]sub rbp,8; -1mov dword[w58],-1; 0mov dword[w5C],0; ;ret;--------------------------; :PCURVEI  |30030B0|l  ;R .  | calls:3 niv:3 len:60 ( abcd --  )wB3:;---------GEN; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; pxBPP; OPTV +movsxd rbx,dword[w56]add rax,rbx; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 1; OPTN <<shl rax,1; -neg raxadd rax,[rbp]sub rbp,8; ABScqoadd rax,rdxxor rax,rdx; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; pyBPP; OPTV +movsxd rbx,dword[w57]add rax,rbx; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 1; OPTN <<shl rax,1; -neg raxadd rax,[rbp]sub rbp,8; ABScqoadd rax,rdxxor rax,rdx; +add rax,[rbp]sub rbp,8; 8; OPTN <?cmp rax,8jge _o56; (; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; PLINEIjmp w9D; ;; )_o56:; DROPmov rax,[rbp]sub rbp,8; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; +add rax,[rbp]sub rbp,8; 1; OPTN >>sar rax,1; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; +add rax,[rbp]sub rbp,8; 1; OPTN >>sar rax,1; 2SWAPxchg rax,[rbp-8]mov rcx,[rbp-8*2]xchg rcx,[rbp]mov [rbp-8*2],rcx; pyBPP; OPTV +movsxd rbx,dword[w57]add rax,rbx; 1; OPTN >>sar rax,1; SWAPxchg rax,[rbp]; pxBPP; OPTV +movsxd rbx,dword[w56]add rax,rbx; 1; OPTN >>sar rax,1; SWAPxchg rax,[rbp]; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; +add rax,[rbp]sub rbp,8; 1; OPTN >>sar rax,1; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; +add rax,[rbp]sub rbp,8; 1; OPTN >>sar rax,1; 2SWAPxchg rax,[rbp-8]mov rcx,[rbp-8*2]xchg rcx,[rbp]mov [rbp-8*2],rcx; PCURVEIcall wB3; PCURVEIjmp wB3; ;;--------------------------; :c3  |3004030|l  ;R    | calls:4 niv:3 len:113 ( abcdefg --  )wB4:;---------GEN; 3; OPTN <?cmp rax,3jge _o57; (; DROPmov rax,[rbp]sub rbp,8; 4DROPmov rax,[rbp-8*3]sub rbp,8*4; PLINEIjmp w9D; ;; )_o57:; DROPmov rax,[rbp]sub rbp,8;--------------------------; :PCURVE3I  |4001080|l     .  | calls:1 niv:4 len:104 ( abcdef --  )wB5:;---------GEN; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; +add rax,[rbp]sub rbp,8; 1; OPTN >>sar rax,1; 'bx; OPTAV !mov dword[w76],eaxmov rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; +add rax,[rbp]sub rbp,8; 1; OPTN >>sar rax,1; 'by; OPTAV !mov dword[w77],eaxmov rax,[rbp]sub rbp,8; 'y1; OPTAV !mov dword[w73],eaxmov rax,[rbp]sub rbp,8; 'x1; OPTAV !mov dword[w72],eaxmov rax,[rbp]sub rbp,8; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; +add rax,[rbp]sub rbp,8; 1; OPTN >>sar rax,1; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; +add rax,[rbp]sub rbp,8; 1; OPTN >>sar rax,1; 2SWAPxchg rax,[rbp-8]mov rcx,[rbp-8*2]xchg rcx,[rbp]mov [rbp-8*2],rcx; 'y2; OPTAV !mov dword[w75],eaxmov rax,[rbp]sub rbp,8; 'x2; OPTAV !mov dword[w74],eaxmov rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; bx; OPTV +movsxd rbx,dword[w76]add rax,rbx; 1; OPTN >>sar rax,1; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; by; OPTV +movsxd rbx,dword[w77]add rax,rbx; 1; OPTN >>sar rax,1; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; x2; OPTV -movsxd rbx,dword[w74]sub rax,rbx; ABScqoadd rax,rdxxor rax,rdx; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; y2; OPTV -movsxd rbx,dword[w75]sub rax,rbx; ABScqoadd rax,rdxxor rax,rdx; +add rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; pxBPPadd rbp,8mov [rbp],raxmovsxd rax,dword[w56]; x1; OPTV +movsxd rbx,dword[w72]add rax,rbx; 1; OPTN >>sar rax,1; pyBPPadd rbp,8mov [rbp],raxmovsxd rax,dword[w57]; y1; OPTV +movsxd rbx,dword[w73]add rax,rbx; 1; OPTN >>sar rax,1; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; bx; OPTV +movsxd rbx,dword[w76]add rax,rbx; 1; OPTN >>sar rax,1; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; by; OPTV +movsxd rbx,dword[w77]add rax,rbx; 1; OPTN >>sar rax,1; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; x1; OPTV -movsxd rbx,dword[w72]sub rax,rbx; ABScqoadd rax,rdxxor rax,rdx; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; y1; OPTV -movsxd rbx,dword[w73]sub rax,rbx; ABScqoadd rax,rdxxor rax,rdx; +add rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; 2SWAPxchg rax,[rbp-8]mov rcx,[rbp-8*2]xchg rcx,[rbp]mov [rbp-8*2],rcx; >Rpush raxmov rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; +add rax,[rbp]sub rbp,8; 1; OPTN >>sar rax,1; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; +add rax,[rbp]sub rbp,8; 1; OPTN >>sar rax,1; 2SWAPxchg rax,[rbp-8]mov rcx,[rbp-8*2]xchg rcx,[rbp]mov [rbp-8*2],rcx; R>add rbp,8mov [rbp],raxpop rax; R>add rbp,8mov [rbp],raxpop rax; R>add rbp,8mov [rbp],raxpop rax; c3call wB4; R>add rbp,8mov [rbp],raxpop rax; c3jmp wB4; ;;--------------------------; :PCURVE  |4001082|e     .  | calls:1 niv:4 len:16 ( abcd --  )wB7:;---------GEN; >Rpush raxmov rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; 2; OPTN <<shl rax,2; R>add rbp,8mov [rbp],raxpop rax; 2; OPTN <<shl rax,2; R>add rbp,8mov [rbp],raxpop rax; 2; OPTN <<shl rax,2; R>add rbp,8mov [rbp],raxpop rax; 2; OPTN <<shl rax,2; PCURVEIjmp wB3; ;;--------------------------; :PCURVE3  |5001082|e     .  | calls:1 niv:5 len:24 ( abcdef --  )wB8:;---------GEN; >Rpush raxmov rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; 2; OPTN <<shl rax,2; R>add rbp,8mov [rbp],raxpop rax; 2; OPTN <<shl rax,2; R>add rbp,8mov [rbp],raxpop rax; 2; OPTN <<shl rax,2; R>add rbp,8mov [rbp],raxpop rax; 2; OPTN <<shl rax,2; R>add rbp,8mov [rbp],raxpop rax; 2; OPTN <<shl rax,2; R>add rbp,8mov [rbp],raxpop rax; 2; OPTN <<shl rax,2; PCURVE3Ijmp wB5; ;;--------------------------; :onshow  |1001082|e     .  | calls:1 niv:1 len:17 ( a --  )w119:;---------GEN; 0mov dword[w118],0; (_i58:; .exitadd rbp,8mov [rbp],raxmovsxd rax,dword[w118]; 0?or rax,raxjnz _o58; DROPmov rax,[rbp]sub rbp,8; UPDATEcall SYSREDRAW; DUPadd rbp,8mov [rbp],rax; EXmov rcx,raxmov rax,[rbp]sub rbp,8call rcx; REDRAWcall SYSUPDATE; )jmp _i58_o58:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 0mov dword[w118],0; ;ret;--------------------------; :sign  |2090|l  ;  .  | calls:2 niv:0 len:12 ( ab -- c )w13C:;---------GEN; -?or rax,raxjns _o59; (; DROPmov rax,[rbp]sub rbp,8; $2dadd rbp,8mov [rbp],raxmov rax,45; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; ;ret; )_o59:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; ;ret;--------------------------; :.d  |1003492|e  ;  . I| calls:3 niv:1 len:26 ( a -- b )w13D:;---------GEN; DUPadd rbp,8mov [rbp],rax; ABScqoadd rax,rdxxor rax,rdx; -?or rax,raxjns _o5A; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; "-9223372036854775808"add rbp,8mov [rbp],raxmov rax,str8C94; ;ret; )_o5A:; 'mbuffadd rbp,8mov [rbp],raxmov rax,w13A; 64; OPTN +add rax,64; 0add rbp,8mov [rbp],raxxor rax,rax; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; (_i5B:; 10/modcall w3A; $30; OPTN +add rax,48; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; SWAPxchg rax,[rbp]; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; 1?or rax,raxjz _o5B; )jmp _i5B_o5B:; DROPmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; signjmp w13C; ;;--------------------------; :.b  |1001482|e     . I| calls:1 niv:1 len:22 ( a -- b )w13E:;---------GEN; 'mbuffadd rbp,8mov [rbp],raxmov rax,w13A; 64; OPTN +add rax,64; 0add rbp,8mov [rbp],raxxor rax,rax; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; (_i5C:; DUPadd rbp,8mov [rbp],rax; $1; OPTN ANDand rax,1; $30; OPTN +add rax,48; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; SWAPxchg rax,[rbp]; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; 1; OPTN >>>shr rax,1; 1?or rax,raxjz _o5C; )jmp _i5C_o5C:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; ;ret;--------------------------; :.h  |1001482|e     . I| calls:1 niv:1 len:28 ( a -- b )w13F:;---------GEN; 'mbuffadd rbp,8mov [rbp],raxmov rax,w13A; 64; OPTN +add rax,64; 0add rbp,8mov [rbp],raxxor rax,rax; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; (_i5D:; DUPadd rbp,8mov [rbp],rax; $f; OPTN ANDand rax,15; $30; OPTN +add rax,48; $39; OPTN >?cmp rax,57jle _o5E; (; 7; OPTN +add rax,7; )_o5E:; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; SWAPxchg rax,[rbp]; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; 4; OPTN >>>shr rax,4; 1?or rax,raxjz _o5D; )jmp _i5D_o5D:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; ;ret;--------------------------; :.o  |1001482|e     . I| calls:1 niv:1 len:22 ( a -- b )w140:;---------GEN; 'mbuffadd rbp,8mov [rbp],raxmov rax,w13A; 64; OPTN +add rax,64; 0add rbp,8mov [rbp],raxxor rax,rax; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; (_i5F:; DUPadd rbp,8mov [rbp],rax; $7; OPTN ANDand rax,7; $30; OPTN +add rax,48; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; SWAPxchg rax,[rbp]; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; 3; OPTN >>>shr rax,3; 1?or rax,raxjz _o5F; )jmp _i5F_o5F:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; ;ret;--------------------------; :.f  |1001482|e     . I| calls:1 niv:1 len:49 ( a -- b )w141:;---------GEN; 'mbuffadd rbp,8mov [rbp],raxmov rax,w13A; 64; OPTN +add rax,64; 0add rbp,8mov [rbp],raxxor rax,rax; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; 1; OPTN -sub rax,1; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; $ffff; OPTN ANDand rax,65535; 10000add rbp,8mov [rbp],raxmov rax,10000; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; 10000; OPTN +add rax,10000; (_i60:; 10/modcall w3A; $30; OPTN +add rax,48; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; SWAPxchg rax,[rbp]; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; 1?or rax,raxjz _o60; )jmp _i60_o60:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; $2eadd rbp,8mov [rbp],raxmov rax,46; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; 1; OPTN -sub rax,1; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; ABScqoadd rax,rdxxor rax,rdx; 16; OPTN >>sar rax,16; (_i61:; 10/modcall w3A; $30; OPTN +add rax,48; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; SWAPxchg rax,[rbp]; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; 1?or rax,raxjz _o61; )jmp _i61_o61:; DROPmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; signjmp w13C; ;;--------------------------; :mark  |2082|e     .  | calls:2 niv:0 len:14 (  --  )w14D:;---------GEN; hereadd rbp,8mov [rbp],raxmovsxd rax,dword[w14A]; 0?or rax,raxjnz _o62; (; MEMadd rbp,8mov [rbp],raxmov rax,[FREE_MEM]; DUPadd rbp,8mov [rbp],rax; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; NIPsub rbp,8; )_o62:; memmap>; OPTV !+movsxd rbx,dword[w14C]mov dword[rbx],eaxadd rbx,4mov rax,rbx; 'memmap>; OPTAV !mov dword[w14C],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :empty  |1092|e  ;  .  | calls:1 niv:0 len:19 (  --  )w14E:;---------GEN; memmap>add rbp,8mov [rbp],raxmovsxd rax,dword[w14C]; 'memmap; OPTAV =?cmp rax,w14Bjne _o63; (; DROPmov rax,[rbp]sub rbp,8; MEMadd rbp,8mov [rbp],raxmov rax,[FREE_MEM]; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; ;ret; )_o63:; 4; OPTN -sub rax,4; DUPadd rbp,8mov [rbp],rax; 'memmap>; OPTAV !mov dword[w14C],eaxmov rax,[rbp]sub rbp,8; @movsxd rax,dword [rax]; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :,s  |8082|e     .  | calls:8 niv:0 len:13 ( a --  )w158:;---------GEN; hereadd rbp,8mov [rbp],raxmovsxd rax,dword[w14A]; SWAPxchg rax,[rbp]; (_i64:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o64; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; C!+mov rcx,[rbp]mov byte[rax],cladd rax,1sub rbp,8; SWAPxchg rax,[rbp]; )jmp _i64_o64:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :,w  |1082|e     .  | calls:1 niv:0 len:16 ( a --  )w159:;---------GEN; hereadd rbp,8mov [rbp],raxmovsxd rax,dword[w14A]; SWAPxchg rax,[rbp]; (_i65:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; $ff; OPTN ANDand rax,255; 32; OPTN >?cmp rax,32jle _o65; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; C!+mov rcx,[rbp]mov byte[rax],cladd rax,1sub rbp,8; SWAPxchg rax,[rbp]; )jmp _i65_o65:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :,l  |1092|e  ;  .  | calls:1 niv:0 len:27 ( a --  )w15A:;---------GEN; hereadd rbp,8mov [rbp],raxmovsxd rax,dword[w14A]; SWAPxchg rax,[rbp]; (_i66:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o66; 10; OPTN =?cmp rax,10jne _o67; (; 3; OPTN +add rax,3; )_o67:; 13; OPTN =?cmp rax,13jne _o68; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; ;ret; )_o68:; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; C!+mov rcx,[rbp]mov byte[rax],cladd rax,1sub rbp,8; SWAPxchg rax,[rbp]; )jmp _i66_o66:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :c0  |1084|l'    .  | calls:1 niv:0 len:1 (  --  )w164:;---------GEN; ;ret;--------------------------; :c1  |1084|l'    .  | calls:1 niv:0 len:1 (  --  )w165:;---------GEN; ;ret;--------------------------; :c2  |1001084|l'    .  | calls:1 niv:1 len:4 ( ab -- c )w166:;---------GEN; SWAPxchg rax,[rbp]; .bcall w13E; ,sjmp w158; ;;--------------------------; :c3  |1001094|l' ;  .  | calls:1 niv:1 len:8 ( ab -- c )w167:;---------GEN; SWAPxchg rax,[rbp]; 0?or rax,raxjnz _o69; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o69:; ,sjmp w158; ;;--------------------------; :c4  |1001084|l'    .  | calls:1 niv:1 len:4 ( ab -- c )w168:;---------GEN; SWAPxchg rax,[rbp]; .dcall w13D; ,sjmp w158; ;;--------------------------; :c5  |1001484|l'    . I| calls:1 niv:1 len:3 (  --  )w169:;---------GEN; $25add rbp,8mov [rbp],raxmov rax,37; here; OPTV C!+movsxd rbx,dword[w14A]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :c6  |1001084|l'    .  | calls:1 niv:1 len:4 ( ab -- c )w16A:;---------GEN; SWAPxchg rax,[rbp]; .fcall w141; ,sjmp w158; ;;--------------------------; :c7  |1001094|l' ;  .  | calls:1 niv:1 len:8 ( ab -- c )w16B:;---------GEN; SWAPxchg rax,[rbp]; 0?or rax,raxjnz _o6A; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o6A:; ,wjmp w159; ;;--------------------------; :c8  |1001084|l'    .  | calls:1 niv:1 len:4 ( ab -- c )w16C:;---------GEN; SWAPxchg rax,[rbp]; .hcall w13F; ,sjmp w158; ;;--------------------------; :c9  |1001084|l'    .  | calls:1 niv:1 len:6 ( ab -- c )w16D:;---------GEN; SWAPxchg rax,[rbp]; 16; OPTN >>sar rax,16; .dcall w13D; ,sjmp w158; ;;--------------------------; :ca  |1001084|l'    .  | calls:1 niv:1 len:6 ( ab -- c )w16E:;---------GEN; SWAPxchg rax,[rbp]; $ffff; OPTN ANDand rax,65535; .dcall w13D; ,sjmp w158; ;;--------------------------; :cb  |1001484|l'    . I| calls:1 niv:1 len:3 ( ab -- c )w16F:;---------GEN; SWAPxchg rax,[rbp]; here; OPTV C!+movsxd rbx,dword[w14A]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :cc  |1001094|l' ;  .  | calls:1 niv:1 len:8 ( ab -- c )w170:;---------GEN; SWAPxchg rax,[rbp]; 0?or rax,raxjnz _o6B; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o6B:; ,ljmp w15A; ;;--------------------------; :cd  |1084|l'    .  | calls:1 niv:0 len:1 (  --  )w171:;---------GEN; ;ret;--------------------------; :ce  |1001484|l'    . I| calls:1 niv:1 len:3 (  --  )w172:;---------GEN; 13add rbp,8mov [rbp],raxmov rax,13; here; OPTV C!+movsxd rbx,dword[w14A]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :cf  |1001084|l'    .  | calls:1 niv:1 len:4 ( ab -- c )w173:;---------GEN; SWAPxchg rax,[rbp]; .ocall w140; ,sjmp w158; ;;--------------------------; :,emit  |7001490|l  ;  . I| calls:1 niv:7 len:17 ( ab -- c )w175:;---------GEN; $25; OPTN <>?cmp rax,37je _o6C; (; here; OPTV C!+movsxd rbx,dword[w14A]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; ;ret; )_o6C:; DROPmov rax,[rbp]sub rbp,8; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; $f; OPTN ANDand rax,15; 2; OPTN <<shl rax,2; 'control; OPTAV +add rax,w174; @movsxd rax,dword [rax]; EXmov rcx,raxmov rax,[rbp]sub rbp,8jmp rcx; ;;--------------------------; :setpix  |1090|l  ;  .  | calls:1 niv:0 len:9 ( ab -- c )w1E2:;---------GEN; nand?mov rbx,raxmov rax,[rbp]sub rbp,8test rax,rbxjnz _o6D; (; 4; OPTN A+add r8,4; ;ret; )_o6D:; ink; OPTV A!+movsxd rbx,dword[w53]mov dword[r8],ebxadd r8,4; ;ret;--------------------------; :char8i  |1001486|e'    . I| calls:1 niv:1 len:40 ( a --  )w1E3:;---------GEN; ccxadd rbp,8mov [rbp],raxmovsxd rax,dword[w1B4]; ccyadd rbp,8mov [rbp],raxmovsxd rax,dword[w1B5]; SWadd rbp,8mov [rbp],raxmov rax,XRES; *imul rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; 2; OPTN <<shl rax,2; VFRAMEadd rbp,8mov [rbp],raxmov rax,[SYSFRAME]; +add rax,[rbp]sub rbp,8; >Amov r8,raxmov rax,[rbp]sub rbp,8; 3; OPTN <<shl rax,3; DUPadd rbp,8mov [rbp],rax; 1; OPTN >>sar rax,1; +add rax,[rbp]sub rbp,8; 'rom8x12; OPTAV +add rax,w1E1; SWadd rbp,8mov [rbp],raxmov rax,XRES; 8; OPTN -sub rax,8; 2; OPTN <<shl rax,2; SWAPxchg rax,[rbp]; 12add rbp,8mov [rbp],raxmov rax,12; (_i6E:; 1?or rax,raxjz _o6E; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; $80add rbp,8mov [rbp],raxmov rax,128; (_i6F:; 1?or rax,raxjz _o6F; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; setpixcall w1E2; 1; OPTN >>sar rax,1; )jmp _i6F_o6F:; 2DROPmov rax,[rbp-8]sub rbp,8*2; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; A+add r8,raxmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; )jmp _i6E_o6E:; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; ;ret;--------------------------; :size8i  |1086|e'    .  | calls:1 niv:0 len:3 ( a -- b )w1E4:;---------GEN; 8add rbp,8mov [rbp],raxmov rax,8; NIPsub rbp,8; ;ret;--------------------------; :alp!+  |2090|l  ;  .  | calls:2 niv:0 len:56 ( a --  )w220:;---------GEN; DUPadd rbp,8mov [rbp],rax; 24; OPTN >>sar rax,24; $ff; OPTN ANDand rax,255; 0?or rax,raxjnz _o70; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; 4; OPTN A+add r8,4; ;ret; )_o70:; $ff; OPTN =?cmp rax,255jne _o71; (; DROPmov rax,[rbp]sub rbp,8; A!+mov dword[r8],eaxadd r8,4mov rax,[rbp]sub rbp,8; ;ret; )_o71:; A@add rbp,8mov [rbp],raxmovsxd rax,dword[r8]; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; $ff00ff; OPTN ANDand rax,16711935; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; $ff00ff; OPTN ANDand rax,16711935; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; -neg raxadd rax,[rbp]sub rbp,8; PICK4add rbp,8mov [rbp],raxmov rax,[rbp-8*4]; *imul rax,[rbp]sub rbp,8; 8; OPTN >>sar rax,8; +add rax,[rbp]sub rbp,8; $ff00ff; OPTN ANDand rax,16711935; >Rpush raxmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; $ff00; OPTN ANDand rax,65280; SWAPxchg rax,[rbp]; $ff00; OPTN ANDand rax,65280; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; -neg raxadd rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; *imul rax,[rbp]sub rbp,8; 8; OPTN >>sar rax,8; +add rax,[rbp]sub rbp,8; $ff00; OPTN ANDand rax,65280; R>add rbp,8mov [rbp],raxpop rax; ORor rax,[rbp]sub rbp,8; A!+mov dword[r8],eaxadd r8,4mov rax,[rbp]sub rbp,8; ;ret;--------------------------; :clipw  |1090|l  ;  .  | calls:1 niv:0 len:10 ( ab -- cde )w223:;---------GEN; SWadd rbp,8mov [rbp],raxmov rax,XRES; >?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjle _o72; (; SWadd rbp,8mov [rbp],raxmov rax,XRES; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; -neg raxadd rax,[rbp]sub rbp,8; ;ret; )_o72:; wbadd rbp,8mov [rbp],raxmovsxd rax,dword[w212]; ;ret;--------------------------; :negw  |1090|l  ;  .  | calls:1 niv:0 len:15 ( a -- b )w224:;---------GEN; -?or rax,raxjns _o73; (; DUPadd rbp,8mov [rbp],rax; 'wi; OPTAV +!add dword[w216],eaxmov rax,[rbp]sub rbp,8; NEGneg rax; 'addm; OPTAV !mov dword[w215],eaxmov rax,[rbp]sub rbp,8; 0add rbp,8mov [rbp],raxxor rax,rax; ;ret; )_o73:; 0mov dword[w215],0; ;ret;--------------------------; :cliph  |1090|l  ;  .  | calls:1 niv:0 len:10 ( ab -- cde )w225:;---------GEN; SHadd rbp,8mov [rbp],raxmov rax,YRES; >?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjle _o74; (; SHadd rbp,8mov [rbp],raxmov rax,YRES; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; -neg raxadd rax,[rbp]sub rbp,8; ;ret; )_o74:; hbadd rbp,8mov [rbp],raxmovsxd rax,dword[w213]; ;ret;--------------------------; :clip  |1001080|l     .  | calls:1 niv:1 len:30 ( ab -- cd )w226:;---------GEN; SWAPxchg rax,[rbp]; wbadd rbp,8mov [rbp],raxmovsxd rax,dword[w212]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; +add rax,[rbp]sub rbp,8; clipwcall w223; 'wi; OPTAV !mov dword[w216],eaxmov rax,[rbp]sub rbp,8; DROPmov rax,[rbp]sub rbp,8; negwcall w224; SWAPxchg rax,[rbp]; hbadd rbp,8mov [rbp],raxmovsxd rax,dword[w213]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; +add rax,[rbp]sub rbp,8; cliphcall w225; 'hi; OPTAV !mov dword[w217],eaxmov rax,[rbp]sub rbp,8; DROPmov rax,[rbp]sub rbp,8; -?or rax,raxjns _o75; (; DUPadd rbp,8mov [rbp],rax; 'hi; OPTAV +!add dword[w217],eaxmov rax,[rbp]sub rbp,8; NEGneg rax; wb; OPTV *movsxd rbx,dword[w212]imul rax,rbx; 'addm; OPTAV +!add dword[w215],eaxmov rax,[rbp]sub rbp,8; 0add rbp,8mov [rbp],raxxor rax,rax; )_o75:; ;ret;--------------------------; :d0  |1084|l'    .  | calls:1 niv:0 len:36 ( a --  )w227:;---------GEN; addmadd rbp,8mov [rbp],raxmovsxd rax,dword[w215]; 2; OPTN <<shl rax,2; +add rax,[rbp]sub rbp,8; >Bmov r9,raxmov rax,[rbp]sub rbp,8; wbadd rbp,8mov [rbp],raxmovsxd rax,dword[w212]; wi; OPTV -movsxd rbx,dword[w216]sub rax,rbx; 2; OPTN <<shl rax,2; SWadd rbp,8mov [rbp],raxmov rax,XRES; wi; OPTV -movsxd rbx,dword[w216]sub rax,rbx; 2; OPTN <<shl rax,2; hiadd rbp,8mov [rbp],raxmovsxd rax,dword[w217]; (_i76:; 1?or rax,raxjz _o76; wiadd rbp,8mov [rbp],raxmovsxd rax,dword[w216]; (_i77:; 1?or rax,raxjz _o77; B@+add rbp,8mov [rbp],raxmovsxd rax,dword[r9]add r9,4; A!+mov dword[r8],eaxadd r8,4mov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; )jmp _i77_o77:; DROPmov rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; A+add r8,raxmov rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; B+add r9,raxmov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; )jmp _i76_o76:; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; ;ret;--------------------------; :d1  |1001084|l'    .  | calls:1 niv:1 len:36 ( a --  )w228:;---------GEN; addmadd rbp,8mov [rbp],raxmovsxd rax,dword[w215]; 2; OPTN <<shl rax,2; +add rax,[rbp]sub rbp,8; >Bmov r9,raxmov rax,[rbp]sub rbp,8; wbadd rbp,8mov [rbp],raxmovsxd rax,dword[w212]; wi; OPTV -movsxd rbx,dword[w216]sub rax,rbx; 2; OPTN <<shl rax,2; SWadd rbp,8mov [rbp],raxmov rax,XRES; wi; OPTV -movsxd rbx,dword[w216]sub rax,rbx; 2; OPTN <<shl rax,2; hiadd rbp,8mov [rbp],raxmovsxd rax,dword[w217]; (_i78:; 1?or rax,raxjz _o78; wiadd rbp,8mov [rbp],raxmovsxd rax,dword[w216]; (_i79:; 1?or rax,raxjz _o79; B@+add rbp,8mov [rbp],raxmovsxd rax,dword[r9]add r9,4; alp!+call w220; 1; OPTN -sub rax,1; )jmp _i79_o79:; DROPmov rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; A+add r8,raxmov rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; B+add r9,raxmov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; )jmp _i78_o78:; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; ;ret;--------------------------; :d2  |1001484|l'    . I| calls:1 niv:1 len:34 ( a --  )w229:;---------GEN; addm; OPTV +movsxd rbx,dword[w215]add rax,rbx; >Bmov r9,raxmov rax,[rbp]sub rbp,8; wbadd rbp,8mov [rbp],raxmovsxd rax,dword[w212]; wi; OPTV -movsxd rbx,dword[w216]sub rax,rbx; SWadd rbp,8mov [rbp],raxmov rax,XRES; wi; OPTV -movsxd rbx,dword[w216]sub rax,rbx; 2; OPTN <<shl rax,2; hiadd rbp,8mov [rbp],raxmovsxd rax,dword[w217]; (_i7A:; 1?or rax,raxjz _o7A; wiadd rbp,8mov [rbp],raxmovsxd rax,dword[w216]; (_i7B:; 1?or rax,raxjz _o7B; B>add rbp,8mov [rbp],raxmov rax,r9; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 2; OPTN <<shl rax,2; paleta; OPTV +movsxd rbx,dword[w214]add rax,rbx; @movsxd rax,dword [rax]; A!+mov dword[r8],eaxadd r8,4mov rax,[rbp]sub rbp,8; >Bmov r9,raxmov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; )jmp _i7B_o7B:; DROPmov rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; A+add r8,raxmov rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; B+add r9,raxmov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; )jmp _i7A_o7A:; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; ;ret;--------------------------; :d3  |2001484|l'    . I| calls:1 niv:2 len:34 ( a --  )w22A:;---------GEN; addm; OPTV +movsxd rbx,dword[w215]add rax,rbx; >Bmov r9,raxmov rax,[rbp]sub rbp,8; wbadd rbp,8mov [rbp],raxmovsxd rax,dword[w212]; wi; OPTV -movsxd rbx,dword[w216]sub rax,rbx; SWadd rbp,8mov [rbp],raxmov rax,XRES; wi; OPTV -movsxd rbx,dword[w216]sub rax,rbx; 2; OPTN <<shl rax,2; hiadd rbp,8mov [rbp],raxmovsxd rax,dword[w217]; (_i7C:; 1?or rax,raxjz _o7C; wiadd rbp,8mov [rbp],raxmovsxd rax,dword[w216]; (_i7D:; 1?or rax,raxjz _o7D; B>add rbp,8mov [rbp],raxmov rax,r9; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 2; OPTN <<shl rax,2; paleta; OPTV +movsxd rbx,dword[w214]add rax,rbx; @movsxd rax,dword [rax]; alp!+call w220; >Bmov r9,raxmov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; )jmp _i7D_o7D:; DROPmov rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; A+add r8,raxmov rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; B+add r9,raxmov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; )jmp _i7C_o7C:; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; ;ret;--------------------------; :sprite  |7001492|e  ;  . I| calls:1 niv:7 len:62 ( abc --  )w22C:;---------GEN; 0?or rax,raxjnz _o7E; (; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; ;ret; )_o7E:; @+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; DUPadd rbp,8mov [rbp],rax; $fff; OPTN ANDand rax,4095; 'wb; OPTAV !mov dword[w212],eaxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 12; OPTN >>sar rax,12; $fff; OPTN ANDand rax,4095; 'hb; OPTAV !mov dword[w213],eaxmov rax,[rbp]sub rbp,8; 2SWAPxchg rax,[rbp-8]mov rcx,[rbp-8*2]xchg rcx,[rbp]mov [rbp-8*2],rcx; clipcall w226; wiadd rbp,8mov [rbp],raxmovsxd rax,dword[w216]; hi; OPTV ORmovsxd rbx,dword[w217]or rax,rbx; -?or rax,raxjns _o7F; (; DROPmov rax,[rbp]sub rbp,8; 4DROPmov rax,[rbp-8*3]sub rbp,8*4; ;ret; )_o7F:; DROPmov rax,[rbp]sub rbp,8; SWadd rbp,8mov [rbp],raxmov rax,XRES; *imul rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; 2; OPTN <<shl rax,2; VFRAMEadd rbp,8mov [rbp],raxmov rax,[SYSFRAME]; +add rax,[rbp]sub rbp,8; >Amov r8,raxmov rax,[rbp]sub rbp,8; $2000000; OPTN and?test rax,33554432jz _o80; (; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 'paleta; OPTAV !mov dword[w214],eaxmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 24; OPTN >>sar rax,24; $3; OPTN ORor rax,3; $ff; OPTN ANDand rax,255; 1; OPTN +add rax,1; 2; OPTN <<shl rax,2; +add rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; )_o80:; 22; OPTN >>sar rax,22; $c; OPTN ANDand rax,12; 'odraw; OPTAV +add rax,w22B; @movsxd rax,dword [rax]; EXmov rcx,raxmov rax,[rbp]sub rbp,8jmp rcx; ;;--------------------------; :whin  |1082|e     .  | calls:1 niv:0 len:20 ( ab -- c )w290:;---------GEN; yr2add rbp,8mov [rbp],raxmovsxd rax,dword[w28F]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; -neg raxadd rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; yr1; OPTV -movsxd rbx,dword[w28D]sub rax,rbx; ORor rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; xr2add rbp,8mov [rbp],raxmovsxd rax,dword[w28E]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; -neg raxadd rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; xr1; OPTV -movsxd rbx,dword[w28C]sub rax,rbx; ORor rax,[rbp]sub rbp,8; ORor rax,[rbp]sub rbp,8; 63; OPTN >>sar rax,63; NOTnot rax; ;ret;--------------------------; :guiAll  |1082|e     .  | calls:1 niv:0 len:13 (  --  )w291:;---------GEN; 0mov dword[w28C],0; 0mov dword[w28D],0; SWadd rbp,8mov [rbp],raxmov rax,XRES; 'xr2; OPTAV !mov dword[w28E],eaxmov rax,[rbp]sub rbp,8; SHadd rbp,8mov [rbp],raxmov rax,YRES; 'yr2; OPTAV !mov dword[w28F],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :onClick  |1001092|e  ;  .  | calls:1 niv:1 len:30 ( ab --  )w299:;---------GEN; 1add rbp,8mov [rbp],raxmov rax,1; 'id; OPTAV +!add dword[w289],eaxmov rax,[rbp]sub rbp,8; XYPENadd rbp,8mov [rbp],raxmov eax,dword[SYSXM]add rbp,8mov [rbp],raxmov eax,dword[SYSYM]; whincall w290; 0?or rax,raxjnz _o81; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; ;ret; )_o81:; DROPmov rax,[rbp]sub rbp,8; BPENadd rbp,8mov [rbp],raxmov eax,dword[SYSBM]; 0?or rax,raxjnz _o82; (; idadd rbp,8mov [rbp],raxmovsxd rax,dword[w289]; yr2; OPTV =?cmp eax,dword[w28F]jne _o83; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; EXmov rcx,raxmov rax,[rbp]sub rbp,8jmp rcx; ;; )_o83:; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; ;ret; )_o82:; 2DROPmov rax,[rbp-8]sub rbp,8*2; idadd rbp,8mov [rbp],raxmovsxd rax,dword[w289]; 'hot; OPTAV !mov dword[w285],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :gc>xy  |E082|e     .  | calls:14 niv:0 len:19 ( a -- bc )w2F0:;---------GEN; DUPadd rbp,8mov [rbp],rax; 18; OPTN >>sar rax,18; vswadd rbp,8mov [rbp],raxmovsxd rax,dword[w2EC]; 14; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,14; vsx; OPTV +movsxd rbx,dword[w2EA]add rax,rbx; SWAPxchg rax,[rbp]; 46; OPTN <<shl rax,46; 50; OPTN >>sar rax,50; vshadd rbp,8mov [rbp],raxmovsxd rax,dword[w2ED]; 14; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,14; vsy; OPTV +movsxd rbx,dword[w2EB]add rax,rbx; ;ret;--------------------------; :a0  |3084|l'    .  | calls:3 niv:0 len:2 ( a --  )w2F3:;---------GEN; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :a1  |1084|l'    .  | calls:1 niv:0 len:5 ( a --  )w2F4:;---------GEN; 8; OPTN >>sar rax,8; 'ink; OPTAV !mov dword[w53],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :a4  |1001084|l'    .  | calls:1 niv:1 len:8 ( a --  )w2F5:;---------GEN; gc>xycall w2F0; 2DUPmov rcx,[rbp]mov [rbp+8],raxmov [rbp+8*2],rcxadd rbp,8*2; 'yp; OPTAV !mov dword[w2E8],eaxmov rax,[rbp]sub rbp,8; 'xp; OPTAV !mov dword[w2E9],eaxmov rax,[rbp]sub rbp,8; OPjmp w70; ;;--------------------------; :a5  |4001484|l'    . I| calls:1 niv:4 len:3 ( a --  )w2F6:;---------GEN; gc>xycall w2F0; 2; OPTN <<shl rax,2; SWAPxchg rax,[rbp]; 2; OPTN <<shl rax,2; SWAPxchg rax,[rbp]; PLINEIjmp w9D; ;;--------------------------; :a6  |5001084|l'    .  | calls:1 niv:5 len:8 ( ab -- c )w2F7:;---------GEN; SWAPxchg rax,[rbp]; >Bmov r9,raxmov rax,[rbp]sub rbp,8; gc>xycall w2F0; B@+add rbp,8mov [rbp],raxmovsxd rax,dword[r9]add r9,4; gc>xycall w2F0; PCURVEcall wB7; B>add rbp,8mov [rbp],raxmov rax,r9; ;ret;--------------------------; :a7  |6001084|l'    .  | calls:1 niv:6 len:10 ( ab -- c )w2F8:;---------GEN; SWAPxchg rax,[rbp]; >Bmov r9,raxmov rax,[rbp]sub rbp,8; gc>xycall w2F0; B@+add rbp,8mov [rbp],raxmovsxd rax,dword[r9]add r9,4; gc>xycall w2F0; B@+add rbp,8mov [rbp],raxmovsxd rax,dword[r9]add r9,4; gc>xycall w2F0; PCURVE3call wB8; B>add rbp,8mov [rbp],raxmov rax,r9; ;ret;--------------------------; :a8  |1001084|l'    .  | calls:1 niv:1 len:3 ( a --  )w2F9:;---------GEN; gc>xycall w2F0; OPjmp w70; ;;--------------------------; :a9  |3001084|l'    .  | calls:1 niv:3 len:3 ( a --  )w2FA:;---------GEN; gc>xycall w2F0; LINEjmp w6F; ;;--------------------------; :aa  |4001084|l'    .  | calls:1 niv:4 len:8 ( ab -- c )w2FB:;---------GEN; SWAPxchg rax,[rbp]; >Bmov r9,raxmov rax,[rbp]sub rbp,8; gc>xycall w2F0; B@+add rbp,8mov [rbp],raxmovsxd rax,dword[r9]add r9,4; gc>xycall w2F0; CURVEcall w71; B>add rbp,8mov [rbp],raxmov rax,r9; ;ret;--------------------------; :ab  |5001084|l'    .  | calls:1 niv:5 len:10 ( ab -- c )w2FC:;---------GEN; SWAPxchg rax,[rbp]; >Bmov r9,raxmov rax,[rbp]sub rbp,8; gc>xycall w2F0; B@+add rbp,8mov [rbp],raxmovsxd rax,dword[r9]add r9,4; gc>xycall w2F0; B@+add rbp,8mov [rbp],raxmovsxd rax,dword[r9]add r9,4; gc>xycall w2F0; CURVE3call w79; B>add rbp,8mov [rbp],raxmov rax,r9; ;ret;--------------------------; :ac  |3004484|l'    . I| calls:4 niv:3 len:6 ( a --  )w2FD:;---------GEN; 8; OPTN >>sar rax,8; 'ink; OPTAV !mov dword[w53],eaxmov rax,[rbp]sub rbp,8; xpadd rbp,8mov [rbp],raxmovsxd rax,dword[w2E9]; ypadd rbp,8mov [rbp],raxmovsxd rax,dword[w2E8]; 2; OPTN <<shl rax,2; SWAPxchg rax,[rbp]; 2; OPTN <<shl rax,2; SWAPxchg rax,[rbp]; PLINEIcall w9D; POLIjmp wB2; ;;--------------------------; :vsprite  |7001082|e     .  | calls:1 niv:7 len:15 ( a --  )w2FF:;---------GEN; (_i84:; @+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o84; DUPadd rbp,8mov [rbp],rax; $f; OPTN ANDand rax,15; 2; OPTN <<shl rax,2; 'jves; OPTAV +add rax,w2FE; @movsxd rax,dword [rax]; EXmov rcx,raxmov rax,[rbp]sub rbp,8call rcx; )jmp _i84_o84:; 2DROPmov rax,[rbp-8]sub rbp,8*2; ;ret;--------------------------; :cvsprite  |8001080|l     .  | calls:1 niv:8 len:42 ( ab --  )w32E:;---------GEN; SWAPxchg rax,[rbp]; 8; OPTN <<shl rax,8; $c; OPTN ORor rax,12; SWAPxchg rax,[rbp]; 2DUPmov rcx,[rbp]mov [rbp+8],raxmov [rbp+8*2],rcxadd rbp,8*2; (_i85:; @+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o85; $c; OPTN =?cmp rax,12jne _o86; (; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 4; OPTN -sub rax,4; !mov rcx,[rbp]mov dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; )_o86:; DROPmov rax,[rbp]sub rbp,8; )jmp _i85_o85:; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; DUPadd rbp,8mov [rbp],rax; vspritecall w2FF; (_i87:; @+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o87; $ffffffff; OPTN ANDmov rbx,4294967295and rax,rbx; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; =?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjne _o88; (; $cadd rbp,8mov [rbp],raxmov rax,12; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 4; OPTN -sub rax,4; !mov rcx,[rbp]mov dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; )_o88:; DROPmov rax,[rbp]sub rbp,8; )jmp _i87_o87:; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; ;ret;--------------------------; :rect  |3001080|l     .  | calls:1 niv:3 len:20 ( abcd --  )w32F:;---------GEN; 2SWAPxchg rax,[rbp-8]mov rcx,[rbp-8*2]xchg rcx,[rbp]mov [rbp-8*2],rcx; >Rpush raxmov rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; 2DUPmov rcx,[rbp]mov [rbp+8],raxmov [rbp+8*2],rcxadd rbp,8*2; OPcall w70; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; R>add rbp,8mov [rbp],raxpop rax; +add rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 2DUPmov rcx,[rbp]mov [rbp+8],raxmov [rbp+8*2],rcxadd rbp,8*2; LINEcall w6F; R@add rbp,8mov [rbp],raxmov rax,[rsp]; +add rax,[rbp]sub rbp,8; LINEcall w6F; 2DUPmov rcx,[rbp]mov [rbp+8],raxmov [rbp+8*2],rcxadd rbp,8*2; R>add rbp,8mov [rbp],raxpop rax; +add rax,[rbp]sub rbp,8; LINEcall w6F; LINEjmp w6F; ;;--------------------------; :drcolor  |1001490|l  ;  . I| calls:1 niv:1 len:14 (  --  )w330:;---------GEN; MSECcall SYSMSEC; $100; OPTN ANDand rax,256; 1?or rax,raxjz _o89; (; DROPmov rax,[rbp]sub rbp,8; $ff0000mov dword[w53],16711680; ;ret; )_o89:; DROPmov rax,[rbp]sub rbp,8; $ff00mov dword[w53],65280; ;ret;--------------------------; :drawcursor  |4001080|l     .  | calls:1 niv:4 len:16 ( abc -- def )w331:;---------GEN; drcolorcall w330; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 6; OPTN <<shl rax,6; 32; OPTN +add rax,32; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; 6; OPTN <<shl rax,6; 32; OPTN +add rax,32; 63add rbp,8mov [rbp],raxmov rax,63; DUPadd rbp,8mov [rbp],rax; 2SWAPxchg rax,[rbp-8]mov rcx,[rbp-8*2]xchg rcx,[rbp]mov [rbp-8*2],rcx; rectjmp w32F; ;;--------------------------; :vfill  |2001480|l     . I| calls:1 niv:2 len:21 ( abcd --  )w332:;---------GEN; 2SWAPxchg rax,[rbp-8]mov rcx,[rbp-8*2]xchg rcx,[rbp]mov [rbp-8*2],rcx; >Rpush raxmov rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; 2DUPmov rcx,[rbp]mov [rbp+8],raxmov [rbp+8*2],rcxadd rbp,8*2; OPcall w70; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; R>add rbp,8mov [rbp],raxpop rax; +add rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 2DUPmov rcx,[rbp]mov [rbp+8],raxmov [rbp+8*2],rcxadd rbp,8*2; 2; OPTN <<shl rax,2; SWAPxchg rax,[rbp]; 2; OPTN <<shl rax,2; SWAPxchg rax,[rbp]; PLINEIcall w9D; R@add rbp,8mov [rbp],raxmov rax,[rsp]; +add rax,[rbp]sub rbp,8; 2; OPTN <<shl rax,2; SWAPxchg rax,[rbp]; 2; OPTN <<shl rax,2; SWAPxchg rax,[rbp]; PLINEIcall w9D; 2DUPmov rcx,[rbp]mov [rbp+8],raxmov [rbp+8*2],rcxadd rbp,8*2; R>add rbp,8mov [rbp],raxpop rax; +add rax,[rbp]sub rbp,8; 2; OPTN <<shl rax,2; SWAPxchg rax,[rbp]; 2; OPTN <<shl rax,2; SWAPxchg rax,[rbp]; PLINEIcall w9D; 2; OPTN <<shl rax,2; SWAPxchg rax,[rbp]; 2; OPTN <<shl rax,2; SWAPxchg rax,[rbp]; PLINEIcall w9D; POLIjmp wB2; ;;--------------------------; :colcell  |1090|l  ;  .  | calls:1 niv:0 len:8 ( a -- bc )w333:;---------GEN; $8; OPTN and?test rax,8jz _o8A; (; $ffffffadd rbp,8mov [rbp],raxmov rax,16777215; ;ret; )_o8A:; $101010add rbp,8mov [rbp],raxmov rax,1052688; ;ret;--------------------------; :cellbox  |9001490|l  ;  . I| calls:1 niv:9 len:60 ( abc -- def )w334:;---------GEN; 2DUPmov rcx,[rbp]mov [rbp+8],raxmov [rbp+8*2],rcxadd rbp,8*2; +add rax,[rbp]sub rbp,8; 1; OPTN ANDand rax,1; 2; OPTN <<shl rax,2; 'bgcolor; OPTAV +add rax,w32C; @movsxd rax,dword [rax]; 'ink; OPTAV !mov dword[w53],eaxmov rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 6; OPTN <<shl rax,6; 32; OPTN +add rax,32; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 6; OPTN <<shl rax,6; 32; OPTN +add rax,32; SWAPxchg rax,[rbp]; 64add rbp,8mov [rbp],raxmov rax,64; DUPadd rbp,8mov [rbp],rax; 2OVERmov [rbp+8],raxadd rbp,8*2mov rbx,[rbp-8*4]mov [rbp],rbxmov rax,[rbp-8*3]; vfillcall w332; 32; OPTN +add rax,32; SWAPxchg rax,[rbp]; 32; OPTN +add rax,32; SWAPxchg rax,[rbp]; 'vsy; OPTAV !mov dword[w2EB],eaxmov rax,[rbp]sub rbp,8; 'vsx; OPTAV !mov dword[w2EA],eaxmov rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; cursori; OPTV =?cmp eax,dword[w322]jne _o8B; (; drawcursorcall w331; )_o8B:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; colcellcall w333; SWAPxchg rax,[rbp]; $7; OPTN ANDand rax,7; 2; OPTN <<shl rax,2; 'piecesDraw; OPTAV +add rax,w329; @movsxd rax,dword [rax]; 0?or rax,raxjnz _o8C; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; ;ret; )_o8C:; cvspritecall w32E; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; ;ret;--------------------------; :drawboard  |A001480|l     . I| calls:1 niv:10 len:28 (  --  )w335:;---------GEN; 64add rbp,8mov [rbp],raxmov rax,64; DUPadd rbp,8mov [rbp],rax; 'vsh; OPTAV !mov dword[w2ED],eaxmov rax,[rbp]sub rbp,8; 'vsw; OPTAV !mov dword[w2EC],eaxmov rax,[rbp]sub rbp,8; 'boardadd rbp,8mov [rbp],raxmov rax,w32B; 21; OPTN +add rax,21; 0add rbp,8mov [rbp],raxxor rax,rax; (_i8D:; 8; OPTN <?cmp rax,8jge _o8D; 0add rbp,8mov [rbp],raxxor rax,rax; (_i8E:; 8; OPTN <?cmp rax,8jge _o8E; cellboxcall w334; 1; OPTN +add rax,1; )jmp _i8E_o8E:; DROPmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; 2; OPTN +add rax,2; SWAPxchg rax,[rbp]; 1; OPTN +add rax,1; )jmp _i8D_o8D:; 2DROPmov rax,[rbp-8]sub rbp,8*2; ;ret;--------------------------; :enmouse  |1090|l  ;  .  | calls:1 niv:0 len:41 ( a --  )w342:;---------GEN; XYPENadd rbp,8mov [rbp],raxmov eax,dword[SYSXM]add rbp,8mov [rbp],raxmov eax,dword[SYSYM]; 32; OPTN -sub rax,32; 6; OPTN >>sar rax,6; -?or rax,raxjns _o8F; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; ;ret; )_o8F:; 7; OPTN >?cmp rax,7jle _o90; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; ;ret; )_o90:; SWAPxchg rax,[rbp]; 32; OPTN -sub rax,32; 6; OPTN >>sar rax,6; -?or rax,raxjns _o91; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; ;ret; )_o91:; 7; OPTN >?cmp rax,7jle _o92; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; ;ret; )_o92:; SWAPxchg rax,[rbp]; 10; OPTN *imul rax,10; +add rax,[rbp]sub rbp,8; 21; OPTN +add rax,21; 'board; OPTAV +add rax,w32B; ;ret;--------------------------; :click  |1001094|l' ;  .  | calls:1 niv:1 len:43 ( ab --  )w343:;---------GEN; enmousecall w342; DUPadd rbp,8mov [rbp],rax; C@movsx rax,byte [rax]; 120; OPTN XORxor rax,120; $f; OPTN ANDand rax,15; 8; OPTN >?cmp rax,8jle _o93; (; DROPmov rax,[rbp]sub rbp,8; 'cursori; OPTAV !mov dword[w322],eaxmov rax,[rbp]sub rbp,8; ;ret; )_o93:; cursoriadd rbp,8mov [rbp],raxmovsxd rax,dword[w322]; 0?or rax,raxjnz _o94; (; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; ;ret; )_o94:; DROPmov rax,[rbp]sub rbp,8; 8; OPTN >?cmp rax,8jle _o95; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; ;ret; )_o95:; DROPmov rax,[rbp]sub rbp,8; 'cursore; OPTAV !mov dword[w323],eaxmov rax,[rbp]sub rbp,8; cursori; OPTV C@movsxd rbx,dword[w322]add rbp,8mov [rbp],raxmovsx rax,byte [rbx]; $f; OPTN ANDand rax,15; 9; OPTN <?cmp rax,9jge _o96; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o96:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :dump  |6001490|l  ;  . I| calls:1 niv:6 len:25 ( a -- b )w345:;---------GEN; $ff00mov dword[w53],65280; DUPadd rbp,8mov [rbp],rax; "%d"add rbp,8mov [rbp],raxmov rax,strC39; markcall w14D; 'buffadd rbp,8mov [rbp],raxmov rax,w177; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; (_i97:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o97; ,emitcall w175; )jmp _i97_o97:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 0add rbp,8mov [rbp],raxxor rax,rax; here; OPTV C!+movsxd rbx,dword[w14A]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; emptycall w14E; 'buffadd rbp,8mov [rbp],raxmov rax,w177; (_i98:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o98; $ff; OPTN ANDand rax,255; DUPadd rbp,8mov [rbp],rax; 'char8i; OPTAW EXcall w1E3; 'size8i; OPTAW EXcall w1E4; 'ccx; OPTAV +!add dword[w1B4],eaxmov rax,[rbp]sub rbp,8; )jmp _i98_o98:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 12add rbp,8mov [rbp],raxmov rax,12; 'ccy; OPTAV +!add dword[w1B5],eaxmov rax,[rbp]sub rbp,8; 0mov dword[w1B4],0; cursoriadd rbp,8mov [rbp],raxmovsxd rax,dword[w322]; "%h "add rbp,8mov [rbp],raxmov rax,strC51; markcall w14D; 'buffadd rbp,8mov [rbp],raxmov rax,w177; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; (_i99:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o99; ,emitcall w175; )jmp _i99_o99:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 0add rbp,8mov [rbp],raxxor rax,rax; here; OPTV C!+movsxd rbx,dword[w14A]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; emptycall w14E; 'buffadd rbp,8mov [rbp],raxmov rax,w177; (_i9A:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o9A; $ff; OPTN ANDand rax,255; DUPadd rbp,8mov [rbp],rax; 'char8i; OPTAW EXcall w1E3; 'size8i; OPTAW EXcall w1E4; 'ccx; OPTAV +!add dword[w1B4],eaxmov rax,[rbp]sub rbp,8; )jmp _i9A_o9A:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 12add rbp,8mov [rbp],raxmov rax,12; 'ccy; OPTAV +!add dword[w1B5],eaxmov rax,[rbp]sub rbp,8; 0mov dword[w1B4],0; cursoreadd rbp,8mov [rbp],raxmovsxd rax,dword[w323]; "%h "add rbp,8mov [rbp],raxmov rax,strC6C; markcall w14D; 'buffadd rbp,8mov [rbp],raxmov rax,w177; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; (_i9B:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o9B; ,emitcall w175; )jmp _i9B_o9B:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 0add rbp,8mov [rbp],raxxor rax,rax; here; OPTV C!+movsxd rbx,dword[w14A]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; emptycall w14E; 'buffadd rbp,8mov [rbp],raxmov rax,w177; (_i9C:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o9C; $ff; OPTN ANDand rax,255; DUPadd rbp,8mov [rbp],rax; 'char8i; OPTAW EXcall w1E3; 'size8i; OPTAW EXcall w1E4; 'ccx; OPTAV +!add dword[w1B4],eaxmov rax,[rbp]sub rbp,8; )jmp _i9C_o9C:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 12add rbp,8mov [rbp],raxmov rax,12; 'ccy; OPTAV +!add dword[w1B5],eaxmov rax,[rbp]sub rbp,8; 0mov dword[w1B4],0; cursoriadd rbp,8mov [rbp],raxmovsxd rax,dword[w322]; 0?or rax,raxjnz _o9D; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o9D:; C@movsx rax,byte [rax]; "%d"add rbp,8mov [rbp],raxmov rax,strC98; markcall w14D; 'buffadd rbp,8mov [rbp],raxmov rax,w177; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; (_i9E:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o9E; ,emitcall w175; )jmp _i9E_o9E:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 0add rbp,8mov [rbp],raxxor rax,rax; here; OPTV C!+movsxd rbx,dword[w14A]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; emptycall w14E; 'buffadd rbp,8mov [rbp],raxmov rax,w177; (_i9F:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o9F; $ff; OPTN ANDand rax,255; DUPadd rbp,8mov [rbp],rax; 'char8i; OPTAW EXcall w1E3; 'size8i; OPTAW EXcall w1E4; 'ccx; OPTAV +!add dword[w1B4],eaxmov rax,[rbp]sub rbp,8; )jmp _i9F_o9F:; 2DROPmov rax,[rbp-8]sub rbp,8*2; ;ret;--------------------------; :main  |9001484|l'    . I| calls:1 niv:9 len:16 ( ab --  )w346:;---------GEN; VFRAMEadd rbp,8mov [rbp],raxmov rax,[SYSFRAME]; 0add rbp,8mov [rbp],raxxor rax,rax; SWadd rbp,8mov [rbp],raxmov rax,XRES; SHadd rbp,8mov [rbp],raxmov rax,YRES; *imul rax,[rbp]sub rbp,8; FILLmov rcx,raxmovsxd rax,dword[rbp]movsxd rdi,dword[rbp-8]rep stosdmov rax,[rbp-8*2]sub rbp,8*3; 0mov dword[w1B4],0; 0mov dword[w1B5],0; drawboardcall w335; guiAllcall w291; 'clickadd rbp,8mov [rbp],raxmov rax,w343; onClickcall w299; dumpcall w345; KEYadd rbp,8mov [rbp],raxmov eax,dword[SYSKEY]; $101b; OPTN =?cmp rax,4123jne _oA0; (; 1mov dword[w118],1; )_oA0:; DROPmov rax,[rbp]sub rbp,8; XYPENadd rbp,8mov [rbp],raxmov eax,dword[SYSXM]add rbp,8mov [rbp],raxmov eax,dword[SYSYM]; 'arrow8add rbp,8mov [rbp],raxmov rax,w250; spritejmp w22C; ;;--------------------------; :  |2001580|l     .iI| calls:1 niv:2 len:5 (  --  )INICIO:;---------GEN; markcall w14D; 'boardadd rbp,8mov [rbp],raxmov rax,w32B; 'inichessadd rbp,8mov [rbp],raxmov rax,w32A; 30add rbp,8mov [rbp],raxmov rax,30; MOVEmov rcx,raxmovsxd rsi,dword[rbp]movsxd rdi,dword[rbp-8]rep movsdmov rax,[rbp-8*2]sub rbp,8*3; 'mainadd rbp,8mov [rbp],raxmov rax,w346; onshowjmp w119; ; 