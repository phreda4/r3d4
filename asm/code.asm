;---r3 compiler code.asm; r3/r3arena/frobots.r3;--------------------------; :/.  |1086|e'    .  | calls:1 niv:0 len:3 ( ab -- c )w2:;---------GEN; 16; OPTN <</mov rbx,raxmov rax,[rbp]sub rbp,8cqoshld rdx,rax,16shl rax,16idiv rbx; ;ret;--------------------------; :ceil  |1086|e'    .  | calls:1 niv:0 len:5 ( a -- b )w3:;---------GEN; $ffff; OPTN +add rax,65535; 16; OPTN >>sar rax,16; ;ret;--------------------------; :sinp  |4080|l     .  | calls:4 niv:0 len:21 ( a -- b )w5:;---------GEN; $7fff; OPTN ANDand rax,32767; $4000; OPTN -sub rax,16384; DUPadd rbp,8mov [rbp],rax; DUPadd rbp,8mov [rbp],rax; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 4876210add rbp,8mov [rbp],raxmov rax,4876210; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; 2699161; OPTN -sub rax,2699161; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; 411769; OPTN +add rax,411769; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; ;ret;--------------------------; :cos  |1002092|e  ;  .  | calls:2 niv:1 len:11 ( a -- b )w6:;---------GEN; $8000; OPTN +add rax,32768; $8000; OPTN nand?test rax,32768jnz _o0; (; sinpjmp w5; ;; )_o0:; sinpcall w5; NEGneg rax; ;ret;--------------------------; :sin  |1002092|e  ;  .  | calls:2 niv:1 len:11 ( a -- b )w7:;---------GEN; $4000; OPTN +add rax,16384; $8000; OPTN nand?test rax,32768jnz _o1; (; sinpjmp w5; ;; )_o1:; sinpcall w5; NEGneg rax; ;ret;--------------------------; :10/mod  |3082|e     .  | calls:3 niv:0 len:49 ( a -- bc )w3A:;---------GEN; DUPadd rbp,8mov [rbp],rax; 1; OPTN >>sar rax,1; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 2; OPTN >>sar rax,2; +add rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 4; OPTN >>sar rax,4; +add rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 8; OPTN >>sar rax,8; +add rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 16; OPTN >>sar rax,16; +add rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 32; OPTN >>sar rax,32; +add rax,[rbp]sub rbp,8; 3; OPTN >>sar rax,3; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; DUPadd rbp,8mov [rbp],rax; 2; OPTN <<shl rax,2; +add rax,[rbp]sub rbp,8; 1; OPTN <<shl rax,1; -neg raxadd rax,[rbp]sub rbp,8; 6; OPTN +add rax,6; 4; OPTN >>sar rax,4; +add rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; DUPadd rbp,8mov [rbp],rax; 2; OPTN <<shl rax,2; +add rax,[rbp]sub rbp,8; 1; OPTN <<shl rax,1; -neg raxadd rax,[rbp]sub rbp,8; ;ret;--------------------------; :setxy  |5084|l'    .  | calls:5 niv:0 len:9 ( ab --  )w60:;---------GEN; SWadd rbp,8mov [rbp],raxmov rax,XRES; *imul rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; 2; OPTN <<shl rax,2; VFRAMEadd rbp,8mov [rbp],raxmov rax,[SYSFRAME]; +add rax,[rbp]sub rbp,8; >Amov r8,raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :acpx!+  |1080|l     .  | calls:1 niv:0 len:37 ( ab --  )w61:;---------GEN; DUPadd rbp,8mov [rbp],rax; $ff00ff; OPTN ANDand rax,16711935; A@add rbp,8mov [rbp],raxmovsxd rax,dword[r8]; DUPadd rbp,8mov [rbp],rax; $ff00ff; OPTN ANDand rax,16711935; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; -neg raxadd rax,[rbp]sub rbp,8; PICK4add rbp,8mov [rbp],raxmov rax,[rbp-8*4]; *imul rax,[rbp]sub rbp,8; 8; OPTN >>sar rax,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; +add rax,[rbp]sub rbp,8; $ff00ff; OPTN ANDand rax,16711935; >Rpush raxmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; $ff00; OPTN ANDand rax,65280; SWAPxchg rax,[rbp]; $ff00; OPTN ANDand rax,65280; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; -neg raxadd rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; *imul rax,[rbp]sub rbp,8; 8; OPTN >>sar rax,8; +add rax,[rbp]sub rbp,8; $ff00; OPTN ANDand rax,65280; R>add rbp,8mov [rbp],raxpop rax; ORor rax,[rbp]sub rbp,8; A!+mov dword[r8],eaxadd r8,4mov rax,[rbp]sub rbp,8; ;ret;--------------------------; :wvline  |1001490|l  ;  . I| calls:1 niv:1 len:68 ( ab --  )w65:;---------GEN; -?or rax,raxjns _o2; (; DROPmov rax,[rbp]sub rbp,8; 'opy; OPTAV !mov dword[w55],eaxmov rax,[rbp]sub rbp,8; ;ret; )_o2:; SWadd rbp,8mov [rbp],raxmov rax,XRES; >=?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjl _o3; (; DROPmov rax,[rbp]sub rbp,8; 'opy; OPTAV !mov dword[w55],eaxmov rax,[rbp]sub rbp,8; ;ret; )_o3:; opyadd rbp,8mov [rbp],raxmovsxd rax,dword[w55]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; DUPadd rbp,8mov [rbp],rax; 'opy; OPTAV !mov dword[w55],eaxmov rax,[rbp]sub rbp,8; <?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjge _o4; (; SWAPxchg rax,[rbp]; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; )_o4:; -?or rax,raxjns _o5; (; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; ;ret; )_o5:; SHadd rbp,8mov [rbp],raxmov rax,YRES; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; -neg raxadd rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; ANDand rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; SHadd rbp,8mov [rbp],raxmov rax,YRES; >=?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjl _o6; (; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; ;ret; )_o6:; DUPadd rbp,8mov [rbp],rax; NEGneg rax; 63; OPTN >>sar rax,63; ANDand rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; -neg raxadd rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; SWAPxchg rax,[rbp]; A>add rbp,8mov [rbp],raxmov rax,r8; >Rpush raxmov rax,[rbp]sub rbp,8; setxycall w60; 1; OPTN +add rax,1; (_i7:; 1?or rax,raxjz _o7; 1; OPTN -sub rax,1; ink; OPTV A!movsxd rbx,dword[w53]mov dword[r8],ebx; SWadd rbp,8mov [rbp],raxmov rax,XRES; 2; OPTN <<shl rax,2; A+add r8,raxmov rax,[rbp]sub rbp,8; )jmp _i7_o7:; DROPmov rax,[rbp]sub rbp,8; R>add rbp,8mov [rbp],raxpop rax; >Amov r8,raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :whline  |1001490|l  ;  . I| calls:1 niv:1 len:61 ( ab --  )w66:;---------GEN; -?or rax,raxjns _o8; (; DROPmov rax,[rbp]sub rbp,8; 'opx; OPTAV !mov dword[w54],eaxmov rax,[rbp]sub rbp,8; ;ret; )_o8:; SHadd rbp,8mov [rbp],raxmov rax,YRES; >=?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjl _o9; (; DROPmov rax,[rbp]sub rbp,8; 'opx; OPTAV !mov dword[w54],eaxmov rax,[rbp]sub rbp,8; ;ret; )_o9:; opxadd rbp,8mov [rbp],raxmovsxd rax,dword[w54]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; DUPadd rbp,8mov [rbp],rax; 'opx; OPTAV !mov dword[w54],eaxmov rax,[rbp]sub rbp,8; <?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjge _oA; (; SWAPxchg rax,[rbp]; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; )_oA:; -?or rax,raxjns _oB; (; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; ;ret; )_oB:; SWadd rbp,8mov [rbp],raxmov rax,XRES; SWAPxchg rax,[rbp]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; -neg raxadd rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; ANDand rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; SWadd rbp,8mov [rbp],raxmov rax,XRES; >=?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjl _oC; (; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; ;ret; )_oC:; DUPadd rbp,8mov [rbp],rax; NEGneg rax; 63; OPTN >>sar rax,63; ANDand rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; -neg raxadd rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; A>add rbp,8mov [rbp],raxmov rax,r8; >Rpush raxmov rax,[rbp]sub rbp,8; setxycall w60; 1; OPTN +add rax,1; (_iD:; 1?or rax,raxjz _oD; 1; OPTN -sub rax,1; ink; OPTV A!+movsxd rbx,dword[w53]mov dword[r8],ebxadd r8,4; )jmp _iD_oD:; DROPmov rax,[rbp]sub rbp,8; R>add rbp,8mov [rbp],raxpop rax; >Amov r8,raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :li  |2090|l  ;  .  | calls:2 niv:0 len:12 ( a -- b )w67:;---------GEN; 8; OPTN <?cmp rax,8jge _oE; (; 0add rbp,8mov [rbp],raxxor rax,rax; NIPsub rbp,8; ;ret; )_oE:; SHadd rbp,8mov [rbp],raxmov rax,YRES; 2; OPTN -sub rax,2; NIPsub rbp,8; ;ret;--------------------------; :clip1  |1001080|l     .  | calls:1 niv:1 len:34 ( abcde -- fghij )w68:;---------GEN; licall w67; >Rpush raxmov rax,[rbp]sub rbp,8; 2SWAPxchg rax,[rbp-8]mov rcx,[rbp-8*2]xchg rcx,[rbp]mov [rbp-8*2],rcx; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; -neg raxadd rax,[rbp]sub rbp,8; R@add rbp,8mov [rbp],raxmov rax,[rsp]; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; -neg raxadd rax,[rbp]sub rbp,8; PICK4add rbp,8mov [rbp],raxmov rax,[rbp-8*4]; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; -neg raxadd rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; */mov rbx,raxmov rcx,[rbp]mov rax,[rbp-8]sub rbp,8*2cqoimul rcxidiv rbx; +add rax,[rbp]sub rbp,8; NIPsub rbp,8; R>add rbp,8mov [rbp],raxpop rax; SWAPxchg rax,[rbp]; DUPadd rbp,8mov [rbp],rax; SWadd rbp,8mov [rbp],raxmov rax,XRES; -neg raxadd rax,[rbp]sub rbp,8; NOTnot rax; $200000; OPTN ANDand rax,2097152; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; $100000; OPTN ANDand rax,1048576; ORor rax,[rbp]sub rbp,8; 20; OPTN >>sar rax,20; >Rpush raxmov rax,[rbp]sub rbp,8; 2SWAPxchg rax,[rbp-8]mov rcx,[rbp-8*2]xchg rcx,[rbp]mov [rbp-8*2],rcx; R>add rbp,8mov [rbp],raxpop rax; ;ret;--------------------------; :clip2  |1001080|l     .  | calls:1 niv:1 len:31 ( abcde -- fghij )w69:;---------GEN; licall w67; >Rpush raxmov rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; PICK4add rbp,8mov [rbp],raxmov rax,[rbp-8*4]; -neg raxadd rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; PICK4add rbp,8mov [rbp],raxmov rax,[rbp-8*4]; -neg raxadd rax,[rbp]sub rbp,8; R@add rbp,8mov [rbp],raxmov rax,[rsp]; PICK4add rbp,8mov [rbp],raxmov rax,[rbp-8*4]; -neg raxadd rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; */mov rbx,raxmov rcx,[rbp]mov rax,[rbp-8]sub rbp,8*2cqoimul rcxidiv rbx; +add rax,[rbp]sub rbp,8; NIPsub rbp,8; R>add rbp,8mov [rbp],raxpop rax; SWAPxchg rax,[rbp]; DUPadd rbp,8mov [rbp],rax; SWadd rbp,8mov [rbp],raxmov rax,XRES; -neg raxadd rax,[rbp]sub rbp,8; NOTnot rax; $200000; OPTN ANDand rax,2097152; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; $100000; OPTN ANDand rax,1048576; ORor rax,[rbp]sub rbp,8; 20; OPTN >>sar rax,20; ;ret;--------------------------; :li  |2090|l  ;  .  | calls:2 niv:0 len:12 ( a -- b )w6A:;---------GEN; 1; OPTN =?cmp rax,1jne _oF; (; 0add rbp,8mov [rbp],raxxor rax,rax; NIPsub rbp,8; ;ret; )_oF:; SWadd rbp,8mov [rbp],raxmov rax,XRES; 1; OPTN -sub rax,1; NIPsub rbp,8; ;ret;--------------------------; :clip3  |1001080|l     .  | calls:1 niv:1 len:20 ( abcde -- fghij )w6B:;---------GEN; licall w6A; >Rpush raxmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; DUPadd rbp,8mov [rbp],rax; PICK4add rbp,8mov [rbp],raxmov rax,[rbp-8*4]; -neg raxadd rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; PICK4add rbp,8mov [rbp],raxmov rax,[rbp-8*4]; -neg raxadd rax,[rbp]sub rbp,8; R@add rbp,8mov [rbp],raxmov rax,[rsp]; PICK4add rbp,8mov [rbp],raxmov rax,[rbp-8*4]; -neg raxadd rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; */mov rbx,raxmov rcx,[rbp]mov rax,[rbp-8]sub rbp,8*2cqoimul rcxidiv rbx; +add rax,[rbp]sub rbp,8; NIPsub rbp,8; R>add rbp,8mov [rbp],raxpop rax; 0add rbp,8mov [rbp],raxxor rax,rax; ;ret;--------------------------; :clip4  |1001080|l     .  | calls:1 niv:1 len:22 ( abcde -- fghij )w6C:;---------GEN; licall w6A; >Rpush raxmov rax,[rbp]sub rbp,8; 2SWAPxchg rax,[rbp-8]mov rcx,[rbp-8*2]xchg rcx,[rbp]mov [rbp-8*2],rcx; SWAPxchg rax,[rbp]; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; -neg raxadd rax,[rbp]sub rbp,8; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; -neg raxadd rax,[rbp]sub rbp,8; R@add rbp,8mov [rbp],raxmov rax,[rsp]; PICK4add rbp,8mov [rbp],raxmov rax,[rbp-8*4]; -neg raxadd rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; */mov rbx,raxmov rcx,[rbp]mov rax,[rbp-8]sub rbp,8*2cqoimul rcxidiv rbx; +add rax,[rbp]sub rbp,8; NIPsub rbp,8; R>add rbp,8mov [rbp],raxpop rax; 2SWAPxchg rax,[rbp-8]mov rcx,[rbp-8*2]xchg rcx,[rbp]mov [rbp-8*2],rcx; 0add rbp,8mov [rbp],raxxor rax,rax; ;ret;--------------------------; :clipline  |2001090|l  ;  .  | calls:1 niv:2 len:123 ( abcd -- efghi )w6D:;---------GEN; DUPadd rbp,8mov [rbp],rax; $400000; OPTN ANDand rax,4194304; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; SHadd rbp,8mov [rbp],raxmov rax,YRES; -neg raxadd rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; NOTnot rax; $800000; OPTN ANDand rax,8388608; ORor rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; DUPadd rbp,8mov [rbp],rax; $100000; OPTN ANDand rax,1048576; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; SWadd rbp,8mov [rbp],raxmov rax,XRES; -neg raxadd rax,[rbp]sub rbp,8; NOTnot rax; $200000; OPTN ANDand rax,2097152; ORor rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; ORor rax,[rbp]sub rbp,8; 20; OPTN >>sar rax,20; >Rpush raxmov rax,[rbp]sub rbp,8; 2SWAPxchg rax,[rbp-8]mov rcx,[rbp-8*2]xchg rcx,[rbp]mov [rbp-8*2],rcx; DUPadd rbp,8mov [rbp],rax; $400000; OPTN ANDand rax,4194304; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; SHadd rbp,8mov [rbp],raxmov rax,YRES; -neg raxadd rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; NOTnot rax; $800000; OPTN ANDand rax,8388608; ORor rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; DUPadd rbp,8mov [rbp],rax; $100000; OPTN ANDand rax,1048576; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; SWadd rbp,8mov [rbp],raxmov rax,XRES; -neg raxadd rax,[rbp]sub rbp,8; NOTnot rax; $200000; OPTN ANDand rax,2097152; ORor rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; ORor rax,[rbp]sub rbp,8; 20; OPTN >>sar rax,20; R>add rbp,8mov [rbp],raxpop rax; 2DUPmov rcx,[rbp]mov [rbp+8],raxmov [rbp+8*2],rcxadd rbp,8*2; ANDand rax,[rbp]sub rbp,8; 1?or rax,raxjz _o10; (; DROPmov rax,[rbp]sub rbp,8; ORor rax,[rbp]sub rbp,8; ;ret; )_o10:; DROPmov rax,[rbp]sub rbp,8; 2DUPmov rcx,[rbp]mov [rbp+8],raxmov [rbp+8*2],rcxadd rbp,8*2; ORor rax,[rbp]sub rbp,8; 0?or rax,raxjnz _o11; (; DROPmov rax,[rbp]sub rbp,8; ORor rax,[rbp]sub rbp,8; ;ret; )_o11:; DROPmov rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; 12; OPTN and?test rax,12jz _o12; (; clip2call w69; )_o12:; R>add rbp,8mov [rbp],raxpop rax; SWAPxchg rax,[rbp]; >Rpush raxmov rax,[rbp]sub rbp,8; 12; OPTN and?test rax,12jz _o13; (; clip1call w68; )_o13:; R>add rbp,8mov [rbp],raxpop rax; 2DUPmov rcx,[rbp]mov [rbp+8],raxmov [rbp+8*2],rcxadd rbp,8*2; ANDand rax,[rbp]sub rbp,8; 1?or rax,raxjz _o14; (; DROPmov rax,[rbp]sub rbp,8; ORor rax,[rbp]sub rbp,8; ;ret; )_o14:; DROPmov rax,[rbp]sub rbp,8; 2DUPmov rcx,[rbp]mov [rbp+8],raxmov [rbp+8*2],rcxadd rbp,8*2; ORor rax,[rbp]sub rbp,8; 0?or rax,raxjnz _o15; (; DROPmov rax,[rbp]sub rbp,8; ORor rax,[rbp]sub rbp,8; ;ret; )_o15:; DROPmov rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; 1?or rax,raxjz _o16; (; clip4call w6C; )_o16:; R>add rbp,8mov [rbp],raxpop rax; SWAPxchg rax,[rbp]; >Rpush raxmov rax,[rbp]sub rbp,8; 1?or rax,raxjz _o17; (; clip3call w6B; )_o17:; R>add rbp,8mov [rbp],raxpop rax; ORor rax,[rbp]sub rbp,8; ;ret;--------------------------; :nline21  |2001480|l     . I| calls:1 niv:2 len:52 ( abc --  )w6E:;---------GEN; 16; OPTN <<shl rax,16; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; /mov rbx,raxmov rax,[rbp]sub rbp,8cqoidiv rbx; 0add rbp,8mov [rbp],raxxor rax,rax; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; (_i18:; 1?or rax,raxjz _o18; 1; OPTN -sub rax,1; >Rpush raxmov rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; +add rax,[rbp]sub rbp,8; $ffff0000; OPTN and?mov rbx,4294901760test rax,rbxjz _o19; (; $ffff; OPTN ANDand rax,65535; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 2; OPTN <<shl rax,2; A+add r8,raxmov rax,[rbp]sub rbp,8; )_o19:; SWadd rbp,8mov [rbp],raxmov rax,XRES; 2; OPTN <<shl rax,2; A+add r8,raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 8; OPTN >>sar rax,8; DUPadd rbp,8mov [rbp],rax; inkadd rbp,8mov [rbp],raxmovsxd rax,dword[w53]; acpx!+call w61; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; 1; OPTN -sub rax,1; 2; OPTN <<shl rax,2; A+add r8,raxmov rax,[rbp]sub rbp,8; $ff; OPTN XORxor rax,255; inkadd rbp,8mov [rbp],raxmovsxd rax,dword[w53]; acpx!+call w61; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; NEGneg rax; 1; OPTN -sub rax,1; 2; OPTN <<shl rax,2; A+add r8,raxmov rax,[rbp]sub rbp,8; R>add rbp,8mov [rbp],raxpop rax; )jmp _i18_o18:; 4DROPmov rax,[rbp-8*3]sub rbp,8*4; ;ret;--------------------------; :LINE  |2001492|e  ;  . I| calls:1 niv:2 len:133 ( ab --  )w6F:;---------GEN; opy; OPTV =?cmp eax,dword[w55]jne _o1A; (; whlinejmp w66; ;; )_o1A:; SWAPxchg rax,[rbp]; opx; OPTV =?cmp eax,dword[w54]jne _o1B; (; wvlinejmp w65; ;; )_o1B:; SWAPxchg rax,[rbp]; opxadd rbp,8mov [rbp],raxmovsxd rax,dword[w54]; opyadd rbp,8mov [rbp],raxmovsxd rax,dword[w55]; 2OVERmov [rbp+8],raxadd rbp,8*2mov rbx,[rbp-8*4]mov [rbp],rbxmov rax,[rbp-8*3]; 'opy; OPTAV !mov dword[w55],eaxmov rax,[rbp]sub rbp,8; 'opx; OPTAV !mov dword[w54],eaxmov rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; <?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjge _o1C; (; 2SWAPxchg rax,[rbp-8]mov rcx,[rbp-8*2]xchg rcx,[rbp]mov [rbp-8*2],rcx; )_o1C:; -?or rax,raxjns _o1D; (; 4DROPmov rax,[rbp-8*3]sub rbp,8*4; ;ret; )_o1D:; 2SWAPxchg rax,[rbp-8]mov rcx,[rbp-8*2]xchg rcx,[rbp]mov [rbp-8*2],rcx; SHadd rbp,8mov [rbp],raxmov rax,YRES; 1; OPTN -sub rax,1; >=?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjl _o1E; (; 4DROPmov rax,[rbp-8*3]sub rbp,8*4; ;ret; )_o1E:; cliplinecall w6D; 1?or rax,raxjz _o1F; (; NIPsub rbp,8; 4DROPmov rax,[rbp-8*3]sub rbp,8*4; ;ret; )_o1F:; DROPmov rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; -neg raxadd rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; -neg raxadd rax,[rbp]sub rbp,8; 0?or rax,raxjnz _o20; (; 4DROPmov rax,[rbp-8*3]sub rbp,8*4; ;ret; )_o20:; 2SWAPxchg rax,[rbp-8]mov rcx,[rbp-8*2]xchg rcx,[rbp]mov [rbp-8*2],rcx; A>add rbp,8mov [rbp],raxmov rax,r8; >Rpush raxmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; setxycall w60; ink; OPTV A!movsxd rbx,dword[w53]mov dword[r8],ebx; SWAPxchg rax,[rbp]; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; 1; OPTN ORor rax,1; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; ABScqoadd rax,rdxxor rax,rdx; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; <?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjge _o21; (; nline21call w6E; R>add rbp,8mov [rbp],raxpop rax; >Amov r8,raxmov rax,[rbp]sub rbp,8; ;ret; )_o21:; SWAPxchg rax,[rbp]; 16; OPTN <<shl rax,16; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; /mov rbx,raxmov rax,[rbp]sub rbp,8cqoidiv rbx; 0add rbp,8mov [rbp],raxxor rax,rax; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; (_i22:; 1?or rax,raxjz _o22; 1; OPTN -sub rax,1; >Rpush raxmov rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; +add rax,[rbp]sub rbp,8; $ffff0000; OPTN and?mov rbx,4294901760test rax,rbxjz _o23; (; $ffff; OPTN ANDand rax,65535; SWadd rbp,8mov [rbp],raxmov rax,XRES; 2; OPTN <<shl rax,2; A+add r8,raxmov rax,[rbp]sub rbp,8; )_o23:; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 2; OPTN <<shl rax,2; A+add r8,raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 8; OPTN >>sar rax,8; DUPadd rbp,8mov [rbp],rax; inkadd rbp,8mov [rbp],raxmovsxd rax,dword[w53]; acpx!+call w61; SWadd rbp,8mov [rbp],raxmov rax,XRES; 1; OPTN -sub rax,1; 2; OPTN <<shl rax,2; A+add r8,raxmov rax,[rbp]sub rbp,8; $ff; OPTN XORxor rax,255; inkadd rbp,8mov [rbp],raxmovsxd rax,dword[w53]; acpx!+call w61; SWadd rbp,8mov [rbp],raxmov rax,XRES; 1; OPTN +add rax,1; NEGneg rax; 2; OPTN <<shl rax,2; A+add r8,raxmov rax,[rbp]sub rbp,8; R>add rbp,8mov [rbp],raxpop rax; )jmp _i22_o22:; 4DROPmov rax,[rbp-8*3]sub rbp,8*4; R>add rbp,8mov [rbp],raxpop rax; >Amov r8,raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :OP  |4082|e     .  | calls:4 niv:0 len:14 ( ab --  )w70:;---------GEN; 2DUPmov rcx,[rbp]mov [rbp+8],raxmov [rbp+8*2],rcxadd rbp,8*2; 2; OPTN <<shl rax,2; 'pyBPP; OPTAV !mov dword[w57],eaxmov rax,[rbp]sub rbp,8; 2; OPTN <<shl rax,2; 'pxBPP; OPTAV !mov dword[w56],eaxmov rax,[rbp]sub rbp,8; 'opy; OPTAV !mov dword[w55],eaxmov rax,[rbp]sub rbp,8; 'opx; OPTAV !mov dword[w54],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :rlq  |3001490|l  ;  . I| calls:1 niv:3 len:17 ( ab --  )w81:;---------GEN; $f; OPTN >=?cmp rax,15jl _o24; (; DROPmov rax,[rbp]sub rbp,8; (_i25:; 1?or rax,raxjz _o25; 1; OPTN -sub rax,1; ink; OPTV A!+movsxd rbx,dword[w53]mov dword[r8],ebxadd r8,4; )jmp _i25_o25:; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o24:; 1?or rax,raxjz _o26; (; DUPadd rbp,8mov [rbp],rax; 4; OPTN <<shl rax,4; ORor rax,[rbp]sub rbp,8; $ff; OPTN XORxor rax,255; SWAPxchg rax,[rbp]; (_i27:; 1?or rax,raxjz _o27; 1; OPTN -sub rax,1; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; inkadd rbp,8mov [rbp],raxmovsxd rax,dword[w53]; acpx!+call w61; )jmp _i27_o27:; 2DROPmov rax,[rbp-8]sub rbp,8*2; ;ret; )_o26:; DROPmov rax,[rbp]sub rbp,8; 2; OPTN <<shl rax,2; A+add r8,raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :runlenSolid  |4001484|l'    . I| calls:1 niv:4 len:14 (  --  )w82:;---------GEN; 'runlenscanadd rbp,8mov [rbp],raxmov rax,w5F; (_i28:; @+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o28; DUPadd rbp,8mov [rbp],rax; 9; OPTN >>sar rax,9; $7ff; OPTN ANDand rax,2047; SWAPxchg rax,[rbp]; $1ff; OPTN ANDand rax,511; rlqcall w81; )jmp _i28_o28:; 2DROPmov rax,[rbp-8]sub rbp,8*2; -4; OPTN A+add r8,-4; ;ret;--------------------------; :heap!  |1001490|l  ;  . I| calls:1 niv:1 len:32 ( a --  )w99:;---------GEN; heapcntadd rbp,8mov [rbp],raxmovsxd rax,dword[w5C]; DUPadd rbp,8mov [rbp],rax; 1; OPTN +add rax,1; 'heapcnt; OPTAV !mov dword[w5C],eaxmov rax,[rbp]sub rbp,8; (_i29:; 1?or rax,raxjz _o29; DUPadd rbp,8mov [rbp],rax; 1; OPTN -sub rax,1; 1; OPTN >>sar rax,1; DUPadd rbp,8mov [rbp],rax; 2; OPTN <<shl rax,2; 'heapseg; OPTAV +add rax,w5B; @movsxd rax,dword [rax]; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; <?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjge _o2A; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; 2; OPTN <<shl rax,2; 'heapseg; OPTAV +add rax,w5B; !mov rcx,[rbp]mov dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; ;ret; )_o2A:; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; 2; OPTN <<shl rax,2; 'heapseg; OPTAV +add rax,w5B; !mov rcx,[rbp]mov dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; )jmp _i29_o29:; DROPmov rax,[rbp]sub rbp,8; 'heapseg; OPTAV !mov dword[w5B],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :heapl  |1001490|l  ;  . I| calls:1 niv:1 len:18 ( abc -- de )w9A:;---------GEN; heapcnt; OPTV >=?cmp eax,dword[w5C]jl _o2B; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o2B:; 2; OPTN <<shl rax,2; 'heapseg; OPTAV +add rax,w5B; @movsxd rax,dword [rax]; >?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjle _o2C; (; DROPmov rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; DUPadd rbp,8mov [rbp],rax; 2; OPTN <<shl rax,2; 'heapseg; OPTAV +add rax,w5B; @movsxd rax,dword [rax]; )_o2C:; ;ret;--------------------------; :moveDown  |1001490|l  ;  . I| calls:1 niv:1 len:35 ( ab --  )w9B:;---------GEN; (_i2D:; heapcntadd rbp,8mov [rbp],raxmovsxd rax,dword[w5C]; 1; OPTN >>sar rax,1; <?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjge _o2D; DUPadd rbp,8mov [rbp],rax; 1; OPTN <<shl rax,1; 1; OPTN +add rax,1; DUPadd rbp,8mov [rbp],rax; 2; OPTN <<shl rax,2; 'heapseg; OPTAV +add rax,w5B; @movsxd rax,dword [rax]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 1; OPTN +add rax,1; heaplcall w9A; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; >=?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjl _o2E; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; 2; OPTN <<shl rax,2; 'heapseg; OPTAV +add rax,w5B; !mov rcx,[rbp]mov dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; ;ret; )_o2E:; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; SWAPxchg rax,[rbp]; 2; OPTN <<shl rax,2; 'heapseg; OPTAV +add rax,w5B; !mov rcx,[rbp]mov dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; DROPmov rax,[rbp]sub rbp,8; )jmp _i2D_o2D:; 2; OPTN <<shl rax,2; 'heapseg; OPTAV +add rax,w5B; !mov rcx,[rbp]mov dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; ;ret;--------------------------; :heap@  |2001480|l     . I| calls:1 niv:2 len:20 (  -- a )w9C:;---------GEN; heapsegadd rbp,8mov [rbp],raxmovsxd rax,dword[w5B]; heapcntadd rbp,8mov [rbp],raxmovsxd rax,dword[w5C]; 1; OPTN -sub rax,1; 2; OPTN <<shl rax,2; 'heapseg; OPTAV +add rax,w5B; @movsxd rax,dword [rax]; 0add rbp,8mov [rbp],raxxor rax,rax; moveDowncall w9B; heapcntadd rbp,8mov [rbp],raxmovsxd rax,dword[w5C]; 1; OPTN -sub rax,1; 0?or rax,raxjnz _o2F; (; -1mov dword[w5B],-1; )_o2F:; 'heapcnt; OPTAV !mov dword[w5C],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :PLINEI  |2001090|l  ;  .  | calls:1 niv:2 len:95 ( ab --  )w9D:;---------GEN; pyBPP; OPTV =?cmp eax,dword[w57]jne _o30; (; DROPmov rax,[rbp]sub rbp,8; 'pxBPP; OPTAV !mov dword[w56],eaxmov rax,[rbp]sub rbp,8; ;ret; )_o30:; pxBPPadd rbp,8mov [rbp],raxmovsxd rax,dword[w56]; pyBPPadd rbp,8mov [rbp],raxmovsxd rax,dword[w57]; 2OVERmov [rbp+8],raxadd rbp,8*2mov rbx,[rbp-8*4]mov [rbp],rbxmov rax,[rbp-8*3]; 'pyBPP; OPTAV !mov dword[w57],eaxmov rax,[rbp]sub rbp,8; 'pxBPP; OPTAV !mov dword[w56],eaxmov rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; >?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjle _o31; (; 2SWAPxchg rax,[rbp-8]mov rcx,[rbp-8*2]xchg rcx,[rbp]mov [rbp-8*2],rcx; )_o31:; SHadd rbp,8mov [rbp],raxmov rax,YRES; 2; OPTN <<shl rax,2; >=?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjl _o32; (; 4DROPmov rax,[rbp-8*3]sub rbp,8*4; ;ret; )_o32:; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; 0; OPTN <=?cmp rax,0jg _o33; (; 4DROPmov rax,[rbp-8*3]sub rbp,8*4; ;ret; )_o33:; ymax; OPTV >?cmp eax,dword[w58]jle _o34; (; DUPadd rbp,8mov [rbp],rax; 'ymax; OPTAV !mov dword[w58],eaxmov rax,[rbp]sub rbp,8; )_o34:; >Rpush raxmov rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; 8; OPTN <<shl rax,8; SWAPxchg rax,[rbp]; 8; OPTN <<shl rax,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; -neg raxadd rax,[rbp]sub rbp,8; R>add rbp,8mov [rbp],raxpop rax; R@add rbp,8mov [rbp],raxmov rax,[rsp]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; -neg raxadd rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; SWAPxchg rax,[rbp]; /mov rbx,raxmov rax,[rbp]sub rbp,8cqoidiv rbx; SWAPxchg rax,[rbp]; -?or rax,raxjns _o35; (; NEGneg rax; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; *imul rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; +add rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; 0add rbp,8mov [rbp],raxxor rax,rax; )_o35:; DUPadd rbp,8mov [rbp],rax; 16; OPTN <<shl rax,16; segs>add rbp,8mov [rbp],raxmovsxd rax,dword[w5A]; 'segs; OPTAV -sub rax,w59; 4; OPTN >>sar rax,4; ORor rax,[rbp]sub rbp,8; heap!call w99; segs>; OPTV !+movsxd rbx,dword[w5A]mov dword[rbx],eaxadd rbx,4mov rax,rbx; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 1; OPTN >>sar rax,1; +add rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; !+mov rcx,[rbp]mov dword[rax],ecxadd rax,4sub rbp,8; !+mov rcx,[rbp]mov dword[rax],ecxadd rax,4sub rbp,8; R>add rbp,8mov [rbp],raxpop rax; SWAPxchg rax,[rbp]; !+mov rcx,[rbp]mov dword[rax],ecxadd rax,4sub rbp,8; 'segs>; OPTAV !mov dword[w5A],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :searchscan  |1001490|l  ;  . I| calls:1 niv:1 len:18 ( a -- b )w9F:;---------GEN; (_i36:; B@+add rbp,8mov [rbp],raxmovsxd rax,dword[r9]add r9,4; 1?or rax,raxjz _o36; 20; OPTN >>>shr rax,20; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; >?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjle _o37; (; DROPmov rax,[rbp]sub rbp,8; -8; OPTN B+add r9,-8; ;ret; )_o37:; DROPmov rax,[rbp]sub rbp,8; )jmp _i36_o36:; DROPmov rax,[rbp]sub rbp,8; -8; OPTN B+add r9,-8; ;ret;--------------------------; :inserta1  |3080|l     .  | calls:3 niv:0 len:15 (  --  )wA0:;---------GEN; B>add rbp,8mov [rbp],raxmov rax,r9; >Rpush raxmov rax,[rbp]sub rbp,8; B@+add rbp,8mov [rbp],raxmovsxd rax,dword[r9]add r9,4; (_i38:; B@add rbp,8mov [rbp],raxmovsxd rax,dword[r9]; 1?or rax,raxjz _o38; SWAPxchg rax,[rbp]; B!+mov dword[r9],eaxadd r9,4mov rax,[rbp]sub rbp,8; )jmp _i38_o38:; SWAPxchg rax,[rbp]; B!+mov dword[r9],eaxadd r9,4mov rax,[rbp]sub rbp,8; B!mov dword[r9],eaxmov rax,[rbp]sub rbp,8; R>add rbp,8mov [rbp],raxpop rax; >Bmov r9,raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :inserta2  |1080|l     .  | calls:1 niv:0 len:18 (  --  )wA1:;---------GEN; B>add rbp,8mov [rbp],raxmov rax,r9; >Rpush raxmov rax,[rbp]sub rbp,8; B@+add rbp,8mov [rbp],raxmovsxd rax,dword[r9]add r9,4; DUPadd rbp,8mov [rbp],rax; (_i39:; B@add rbp,8mov [rbp],raxmovsxd rax,dword[r9]; 1?or rax,raxjz _o39; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; B!+mov dword[r9],eaxadd r9,4mov rax,[rbp]sub rbp,8; )jmp _i39_o39:; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; B!+mov dword[r9],eaxadd r9,4mov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; B!+mov dword[r9],eaxadd r9,4mov rax,[rbp]sub rbp,8; B!mov dword[r9],eaxmov rax,[rbp]sub rbp,8; R>add rbp,8mov [rbp],raxpop rax; >Bmov r9,raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :add.1  |1004490|l  ;  . I| calls:4 niv:1 len:100 ( ab --  )wA2:;---------GEN; B@add rbp,8mov [rbp],raxmovsxd rax,dword[r9]; DUPadd rbp,8mov [rbp],rax; 9; OPTN >>sar rax,9; $7ff; OPTN ANDand rax,2047; 1; OPTN =?cmp rax,1jne _o3A; (; DROPmov rax,[rbp]sub rbp,8; NIPsub rbp,8; +add rax,[rbp]sub rbp,8; B!+mov dword[r9],eaxadd r9,4mov rax,[rbp]sub rbp,8; ;ret; )_o3A:; DROPmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 20; OPTN >>>shr rax,20; =?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjne _o3B; (; inserta1call wA0; DROPmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; $fff001ff; OPTN ANDmov rbx,4293919231and rax,rbx; +add rax,[rbp]sub rbp,8; $200; OPTN ORor rax,512; B!+mov dword[r9],eaxadd r9,4mov rax,[rbp]sub rbp,8; $100000; OPTN +add rax,1048576; $200; OPTN -sub rax,512; B!mov dword[r9],eaxmov rax,[rbp]sub rbp,8; ;ret; )_o3B:; B>add rbp,8mov [rbp],raxmov rax,r9; 4; OPTN +add rax,4; @movsxd rax,dword [rax]; 20; OPTN >>>shr rax,20; 1; OPTN -sub rax,1; =?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjne _o3C; (; inserta1call wA0; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; $200; OPTN -sub rax,512; B!+mov dword[r9],eaxadd r9,4mov rax,[rbp]sub rbp,8; 20; OPTN <<shl rax,20; $200; OPTN ORor rax,512; SWAPxchg rax,[rbp]; $1ff; OPTN ANDand rax,511; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; +add rax,[rbp]sub rbp,8; ORor rax,[rbp]sub rbp,8; B!+mov dword[r9],eaxadd r9,4mov rax,[rbp]sub rbp,8; ;ret; )_o3C:; inserta2call wA1; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; $fff001ff; OPTN ANDmov rbx,4293919231and rax,rbx; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; 20; OPTN >>>shr rax,20; -neg raxadd rax,[rbp]sub rbp,8; 9; OPTN <<shl rax,9; ORor rax,[rbp]sub rbp,8; B!+mov dword[r9],eaxadd r9,4mov rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; $1ff; OPTN ANDand rax,511; +add rax,[rbp]sub rbp,8; $200; OPTN ORor rax,512; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 20; OPTN <<shl rax,20; ORor rax,[rbp]sub rbp,8; B!+mov dword[r9],eaxadd r9,4mov rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; B@add rbp,8mov [rbp],raxmovsxd rax,dword[r9]; DUPadd rbp,8mov [rbp],rax; 20; OPTN >>>shr rax,20; SWAPxchg rax,[rbp]; 9; OPTN >>sar rax,9; $7ff; OPTN ANDand rax,2047; +add rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; -neg raxadd rax,[rbp]sub rbp,8; 9; OPTN <<shl rax,9; SWAPxchg rax,[rbp]; 20; OPTN <<shl rax,20; ORor rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; $1ff; OPTN ANDand rax,511; ORor rax,[rbp]sub rbp,8; B!mov dword[r9],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :add.len  |10024B0|l  ;R . I| calls:2 niv:1 len:62 ( ab --  )wA3:;---------GEN; 1; OPTN =?cmp rax,1jne _o3D; (; DROPmov rax,[rbp]sub rbp,8; $4add rbp,8mov [rbp],raxmov rax,4; SWAPxchg rax,[rbp]; add.1jmp wA2; ;; )_o3D:; B@add rbp,8mov [rbp],raxmovsxd rax,dword[r9]; 9; OPTN >>sar rax,9; $7ff; OPTN ANDand rax,2047; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; >?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjle _o3E; (; inserta1call wA0; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 20; OPTN <<shl rax,20; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 9; OPTN <<shl rax,9; ORor rax,[rbp]sub rbp,8; B@add rbp,8mov [rbp],raxmovsxd rax,dword[r9]; $1ff; OPTN ANDand rax,511; $4; OPTN +add rax,4; ORor rax,[rbp]sub rbp,8; B!+mov dword[r9],eaxadd r9,4mov rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; -neg raxadd rax,[rbp]sub rbp,8; 9; OPTN <<shl rax,9; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; +add rax,[rbp]sub rbp,8; 20; OPTN <<shl rax,20; ORor rax,[rbp]sub rbp,8; B@add rbp,8mov [rbp],raxmovsxd rax,dword[r9]; $1ff; OPTN ANDand rax,511; ORor rax,[rbp]sub rbp,8; B!mov dword[r9],eaxmov rax,[rbp]sub rbp,8; ;ret; )_o3E:; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; <?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjge _o3F; (; B@add rbp,8mov [rbp],raxmovsxd rax,dword[r9]; $4; OPTN +add rax,4; B!+mov dword[r9],eaxadd r9,4mov rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; +add rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; -neg raxadd rax,[rbp]sub rbp,8; add.lenjmp wA3; ;; )_o3F:; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; B@add rbp,8mov [rbp],raxmovsxd rax,dword[r9]; $4; OPTN +add rax,4; B!+mov dword[r9],eaxadd r9,4mov rax,[rbp]sub rbp,8; ;ret;--------------------------; :coverl  |2001090|l  ;  .  | calls:1 niv:2 len:20 ( abc -- de )wA4:;---------GEN; +?or rax,raxjs _o40; (; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; $3; OPTN ANDand rax,3; $4add rbp,8mov [rbp],raxmov rax,4; SWAPxchg rax,[rbp]; -neg raxadd rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; add.1call wA2; 1; OPTN +add rax,1; ;ret; )_o40:; DROPmov rax,[rbp]sub rbp,8; NIPsub rbp,8; 0add rbp,8mov [rbp],raxxor rax,rax; 'runlenscan; OPTAV >Bmov r9,w5F; ;ret;--------------------------; :limup  |1090|l  ;  .  | calls:1 niv:0 len:12 ( ab -- cde )wA5:;---------GEN; SWadd rbp,8mov [rbp],raxmov rax,XRES; >?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjle _o41; (; SWadd rbp,8mov [rbp],raxmov rax,XRES; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; -neg raxadd rax,[rbp]sub rbp,8; ;ret; )_o41:; DUPadd rbp,8mov [rbp],rax; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; -neg raxadd rax,[rbp]sub rbp,8; ;ret;--------------------------; :limdn  |2001090|l  ;  .  | calls:1 niv:2 len:11 ( abc -- d )wA6:;---------GEN; 0; OPTN >?cmp rax,0jle _o42; (; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; SWAPxchg rax,[rbp]; add.lenjmp wA3; ;; )_o42:; DROPmov rax,[rbp]sub rbp,8; NIPsub rbp,8; ;ret;--------------------------; :coverpixels  |2001090|l  ;  .  | calls:1 niv:2 len:57 ( ab --  )wA7:;---------GEN; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 2; OPTN >>sar rax,2; -?or rax,raxjns _o43; (; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; ;ret; )_o43:; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 2; OPTN >>sar rax,2; SWadd rbp,8mov [rbp],raxmov rax,XRES; >=?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjl _o44; (; 4DROPmov rax,[rbp-8*3]sub rbp,8*4; ;ret; )_o44:; searchscancall w9F; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; =?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjne _o45; (; NIPsub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; $3; OPTN ANDand rax,3; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; $3; OPTN ANDand rax,3; -neg raxadd rax,[rbp]sub rbp,8; 1?or rax,raxjz _o46; (; SWAPxchg rax,[rbp]; add.1jmp wA2; ;; )_o46:; 2DROPmov rax,[rbp-8]sub rbp,8*2; ;ret; )_o45:; coverlcall wA4; SWAPxchg rax,[rbp]; limupcall wA5; limdncall wA6; SWadd rbp,8mov [rbp],raxmov rax,XRES; <?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjge _o47; (; SWAPxchg rax,[rbp]; $3; OPTN ANDand rax,3; 1?or rax,raxjz _o48; (; SWAPxchg rax,[rbp]; add.1jmp wA2; ;; )_o48:; )_o47:; 2DROPmov rax,[rbp-8]sub rbp,8*2; ;ret;--------------------------; :fillcover  |3001080|l     .  | calls:1 niv:3 len:26 (  --  )wA8:;---------GEN; 'runlenscan; OPTAV >Bmov r9,w5F; 'activosadd rbp,8mov [rbp],raxmov rax,w5D; (_i49:; activos>add rbp,8mov [rbp],raxmovsxd rax,dword[w5E]; 4; OPTN -sub rax,4; <?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjge _o49; @+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; 4; OPTN +add rax,4; @movsxd rax,dword [rax]; 8; OPTN >>sar rax,8; SWAPxchg rax,[rbp]; @+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; 4; OPTN +add rax,4; @movsxd rax,dword [rax]; 8; OPTN >>sar rax,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; coverpixelscall wA7; )jmp _i49_o49:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :activosort  |2090|l  ;  .  | calls:2 niv:0 len:30 ( abc --  )wAA:;---------GEN; (_i4A:; 'activos; OPTAV >?cmp rax,w5Djle _o4A; 4; OPTN -sub rax,4; DUPadd rbp,8mov [rbp],rax; @movsxd rax,dword [rax]; DUPadd rbp,8mov [rbp],rax; 4; OPTN +add rax,4; @movsxd rax,dword [rax]; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; <?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjge _o4B; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; NIPsub rbp,8; 4; OPTN +add rax,4; !mov rcx,[rbp]mov dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; ;ret; )_o4B:; DROPmov rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 4; OPTN +add rax,4; !mov rcx,[rbp]mov dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; )jmp _i4A_o4A:; NIPsub rbp,8; !mov rcx,[rbp]mov dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; ;ret;--------------------------; :activosresort  |1001080|l     .  | calls:1 niv:1 len:15 ( ab -- c )wAC:;---------GEN; DUPadd rbp,8mov [rbp],rax; 4; OPTN +add rax,4; @+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; SWAPxchg rax,[rbp]; @movsxd rax,dword [rax]; +add rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 4; OPTN +add rax,4; !mov rcx,[rbp]mov dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; activosortjmp wAA; ;;--------------------------; :delc  |1090|l  ;  .  | calls:1 niv:0 len:11 ( abcde -- fgh )wAE:;---------GEN; PICK4add rbp,8mov [rbp],raxmov rax,[rbp-8*4]; >?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjle _o4C; (; DROPmov rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; !+mov rcx,[rbp]mov dword[rax],ecxadd rax,4sub rbp,8; SWAPxchg rax,[rbp]; ;ret; )_o4C:; 2DROPmov rax,[rbp-8]sub rbp,8*2; ;ret;--------------------------; :deletecopy  |1001080|l     .  | calls:1 niv:1 len:17 ( a --  )wAF:;---------GEN; DUPadd rbp,8mov [rbp],rax; 4; OPTN +add rax,4; (_i4D:; activos>; OPTV <?cmp eax,dword[w5E]jge _o4D; @+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; DUPadd rbp,8mov [rbp],rax; 12; OPTN +add rax,12; @movsxd rax,dword [rax]; delccall wAE; )jmp _i4D_o4D:; DROPmov rax,[rbp]sub rbp,8; 'activos>; OPTAV !mov dword[w5E],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :deleteline  |2001090|l  ;  .  | calls:1 niv:2 len:22 ( a -- b )wB0:;---------GEN; 'activosadd rbp,8mov [rbp],raxmov rax,w5D; (_i4E:; activos>; OPTV <?cmp eax,dword[w5E]jge _o4E; DUPadd rbp,8mov [rbp],rax; @movsxd rax,dword [rax]; 12; OPTN +add rax,12; @movsxd rax,dword [rax]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; =?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjne _o4F; (; DROPmov rax,[rbp]sub rbp,8; deletecopyjmp wAF; ;; )_o4F:; DROPmov rax,[rbp]sub rbp,8; 4; OPTN +add rax,4; )jmp _i4E_o4E:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :POLI  |1002492|e  ;  . I| calls:2 niv:1 len:75 (  --  )wB2:;---------GEN; ymaxadd rbp,8mov [rbp],raxmovsxd rax,dword[w58]; -?or rax,raxjns _o50; (; DROPmov rax,[rbp]sub rbp,8; 'segsadd rbp,8mov [rbp],raxmov rax,w59; 'segs>; OPTAV !mov dword[w5A],eaxmov rax,[rbp]sub rbp,8; -1mov dword[w58],-1; 0mov dword[w5C],0; ;ret; )_o50:; A>add rbp,8mov [rbp],raxmov rax,r8; B>add rbp,8mov [rbp],raxmov rax,r9; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; SHadd rbp,8mov [rbp],raxmov rax,YRES; 2; OPTN <<shl rax,2; >?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjle _o51; (; SHadd rbp,8mov [rbp],raxmov rax,YRES; 2; OPTN <<shl rax,2; 'ymax; OPTAV !mov dword[w58],eaxmov rax,[rbp]sub rbp,8; )_o51:; DROPmov rax,[rbp]sub rbp,8; 'activosadd rbp,8mov [rbp],raxmov rax,w5D; 'activos>; OPTAV !mov dword[w5E],eaxmov rax,[rbp]sub rbp,8; heapsegadd rbp,8mov [rbp],raxmovsxd rax,dword[w5B]; 16; OPTN >>sar rax,16; DUPadd rbp,8mov [rbp],rax; 0add rbp,8mov [rbp],raxxor rax,rax; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 2; OPTN >>sar rax,2; setxycall w60; (_i52:; ymax; OPTV <?cmp eax,dword[w58]jge _o52; 0add rbp,8mov [rbp],raxxor rax,rax; SWadd rbp,8mov [rbp],raxmov rax,XRES; 1; OPTN +add rax,1; 9; OPTN <<shl rax,9; 'runlenscan; OPTAV !+mov rcx,w5Fmov dword[rcx],eaxadd rcx,4mov rax,rcx; !mov rcx,[rbp]mov dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; $4add rbp,8mov [rbp],raxmov rax,4; (_i53:; 1?or rax,raxjz _o53; 1; OPTN -sub rax,1; >Rpush raxmov rax,[rbp]sub rbp,8; (_i54:; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; =?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjne _o54; NIPsub rbp,8; heap@call w9C; $ffff; OPTN ANDand rax,65535; 4; OPTN <<shl rax,4; 'segs; OPTAV +add rax,w59; DUPadd rbp,8mov [rbp],rax; 4; OPTN +add rax,4; @movsxd rax,dword [rax]; activos>add rbp,8mov [rbp],raxmovsxd rax,dword[w5E]; DUPadd rbp,8mov [rbp],rax; 4; OPTN +add rax,4; 'activos>; OPTAV !mov dword[w5E],eaxmov rax,[rbp]sub rbp,8; activosortcall wAA; heapsegadd rbp,8mov [rbp],raxmovsxd rax,dword[w5B]; 16; OPTN >>sar rax,16; SWAPxchg rax,[rbp]; )jmp _i54_o54:; fillcovercall wA8; 1; OPTN +add rax,1; deletelinecall wB0; 'activosadd rbp,8mov [rbp],raxmov rax,w5D; (_i55:; activos>; OPTV <?cmp eax,dword[w5E]jge _o55; DUPadd rbp,8mov [rbp],rax; @movsxd rax,dword [rax]; activosresortcall wAC; 4; OPTN +add rax,4; )jmp _i55_o55:; DROPmov rax,[rbp]sub rbp,8; R>add rbp,8mov [rbp],raxpop rax; )jmp _i53_o53:; DROPmov rax,[rbp]sub rbp,8; 'runlenSolid; OPTAW EXcall w82; )jmp _i52_o52:; 2DROPmov rax,[rbp-8]sub rbp,8*2; >Bmov r9,raxmov rax,[rbp]sub rbp,8; >Amov r8,raxmov rax,[rbp]sub rbp,8; 'segsadd rbp,8mov [rbp],raxmov rax,w59; 'segs>; OPTAV !mov dword[w5A],eaxmov rax,[rbp]sub rbp,8; -1mov dword[w58],-1; 0mov dword[w5C],0; ;ret;--------------------------; :onshow  |1003082|e     .  | calls:3 niv:1 len:17 ( a --  )w119:;---------GEN; 0mov dword[w118],0; (_i56:; .exitadd rbp,8mov [rbp],raxmovsxd rax,dword[w118]; 0?or rax,raxjnz _o56; DROPmov rax,[rbp]sub rbp,8; UPDATEcall SYSREDRAW; DUPadd rbp,8mov [rbp],rax; EXmov rcx,raxmov rax,[rbp]sub rbp,8call rcx; REDRAWcall SYSUPDATE; )jmp _i56_o56:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 0mov dword[w118],0; ;ret;--------------------------; :getpath  |1092|e  ;  .  | calls:1 niv:0 len:40 ( a -- b )w120:;---------GEN; 'pathadd rbp,8mov [rbp],raxmov rax,w11F; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; (_i57:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; $ff; OPTN ANDand rax,255; 32; OPTN >=?cmp rax,32jl _o57; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; C!+mov rcx,[rbp]mov byte[rax],cladd rax,1sub rbp,8; SWAPxchg rax,[rbp]; )jmp _i57_o57:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 1; OPTN -sub rax,1; (_i58:; DUPadd rbp,8mov [rbp],rax; C@movsx rax,byte [rax]; $2f; OPTN <>?cmp rax,47je _o58; DROPmov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; 'path; OPTAV <=?cmp rax,w11Fjg _o59; (; 0mov dword[w11F],0; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o59:; )jmp _i58_o58:; DROPmov rax,[rbp]sub rbp,8; 0add rbp,8mov [rbp],raxxor rax,rax; SWAPxchg rax,[rbp]; 1; OPTN +add rax,1; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; ;ret;--------------------------; :count  |1092|e  ;  .  | calls:1 niv:0 len:43 ( a -- bc )w130:;---------GEN; DUPadd rbp,8mov [rbp],rax; >Amov r8,raxmov rax,[rbp]sub rbp,8; 0add rbp,8mov [rbp],raxxor rax,rax; (_i5A:; A@+add rbp,8mov [rbp],raxmovsxd rax,dword[r8]add r8,4; DUPadd rbp,8mov [rbp],rax; $01010101; OPTN -sub rax,16843009; SWAPxchg rax,[rbp]; NOTnot rax; ANDand rax,[rbp]sub rbp,8; $80808080; OPTN nand?mov rbx,2155905152test rax,rbxjnz _o5A; DROPmov rax,[rbp]sub rbp,8; 4; OPTN +add rax,4; )jmp _i5A_o5A:; $80; OPTN and?test rax,128jz _o5B; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o5B:; $8000; OPTN and?test rax,32768jz _o5C; (; DROPmov rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; ;ret; )_o5C:; $800000; OPTN and?test rax,8388608jz _o5D; (; DROPmov rax,[rbp]sub rbp,8; 2; OPTN +add rax,2; ;ret; )_o5D:; DROPmov rax,[rbp]sub rbp,8; 3; OPTN +add rax,3; ;ret;--------------------------; :=pre  |1001492|e  ;  . I| calls:1 niv:1 len:22 ( ab -- cd )w134:;---------GEN; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; SWAPxchg rax,[rbp]; (_i5E:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o5E; $df; OPTN ANDand rax,223; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; $df; OPTN ANDand rax,223; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; <>?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxje _o5F; (; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; 0add rbp,8mov [rbp],raxxor rax,rax; ;ret; )_o5F:; DROPmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; )jmp _i5E_o5E:; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; 1add rbp,8mov [rbp],raxmov rax,1; ;ret;--------------------------; :=pi  |1001490|l  ;  . I| calls:1 niv:1 len:21 ( ab -- c )w138:;---------GEN; (_i60:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o60; $df; OPTN ANDand rax,223; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; $df; OPTN ANDand rax,223; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; -neg raxadd rax,[rbp]sub rbp,8; 1?or rax,raxjz _o61; (; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; 0add rbp,8mov [rbp],raxxor rax,rax; ;ret; )_o61:; DROPmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; )jmp _i60_o60:; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; 1add rbp,8mov [rbp],raxmov rax,1; ;ret;--------------------------; :findstri  |2001092|e  ;  .  | calls:1 niv:2 len:18 ( ab -- c )w139:;---------GEN; (_i62:; 2DUPmov rcx,[rbp]mov [rbp+8],raxmov [rbp+8*2],rcxadd rbp,8*2; =picall w138; 0?or rax,raxjnz _o62; DROPmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 0?or rax,raxjnz _o63; (; NIPsub rbp,8; NIPsub rbp,8; ;ret; )_o63:; DROPmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; )jmp _i62_o62:; 2DROPmov rax,[rbp-8]sub rbp,8*2; ;ret;--------------------------; :sign  |2090|l  ;  .  | calls:2 niv:0 len:12 ( ab -- c )w13C:;---------GEN; -?or rax,raxjns _o64; (; DROPmov rax,[rbp]sub rbp,8; $2dadd rbp,8mov [rbp],raxmov rax,45; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; ;ret; )_o64:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; ;ret;--------------------------; :.d  |1006492|e  ;  . I| calls:6 niv:1 len:26 ( a -- b )w13D:;---------GEN; DUPadd rbp,8mov [rbp],rax; ABScqoadd rax,rdxxor rax,rdx; -?or rax,raxjns _o65; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; "-9223372036854775808"add rbp,8mov [rbp],raxmov rax,str9A74; ;ret; )_o65:; 'mbuffadd rbp,8mov [rbp],raxmov rax,w13A; 64; OPTN +add rax,64; 0add rbp,8mov [rbp],raxxor rax,rax; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; (_i66:; 10/modcall w3A; $30; OPTN +add rax,48; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; SWAPxchg rax,[rbp]; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; 1?or rax,raxjz _o66; )jmp _i66_o66:; DROPmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; signjmp w13C; ;;--------------------------; :.b  |1001482|e     . I| calls:1 niv:1 len:22 ( a -- b )w13E:;---------GEN; 'mbuffadd rbp,8mov [rbp],raxmov rax,w13A; 64; OPTN +add rax,64; 0add rbp,8mov [rbp],raxxor rax,rax; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; (_i67:; DUPadd rbp,8mov [rbp],rax; $1; OPTN ANDand rax,1; $30; OPTN +add rax,48; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; SWAPxchg rax,[rbp]; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; 1; OPTN >>>shr rax,1; 1?or rax,raxjz _o67; )jmp _i67_o67:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; ;ret;--------------------------; :.h  |1001482|e     . I| calls:1 niv:1 len:28 ( a -- b )w13F:;---------GEN; 'mbuffadd rbp,8mov [rbp],raxmov rax,w13A; 64; OPTN +add rax,64; 0add rbp,8mov [rbp],raxxor rax,rax; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; (_i68:; DUPadd rbp,8mov [rbp],rax; $f; OPTN ANDand rax,15; $30; OPTN +add rax,48; $39; OPTN >?cmp rax,57jle _o69; (; 7; OPTN +add rax,7; )_o69:; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; SWAPxchg rax,[rbp]; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; 4; OPTN >>>shr rax,4; 1?or rax,raxjz _o68; )jmp _i68_o68:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; ;ret;--------------------------; :.o  |1001482|e     . I| calls:1 niv:1 len:22 ( a -- b )w140:;---------GEN; 'mbuffadd rbp,8mov [rbp],raxmov rax,w13A; 64; OPTN +add rax,64; 0add rbp,8mov [rbp],raxxor rax,rax; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; (_i6A:; DUPadd rbp,8mov [rbp],rax; $7; OPTN ANDand rax,7; $30; OPTN +add rax,48; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; SWAPxchg rax,[rbp]; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; 3; OPTN >>>shr rax,3; 1?or rax,raxjz _o6A; )jmp _i6A_o6A:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; ;ret;--------------------------; :.f  |1001482|e     . I| calls:1 niv:1 len:49 ( a -- b )w141:;---------GEN; 'mbuffadd rbp,8mov [rbp],raxmov rax,w13A; 64; OPTN +add rax,64; 0add rbp,8mov [rbp],raxxor rax,rax; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; 1; OPTN -sub rax,1; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; $ffff; OPTN ANDand rax,65535; 10000add rbp,8mov [rbp],raxmov rax,10000; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; 10000; OPTN +add rax,10000; (_i6B:; 10/modcall w3A; $30; OPTN +add rax,48; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; SWAPxchg rax,[rbp]; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; 1?or rax,raxjz _o6B; )jmp _i6B_o6B:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; $2eadd rbp,8mov [rbp],raxmov rax,46; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; 1; OPTN -sub rax,1; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; ABScqoadd rax,rdxxor rax,rdx; 16; OPTN >>sar rax,16; (_i6C:; 10/modcall w3A; $30; OPTN +add rax,48; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; SWAPxchg rax,[rbp]; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; 1?or rax,raxjz _o6C; )jmp _i6C_o6C:; DROPmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; signjmp w13C; ;;--------------------------; :.r.  |1082|e     .  | calls:1 niv:0 len:17 ( ab -- c )w142:;---------GEN; 'mbuffadd rbp,8mov [rbp],raxmov rax,w13A; 64; OPTN +add rax,64; SWAPxchg rax,[rbp]; -neg raxadd rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; (_i6D:; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; >?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjle _o6D; 1; OPTN -sub rax,1; $20add rbp,8mov [rbp],raxmov rax,32; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; )jmp _i6D_o6D:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :trim  |2082|e     .  | calls:2 niv:0 len:17 ( a -- b )w143:;---------GEN; (_i6E:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 0?or rax,raxjnz _o6F; (; 33; OPTN +add rax,33; )_o6F:; $ff; OPTN ANDand rax,255; 33; OPTN <?cmp rax,33jge _o6E; DROPmov rax,[rbp]sub rbp,8; )jmp _i6E_o6E:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; ;ret;--------------------------; :>>cr  |1092|e  ;  .  | calls:1 niv:0 len:25 ( a -- b )w146:;---------GEN; (_i70:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o70; 10; OPTN =?cmp rax,10jne _o71; (; DROPmov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; ;ret; )_o71:; 13; OPTN =?cmp rax,13jne _o72; (; DROPmov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; ;ret; )_o72:; DROPmov rax,[rbp]sub rbp,8; )jmp _i70_o70:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; ;ret;--------------------------; :only13  |1082|e     .  | calls:1 niv:0 len:42 ( a --  )w148:;---------GEN; DUPadd rbp,8mov [rbp],rax; (_i73:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o73; 13; OPTN =?cmp rax,13jne _o74; (; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; C@movsx rax,byte [rax]; 10; OPTN =?cmp rax,10jne _o75; (; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; 1; OPTN +add rax,1; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; )_o75:; DROPmov rax,[rbp]sub rbp,8; )_o74:; 10; OPTN =?cmp rax,10jne _o76; (; DROPmov rax,[rbp]sub rbp,8; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 13; OPTN <>?cmp rax,13je _o77; (; DROPmov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; 13add rbp,8mov [rbp],raxmov rax,13; )_o77:; )_o76:; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; C!+mov rcx,[rbp]mov byte[rax],cladd rax,1sub rbp,8; SWAPxchg rax,[rbp]; )jmp _i73_o73:; NIPsub rbp,8; SWAPxchg rax,[rbp]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; ;ret;--------------------------; :mark  |6082|e     .  | calls:6 niv:0 len:14 (  --  )w14D:;---------GEN; hereadd rbp,8mov [rbp],raxmovsxd rax,dword[w14A]; 0?or rax,raxjnz _o78; (; MEMadd rbp,8mov [rbp],raxmov rax,[FREE_MEM]; DUPadd rbp,8mov [rbp],rax; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; NIPsub rbp,8; )_o78:; memmap>; OPTV !+movsxd rbx,dword[w14C]mov dword[rbx],eaxadd rbx,4mov rax,rbx; 'memmap>; OPTAV !mov dword[w14C],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :empty  |4092|e  ;  .  | calls:4 niv:0 len:19 (  --  )w14E:;---------GEN; memmap>add rbp,8mov [rbp],raxmovsxd rax,dword[w14C]; 'memmap; OPTAV =?cmp rax,w14Bjne _o79; (; DROPmov rax,[rbp]sub rbp,8; MEMadd rbp,8mov [rbp],raxmov rax,[FREE_MEM]; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; ;ret; )_o79:; 4; OPTN -sub rax,4; DUPadd rbp,8mov [rbp],rax; 'memmap>; OPTAV !mov dword[w14C],eaxmov rax,[rbp]sub rbp,8; @movsxd rax,dword [rax]; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :,s  |8082|e     .  | calls:8 niv:0 len:13 ( a --  )w158:;---------GEN; hereadd rbp,8mov [rbp],raxmovsxd rax,dword[w14A]; SWAPxchg rax,[rbp]; (_i7A:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o7A; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; C!+mov rcx,[rbp]mov byte[rax],cladd rax,1sub rbp,8; SWAPxchg rax,[rbp]; )jmp _i7A_o7A:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :,w  |1082|e     .  | calls:1 niv:0 len:16 ( a --  )w159:;---------GEN; hereadd rbp,8mov [rbp],raxmovsxd rax,dword[w14A]; SWAPxchg rax,[rbp]; (_i7B:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; $ff; OPTN ANDand rax,255; 32; OPTN >?cmp rax,32jle _o7B; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; C!+mov rcx,[rbp]mov byte[rax],cladd rax,1sub rbp,8; SWAPxchg rax,[rbp]; )jmp _i7B_o7B:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :,l  |1092|e  ;  .  | calls:1 niv:0 len:27 ( a --  )w15A:;---------GEN; hereadd rbp,8mov [rbp],raxmovsxd rax,dword[w14A]; SWAPxchg rax,[rbp]; (_i7C:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o7C; 10; OPTN =?cmp rax,10jne _o7D; (; 3; OPTN +add rax,3; )_o7D:; 13; OPTN =?cmp rax,13jne _o7E; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; ;ret; )_o7E:; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; C!+mov rcx,[rbp]mov byte[rax],cladd rax,1sub rbp,8; SWAPxchg rax,[rbp]; )jmp _i7C_o7C:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :c0  |1084|l'    .  | calls:1 niv:0 len:1 (  --  )w164:;---------GEN; ;ret;--------------------------; :c1  |1084|l'    .  | calls:1 niv:0 len:1 (  --  )w165:;---------GEN; ;ret;--------------------------; :c2  |1001084|l'    .  | calls:1 niv:1 len:4 ( ab -- c )w166:;---------GEN; SWAPxchg rax,[rbp]; .bcall w13E; ,sjmp w158; ;;--------------------------; :c3  |1001094|l' ;  .  | calls:1 niv:1 len:8 ( ab -- c )w167:;---------GEN; SWAPxchg rax,[rbp]; 0?or rax,raxjnz _o7F; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o7F:; ,sjmp w158; ;;--------------------------; :c4  |1001084|l'    .  | calls:1 niv:1 len:4 ( ab -- c )w168:;---------GEN; SWAPxchg rax,[rbp]; .dcall w13D; ,sjmp w158; ;;--------------------------; :c5  |1001484|l'    . I| calls:1 niv:1 len:3 (  --  )w169:;---------GEN; $25add rbp,8mov [rbp],raxmov rax,37; here; OPTV C!+movsxd rbx,dword[w14A]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :c6  |1001084|l'    .  | calls:1 niv:1 len:4 ( ab -- c )w16A:;---------GEN; SWAPxchg rax,[rbp]; .fcall w141; ,sjmp w158; ;;--------------------------; :c7  |1001094|l' ;  .  | calls:1 niv:1 len:8 ( ab -- c )w16B:;---------GEN; SWAPxchg rax,[rbp]; 0?or rax,raxjnz _o80; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o80:; ,wjmp w159; ;;--------------------------; :c8  |1001084|l'    .  | calls:1 niv:1 len:4 ( ab -- c )w16C:;---------GEN; SWAPxchg rax,[rbp]; .hcall w13F; ,sjmp w158; ;;--------------------------; :c9  |1001084|l'    .  | calls:1 niv:1 len:6 ( ab -- c )w16D:;---------GEN; SWAPxchg rax,[rbp]; 16; OPTN >>sar rax,16; .dcall w13D; ,sjmp w158; ;;--------------------------; :ca  |1001084|l'    .  | calls:1 niv:1 len:6 ( ab -- c )w16E:;---------GEN; SWAPxchg rax,[rbp]; $ffff; OPTN ANDand rax,65535; .dcall w13D; ,sjmp w158; ;;--------------------------; :cb  |1001484|l'    . I| calls:1 niv:1 len:3 ( ab -- c )w16F:;---------GEN; SWAPxchg rax,[rbp]; here; OPTV C!+movsxd rbx,dword[w14A]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :cc  |1001094|l' ;  .  | calls:1 niv:1 len:8 ( ab -- c )w170:;---------GEN; SWAPxchg rax,[rbp]; 0?or rax,raxjnz _o81; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o81:; ,ljmp w15A; ;;--------------------------; :cd  |1084|l'    .  | calls:1 niv:0 len:1 (  --  )w171:;---------GEN; ;ret;--------------------------; :ce  |1001484|l'    . I| calls:1 niv:1 len:3 (  --  )w172:;---------GEN; 13add rbp,8mov [rbp],raxmov rax,13; here; OPTV C!+movsxd rbx,dword[w14A]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :cf  |1001084|l'    .  | calls:1 niv:1 len:4 ( ab -- c )w173:;---------GEN; SWAPxchg rax,[rbp]; .ocall w140; ,sjmp w158; ;;--------------------------; :,emit  |7001490|l  ;  . I| calls:1 niv:7 len:17 ( ab -- c )w175:;---------GEN; $25; OPTN <>?cmp rax,37je _o82; (; here; OPTV C!+movsxd rbx,dword[w14A]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; ;ret; )_o82:; DROPmov rax,[rbp]sub rbp,8; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; $f; OPTN ANDand rax,15; 2; OPTN <<shl rax,2; 'control; OPTAV +add rax,w174; @movsxd rax,dword [rax]; EXmov rcx,raxmov rax,[rbp]sub rbp,8jmp rcx; ;;--------------------------; :fillrect  |1002482|e     . I| calls:2 niv:1 len:17 ( abcd --  )w1C2:;---------GEN; SWadd rbp,8mov [rbp],raxmov rax,XRES; *imul rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; 2; OPTN <<shl rax,2; VFRAMEadd rbp,8mov [rbp],raxmov rax,[SYSFRAME]; +add rax,[rbp]sub rbp,8; >Amov r8,raxmov rax,[rbp]sub rbp,8; (_i83:; 1?or rax,raxjz _o83; 1; OPTN -sub rax,1; A>add rbp,8mov [rbp],raxmov rax,r8; inkadd rbp,8mov [rbp],raxmovsxd rax,dword[w53]; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; FILLmov rcx,raxmovsxd rax,dword[rbp]movsxd rdi,dword[rbp-8]rep stosdmov rax,[rbp-8*2]sub rbp,8*3; SWadd rbp,8mov [rbp],raxmov rax,XRES; 2; OPTN <<shl rax,2; A+add r8,raxmov rax,[rbp]sub rbp,8; )jmp _i83_o83:; 2DROPmov rax,[rbp-8]sub rbp,8*2; ;ret;--------------------------; :setpix  |1090|l  ;  .  | calls:1 niv:0 len:9 ( ab -- c )w1E3:;---------GEN; nand?mov rbx,raxmov rax,[rbp]sub rbp,8test rax,rbxjnz _o84; (; 4; OPTN A+add r8,4; ;ret; )_o84:; ink; OPTV A!+movsxd rbx,dword[w53]mov dword[r8],ebxadd r8,4; ;ret;--------------------------; :char8i  |1001486|e'    . I| calls:1 niv:1 len:40 ( a --  )w1E4:;---------GEN; ccxadd rbp,8mov [rbp],raxmovsxd rax,dword[w1B5]; ccyadd rbp,8mov [rbp],raxmovsxd rax,dword[w1B6]; SWadd rbp,8mov [rbp],raxmov rax,XRES; *imul rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; 2; OPTN <<shl rax,2; VFRAMEadd rbp,8mov [rbp],raxmov rax,[SYSFRAME]; +add rax,[rbp]sub rbp,8; >Amov r8,raxmov rax,[rbp]sub rbp,8; 3; OPTN <<shl rax,3; DUPadd rbp,8mov [rbp],rax; 1; OPTN >>sar rax,1; +add rax,[rbp]sub rbp,8; 'rom8x12; OPTAV +add rax,w1E2; SWadd rbp,8mov [rbp],raxmov rax,XRES; 8; OPTN -sub rax,8; 2; OPTN <<shl rax,2; SWAPxchg rax,[rbp]; 12add rbp,8mov [rbp],raxmov rax,12; (_i85:; 1?or rax,raxjz _o85; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; $80add rbp,8mov [rbp],raxmov rax,128; (_i86:; 1?or rax,raxjz _o86; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; setpixcall w1E3; 1; OPTN >>sar rax,1; )jmp _i86_o86:; 2DROPmov rax,[rbp-8]sub rbp,8*2; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; A+add r8,raxmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; )jmp _i85_o85:; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; ;ret;--------------------------; :size8i  |1086|e'    .  | calls:1 niv:0 len:3 ( a -- b )w1E5:;---------GEN; 8add rbp,8mov [rbp],raxmov rax,8; NIPsub rbp,8; ;ret;--------------------------; :swprint  |3001082|e     .  | calls:1 niv:3 len:15 ( a -- bc )w200:;---------GEN; 0add rbp,8mov [rbp],raxxor rax,rax; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; (_i87:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o87; $ff; OPTN ANDand rax,255; _charsize; OPTV EXmov ecx,dword[w1F4]call rcx; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; +add rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; )jmp _i87_o87:; 2DROPmov rax,[rbp-8]sub rbp,8*2; ;ret;--------------------------; :ctext  |4001490|l  ;  . I| calls:1 niv:4 len:9 ( a --  )w20A:;---------GEN; 13; OPTN =?cmp rax,13jne _o88; (; DROPmov rax,[rbp]sub rbp,8; cchadd rbp,8mov [rbp],raxmovsxd rax,dword[w1EE]; 'ccy; OPTAV +!add dword[w1B6],eaxmov rax,[rbp]sub rbp,8; 0mov dword[w1B5],0; ;ret; )_o88:; $ff; OPTN ANDand rax,255; DUPadd rbp,8mov [rbp],rax; _charemit; OPTV EXmov ecx,dword[w1F3]call rcx; _charsize; OPTV EXmov ecx,dword[w1F4]call rcx; 'ccx; OPTAV +!add dword[w1B5],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :backfill  |3002482|e     . I| calls:2 niv:3 len:15 ( abcd --  )w212:;---------GEN; cch; OPTV *movsxd rbx,dword[w1EE]imul rax,rbx; SWAPxchg rax,[rbp]; ccw; OPTV *movsxd rbx,dword[w1EF]imul rax,rbx; SWAPxchg rax,[rbp]; 2SWAPxchg rax,[rbp-8]mov rcx,[rbp-8*2]xchg rcx,[rbp]mov [rbp-8*2],rcx; cch; OPTV *movsxd rbx,dword[w1EE]imul rax,rbx; SWAPxchg rax,[rbp]; ccw; OPTV *movsxd rbx,dword[w1EF]imul rax,rbx; SWAPxchg rax,[rbp]; 2DUPmov rcx,[rbp]mov [rbp+8],raxmov [rbp+8*2],rcxadd rbp,8*2; OPcall w70; SWAPxchg rax,[rbp]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 2; OPTN <<shl rax,2; SWAPxchg rax,[rbp]; 2; OPTN <<shl rax,2; SWAPxchg rax,[rbp]; PLINEIcall w9D; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; SWAPxchg rax,[rbp]; OPcall w70; 2; OPTN <<shl rax,2; SWAPxchg rax,[rbp]; 2; OPTN <<shl rax,2; SWAPxchg rax,[rbp]; PLINEIcall w9D; POLIjmp wB2; ;;--------------------------; :alp!+  |2090|l  ;  .  | calls:2 niv:0 len:56 ( a --  )w224:;---------GEN; DUPadd rbp,8mov [rbp],rax; 24; OPTN >>sar rax,24; $ff; OPTN ANDand rax,255; 0?or rax,raxjnz _o89; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; 4; OPTN A+add r8,4; ;ret; )_o89:; $ff; OPTN =?cmp rax,255jne _o8A; (; DROPmov rax,[rbp]sub rbp,8; A!+mov dword[r8],eaxadd r8,4mov rax,[rbp]sub rbp,8; ;ret; )_o8A:; A@add rbp,8mov [rbp],raxmovsxd rax,dword[r8]; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; $ff00ff; OPTN ANDand rax,16711935; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; $ff00ff; OPTN ANDand rax,16711935; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; -neg raxadd rax,[rbp]sub rbp,8; PICK4add rbp,8mov [rbp],raxmov rax,[rbp-8*4]; *imul rax,[rbp]sub rbp,8; 8; OPTN >>sar rax,8; +add rax,[rbp]sub rbp,8; $ff00ff; OPTN ANDand rax,16711935; >Rpush raxmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; $ff00; OPTN ANDand rax,65280; SWAPxchg rax,[rbp]; $ff00; OPTN ANDand rax,65280; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; -neg raxadd rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; *imul rax,[rbp]sub rbp,8; 8; OPTN >>sar rax,8; +add rax,[rbp]sub rbp,8; $ff00; OPTN ANDand rax,65280; R>add rbp,8mov [rbp],raxpop rax; ORor rax,[rbp]sub rbp,8; A!+mov dword[r8],eaxadd r8,4mov rax,[rbp]sub rbp,8; ;ret;--------------------------; :clipw  |1090|l  ;  .  | calls:1 niv:0 len:10 ( ab -- cde )w227:;---------GEN; SWadd rbp,8mov [rbp],raxmov rax,XRES; >?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjle _o8B; (; SWadd rbp,8mov [rbp],raxmov rax,XRES; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; -neg raxadd rax,[rbp]sub rbp,8; ;ret; )_o8B:; wbadd rbp,8mov [rbp],raxmovsxd rax,dword[w216]; ;ret;--------------------------; :negw  |1090|l  ;  .  | calls:1 niv:0 len:15 ( a -- b )w228:;---------GEN; -?or rax,raxjns _o8C; (; DUPadd rbp,8mov [rbp],rax; 'wi; OPTAV +!add dword[w21A],eaxmov rax,[rbp]sub rbp,8; NEGneg rax; 'addm; OPTAV !mov dword[w219],eaxmov rax,[rbp]sub rbp,8; 0add rbp,8mov [rbp],raxxor rax,rax; ;ret; )_o8C:; 0mov dword[w219],0; ;ret;--------------------------; :cliph  |1090|l  ;  .  | calls:1 niv:0 len:10 ( ab -- cde )w229:;---------GEN; SHadd rbp,8mov [rbp],raxmov rax,YRES; >?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjle _o8D; (; SHadd rbp,8mov [rbp],raxmov rax,YRES; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; -neg raxadd rax,[rbp]sub rbp,8; ;ret; )_o8D:; hbadd rbp,8mov [rbp],raxmovsxd rax,dword[w217]; ;ret;--------------------------; :clip  |1001080|l     .  | calls:1 niv:1 len:30 ( ab -- cd )w22A:;---------GEN; SWAPxchg rax,[rbp]; wbadd rbp,8mov [rbp],raxmovsxd rax,dword[w216]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; +add rax,[rbp]sub rbp,8; clipwcall w227; 'wi; OPTAV !mov dword[w21A],eaxmov rax,[rbp]sub rbp,8; DROPmov rax,[rbp]sub rbp,8; negwcall w228; SWAPxchg rax,[rbp]; hbadd rbp,8mov [rbp],raxmovsxd rax,dword[w217]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; +add rax,[rbp]sub rbp,8; cliphcall w229; 'hi; OPTAV !mov dword[w21B],eaxmov rax,[rbp]sub rbp,8; DROPmov rax,[rbp]sub rbp,8; -?or rax,raxjns _o8E; (; DUPadd rbp,8mov [rbp],rax; 'hi; OPTAV +!add dword[w21B],eaxmov rax,[rbp]sub rbp,8; NEGneg rax; wb; OPTV *movsxd rbx,dword[w216]imul rax,rbx; 'addm; OPTAV +!add dword[w219],eaxmov rax,[rbp]sub rbp,8; 0add rbp,8mov [rbp],raxxor rax,rax; )_o8E:; ;ret;--------------------------; :d0  |1084|l'    .  | calls:1 niv:0 len:36 ( a --  )w22B:;---------GEN; addmadd rbp,8mov [rbp],raxmovsxd rax,dword[w219]; 2; OPTN <<shl rax,2; +add rax,[rbp]sub rbp,8; >Bmov r9,raxmov rax,[rbp]sub rbp,8; wbadd rbp,8mov [rbp],raxmovsxd rax,dword[w216]; wi; OPTV -movsxd rbx,dword[w21A]sub rax,rbx; 2; OPTN <<shl rax,2; SWadd rbp,8mov [rbp],raxmov rax,XRES; wi; OPTV -movsxd rbx,dword[w21A]sub rax,rbx; 2; OPTN <<shl rax,2; hiadd rbp,8mov [rbp],raxmovsxd rax,dword[w21B]; (_i8F:; 1?or rax,raxjz _o8F; wiadd rbp,8mov [rbp],raxmovsxd rax,dword[w21A]; (_i90:; 1?or rax,raxjz _o90; B@+add rbp,8mov [rbp],raxmovsxd rax,dword[r9]add r9,4; A!+mov dword[r8],eaxadd r8,4mov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; )jmp _i90_o90:; DROPmov rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; A+add r8,raxmov rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; B+add r9,raxmov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; )jmp _i8F_o8F:; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; ;ret;--------------------------; :d1  |1001084|l'    .  | calls:1 niv:1 len:36 ( a --  )w22C:;---------GEN; addmadd rbp,8mov [rbp],raxmovsxd rax,dword[w219]; 2; OPTN <<shl rax,2; +add rax,[rbp]sub rbp,8; >Bmov r9,raxmov rax,[rbp]sub rbp,8; wbadd rbp,8mov [rbp],raxmovsxd rax,dword[w216]; wi; OPTV -movsxd rbx,dword[w21A]sub rax,rbx; 2; OPTN <<shl rax,2; SWadd rbp,8mov [rbp],raxmov rax,XRES; wi; OPTV -movsxd rbx,dword[w21A]sub rax,rbx; 2; OPTN <<shl rax,2; hiadd rbp,8mov [rbp],raxmovsxd rax,dword[w21B]; (_i91:; 1?or rax,raxjz _o91; wiadd rbp,8mov [rbp],raxmovsxd rax,dword[w21A]; (_i92:; 1?or rax,raxjz _o92; B@+add rbp,8mov [rbp],raxmovsxd rax,dword[r9]add r9,4; alp!+call w224; 1; OPTN -sub rax,1; )jmp _i92_o92:; DROPmov rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; A+add r8,raxmov rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; B+add r9,raxmov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; )jmp _i91_o91:; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; ;ret;--------------------------; :d2  |1001484|l'    . I| calls:1 niv:1 len:34 ( a --  )w22D:;---------GEN; addm; OPTV +movsxd rbx,dword[w219]add rax,rbx; >Bmov r9,raxmov rax,[rbp]sub rbp,8; wbadd rbp,8mov [rbp],raxmovsxd rax,dword[w216]; wi; OPTV -movsxd rbx,dword[w21A]sub rax,rbx; SWadd rbp,8mov [rbp],raxmov rax,XRES; wi; OPTV -movsxd rbx,dword[w21A]sub rax,rbx; 2; OPTN <<shl rax,2; hiadd rbp,8mov [rbp],raxmovsxd rax,dword[w21B]; (_i93:; 1?or rax,raxjz _o93; wiadd rbp,8mov [rbp],raxmovsxd rax,dword[w21A]; (_i94:; 1?or rax,raxjz _o94; B>add rbp,8mov [rbp],raxmov rax,r9; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 2; OPTN <<shl rax,2; paleta; OPTV +movsxd rbx,dword[w218]add rax,rbx; @movsxd rax,dword [rax]; A!+mov dword[r8],eaxadd r8,4mov rax,[rbp]sub rbp,8; >Bmov r9,raxmov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; )jmp _i94_o94:; DROPmov rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; A+add r8,raxmov rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; B+add r9,raxmov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; )jmp _i93_o93:; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; ;ret;--------------------------; :d3  |2001484|l'    . I| calls:1 niv:2 len:34 ( a --  )w22E:;---------GEN; addm; OPTV +movsxd rbx,dword[w219]add rax,rbx; >Bmov r9,raxmov rax,[rbp]sub rbp,8; wbadd rbp,8mov [rbp],raxmovsxd rax,dword[w216]; wi; OPTV -movsxd rbx,dword[w21A]sub rax,rbx; SWadd rbp,8mov [rbp],raxmov rax,XRES; wi; OPTV -movsxd rbx,dword[w21A]sub rax,rbx; 2; OPTN <<shl rax,2; hiadd rbp,8mov [rbp],raxmovsxd rax,dword[w21B]; (_i95:; 1?or rax,raxjz _o95; wiadd rbp,8mov [rbp],raxmovsxd rax,dword[w21A]; (_i96:; 1?or rax,raxjz _o96; B>add rbp,8mov [rbp],raxmov rax,r9; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 2; OPTN <<shl rax,2; paleta; OPTV +movsxd rbx,dword[w218]add rax,rbx; @movsxd rax,dword [rax]; alp!+call w224; >Bmov r9,raxmov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; )jmp _i96_o96:; DROPmov rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; A+add r8,raxmov rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; B+add r9,raxmov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; )jmp _i95_o95:; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; ;ret;--------------------------; :sprite  |7001492|e  ;  . I| calls:1 niv:7 len:62 ( abc --  )w230:;---------GEN; 0?or rax,raxjnz _o97; (; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; ;ret; )_o97:; @+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; DUPadd rbp,8mov [rbp],rax; $fff; OPTN ANDand rax,4095; 'wb; OPTAV !mov dword[w216],eaxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 12; OPTN >>sar rax,12; $fff; OPTN ANDand rax,4095; 'hb; OPTAV !mov dword[w217],eaxmov rax,[rbp]sub rbp,8; 2SWAPxchg rax,[rbp-8]mov rcx,[rbp-8*2]xchg rcx,[rbp]mov [rbp-8*2],rcx; clipcall w22A; wiadd rbp,8mov [rbp],raxmovsxd rax,dword[w21A]; hi; OPTV ORmovsxd rbx,dword[w21B]or rax,rbx; -?or rax,raxjns _o98; (; DROPmov rax,[rbp]sub rbp,8; 4DROPmov rax,[rbp-8*3]sub rbp,8*4; ;ret; )_o98:; DROPmov rax,[rbp]sub rbp,8; SWadd rbp,8mov [rbp],raxmov rax,XRES; *imul rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; 2; OPTN <<shl rax,2; VFRAMEadd rbp,8mov [rbp],raxmov rax,[SYSFRAME]; +add rax,[rbp]sub rbp,8; >Amov r8,raxmov rax,[rbp]sub rbp,8; $2000000; OPTN and?test rax,33554432jz _o99; (; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 'paleta; OPTAV !mov dword[w218],eaxmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 24; OPTN >>sar rax,24; $3; OPTN ORor rax,3; $ff; OPTN ANDand rax,255; 1; OPTN +add rax,1; 2; OPTN <<shl rax,2; +add rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; )_o99:; 22; OPTN >>sar rax,22; $c; OPTN ANDand rax,12; 'odraw; OPTAV +add rax,w22F; @movsxd rax,dword [rax]; EXmov rcx,raxmov rax,[rbp]sub rbp,8jmp rcx; ;;--------------------------; :whin  |2082|e     .  | calls:2 niv:0 len:20 ( ab -- c )w294:;---------GEN; yr2add rbp,8mov [rbp],raxmovsxd rax,dword[w293]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; -neg raxadd rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; yr1; OPTV -movsxd rbx,dword[w291]sub rax,rbx; ORor rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; xr2add rbp,8mov [rbp],raxmovsxd rax,dword[w292]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; -neg raxadd rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; xr1; OPTV -movsxd rbx,dword[w290]sub rax,rbx; ORor rax,[rbp]sub rbp,8; ORor rax,[rbp]sub rbp,8; 63; OPTN >>sar rax,63; NOTnot rax; ;ret;--------------------------; :guiAll  |1082|e     .  | calls:1 niv:0 len:13 (  --  )w295:;---------GEN; 0mov dword[w290],0; 0mov dword[w291],0; SWadd rbp,8mov [rbp],raxmov rax,XRES; 'xr2; OPTAV !mov dword[w292],eaxmov rax,[rbp]sub rbp,8; SHadd rbp,8mov [rbp],raxmov rax,YRES; 'yr2; OPTAV !mov dword[w293],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :gui  |1003082|e     .  | calls:3 niv:1 len:17 (  --  )w29B:;---------GEN; idfadd rbp,8mov [rbp],raxmovsxd rax,dword[w28E]; 'idl; OPTAV !mov dword[w28F],eaxmov rax,[rbp]sub rbp,8; hotadd rbp,8mov [rbp],raxmovsxd rax,dword[w289]; 'hotnow; OPTAV !mov dword[w28A],eaxmov rax,[rbp]sub rbp,8; 0mov dword[w28D],0; 0mov dword[w28E],0; 0mov dword[w289],0; guiAlljmp w295; ;;--------------------------; :onClick  |1002092|e  ;  .  | calls:2 niv:1 len:30 ( ab --  )w29D:;---------GEN; 1add rbp,8mov [rbp],raxmov rax,1; 'id; OPTAV +!add dword[w28D],eaxmov rax,[rbp]sub rbp,8; XYPENadd rbp,8mov [rbp],raxmov eax,dword[SYSXM]add rbp,8mov [rbp],raxmov eax,dword[SYSYM]; whincall w294; 0?or rax,raxjnz _o9A; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; ;ret; )_o9A:; DROPmov rax,[rbp]sub rbp,8; BPENadd rbp,8mov [rbp],raxmov eax,dword[SYSBM]; 0?or rax,raxjnz _o9B; (; idadd rbp,8mov [rbp],raxmovsxd rax,dword[w28D]; hotnow; OPTV =?cmp eax,dword[w28A]jne _o9C; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; EXmov rcx,raxmov rax,[rbp]sub rbp,8jmp rcx; ;; )_o9C:; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; ;ret; )_o9B:; 2DROPmov rax,[rbp-8]sub rbp,8*2; idadd rbp,8mov [rbp],raxmovsxd rax,dword[w28D]; 'hot; OPTAV !mov dword[w289],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :guiMap  |1001092|e  ;  .  | calls:1 niv:1 len:44 ( abcd --  )w2A1:;---------GEN; 1add rbp,8mov [rbp],raxmov rax,1; 'id; OPTAV +!add dword[w28D],eaxmov rax,[rbp]sub rbp,8; XYPENadd rbp,8mov [rbp],raxmov eax,dword[SYSXM]add rbp,8mov [rbp],raxmov eax,dword[SYSYM]; whincall w294; 0?or rax,raxjnz _o9D; (; 4DROPmov rax,[rbp-8*3]sub rbp,8*4; ;ret; )_o9D:; DROPmov rax,[rbp]sub rbp,8; BPENadd rbp,8mov [rbp],raxmov eax,dword[SYSBM]; 0?or rax,raxjnz _o9E; (; idadd rbp,8mov [rbp],raxmovsxd rax,dword[w28D]; hotnow; OPTV =?cmp eax,dword[w28A]jne _o9F; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; NIPsub rbp,8; NIPsub rbp,8; EXmov rcx,raxmov rax,[rbp]sub rbp,8jmp rcx; ;; )_o9F:; 4DROPmov rax,[rbp-8*3]sub rbp,8*4; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o9E:; DROPmov rax,[rbp]sub rbp,8; idadd rbp,8mov [rbp],raxmovsxd rax,dword[w28D]; DUPadd rbp,8mov [rbp],rax; 'hot; OPTAV !mov dword[w289],eaxmov rax,[rbp]sub rbp,8; hotnow; OPTV <>?cmp eax,dword[w28A]je _oA0; (; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; EXmov rcx,raxmov rax,[rbp]sub rbp,8jmp rcx; ;; )_oA0:; 2DROPmov rax,[rbp-8]sub rbp,8*2; NIPsub rbp,8; EXmov rcx,raxmov rax,[rbp]sub rbp,8jmp rcx; ;;--------------------------; :ktab  |1002492|e  ;  . I| calls:2 niv:1 len:10 (  --  )w2B0:;---------GEN; mshiftadd rbp,8mov [rbp],raxmovsxd rax,dword[w116]; 1?or rax,raxjz _oA1; (; DROPmov rax,[rbp]sub rbp,8; focoadd rbp,8mov [rbp],raxmovsxd rax,dword[w28B]; 1; OPTN -sub rax,1; 0; OPTN <=?cmp rax,0jg _oA2; (; idladd rbp,8mov [rbp],raxmovsxd rax,dword[w28F]; NIPsub rbp,8; )_oA2:; 'foco; OPTAV !mov dword[w28B],eaxmov rax,[rbp]sub rbp,8; ;ret; )_oA1:; DROPmov rax,[rbp]sub rbp,8; focoadd rbp,8mov [rbp],raxmovsxd rax,dword[w28B]; 1; OPTN +add rax,1; idl; OPTV >?cmp eax,dword[w28F]jle _oA3; (; 0add rbp,8mov [rbp],raxxor rax,rax; NIPsub rbp,8; )_oA3:; 'foco; OPTAV !mov dword[w28B],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :clickfoco  |1096|e' ;  .  | calls:1 niv:0 len:10 (  --  )w2B1:;---------GEN; idfadd rbp,8mov [rbp],raxmovsxd rax,dword[w28E]; foco; OPTV =?cmp eax,dword[w28B]jne _oA4; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_oA4:; 'foco; OPTAV !mov dword[w28B],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :w/foco  |1002092|e  ;  .  | calls:2 niv:1 len:37 ( ab --  )w2B4:;---------GEN; idfadd rbp,8mov [rbp],raxmovsxd rax,dword[w28E]; 1; OPTN +add rax,1; focoadd rbp,8mov [rbp],raxmovsxd rax,dword[w28B]; 0?or rax,raxjnz _oA5; (; DROPmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; DUPadd rbp,8mov [rbp],rax; 'foco; OPTAV !mov dword[w28B],eaxmov rax,[rbp]sub rbp,8; )_oA5:; <>?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxje _oA6; (; 'idf; OPTAV !mov dword[w28E],eaxmov rax,[rbp]sub rbp,8; 2DROPmov rax,[rbp-8]sub rbp,8*2; ;ret; )_oA6:; foconow; OPTV <>?cmp eax,dword[w28C]je _oA7; (; DUPadd rbp,8mov [rbp],rax; 'foconow; OPTAV !mov dword[w28C],eaxmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; EXmov rcx,raxmov rax,[rbp]sub rbp,8call rcx; 'idf; OPTAV !mov dword[w28E],eaxmov rax,[rbp]sub rbp,8; DROPmov rax,[rbp]sub rbp,8; ;ret; )_oA7:; NIPsub rbp,8; 'idf; OPTAV !mov dword[w28E],eaxmov rax,[rbp]sub rbp,8; EXmov rcx,raxmov rax,[rbp]sub rbp,8jmp rcx; ;;--------------------------; :lins  |5014|l' ;     | calls:5 niv:0 len:55 ( a --  )w2BD:;---------GEN; padf>add rbp,8mov [rbp],raxmovsxd rax,dword[w2BC]; padi>; OPTV -movsxd rbx,dword[w2BA]sub rax,rbx; cmax; OPTV >=?cmp eax,dword[w2B9]jl _oA8; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; ;ret; )_oA8:; DROPmov rax,[rbp]sub rbp,8; pad>add rbp,8mov [rbp],raxmovsxd rax,dword[w2BB]; DUPadd rbp,8mov [rbp],rax; 1; OPTN -sub rax,1; padf>add rbp,8mov [rbp],raxmovsxd rax,dword[w2BC]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; -neg raxadd rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; CMOVE>mov rcx,raxmovsxd rsi,dword[rbp]movsxd rdi,dword[rbp-8]lea rsi,[rsi+rcx-1]lea rdi,[rdi+rcx-1]stdrep movsbcldmov rax,[rbp-8*2]sub rbp,8*3; 1add rbp,8mov [rbp],raxmov rax,1; 'padf>; OPTAV +!add dword[w2BC],eaxmov rax,[rbp]sub rbp,8;--------------------------; :lover  |1004|l'       | calls:1 niv:0 len:32 ( a --  )w2BE:;---------GEN; pad>; OPTV C!+movsxd rbx,dword[w2BB]mov byte[rbx],aladd rbx,1mov rax,rbx; DUPadd rbp,8mov [rbp],rax; 'pad>; OPTAV !mov dword[w2BB],eaxmov rax,[rbp]sub rbp,8; padf>; OPTV >?cmp eax,dword[w2BC]jle _oA9; (; DUPadd rbp,8mov [rbp],rax; padi>; OPTV -movsxd rbx,dword[w2BA]sub rax,rbx; cmax; OPTV >=?cmp eax,dword[w2B9]jl _oAA; (; SWAPxchg rax,[rbp]; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; -1add rbp,8mov [rbp],raxmov rax,-1; 'pad>; OPTAV +!add dword[w2BB],eaxmov rax,[rbp]sub rbp,8; )_oAA:; DROPmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 'padf>; OPTAV !mov dword[w2BC],eaxmov rax,[rbp]sub rbp,8; )_oA9:; DROPmov rax,[rbp]sub rbp,8; 0add rbp,8mov [rbp],raxxor rax,rax; padf>; OPTV C!movsxd rbx,dword[w2BC]mov byte[rbx],almov rax,[rbp]sub rbp,8; ;ret;--------------------------; :kdel  |2010|l  ;     | calls:2 niv:0 len:35 (  --  )w2C0:;---------GEN; pad>add rbp,8mov [rbp],raxmovsxd rax,dword[w2BB]; padf>; OPTV >=?cmp eax,dword[w2BC]jl _oAB; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_oAB:; DROPmov rax,[rbp]sub rbp,8; 1add rbp,8mov [rbp],raxmov rax,1; 'pad>; OPTAV +!add dword[w2BB],eaxmov rax,[rbp]sub rbp,8;--------------------------; :kback  |2090|l  ;  .  | calls:2 niv:0 len:24 (  --  )w2C1:;---------GEN; pad>add rbp,8mov [rbp],raxmovsxd rax,dword[w2BB]; padi>; OPTV <=?cmp eax,dword[w2BA]jg _oAC; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_oAC:; DUPadd rbp,8mov [rbp],rax; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; padf>add rbp,8mov [rbp],raxmovsxd rax,dword[w2BC]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; -neg raxadd rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; CMOVEmov rcx,raxmovsxd rsi,dword[rbp]movsxd rdi,dword[rbp-8]rep movsbmov rax,[rbp-8*2]sub rbp,8*3; -1add rbp,8mov [rbp],raxmov rax,-1; 'padf>; OPTAV +!add dword[w2BC],eaxmov rax,[rbp]sub rbp,8; -1add rbp,8mov [rbp],raxmov rax,-1; 'pad>; OPTAV +!add dword[w2BB],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :drc  |1001480|l     . I| calls:1 niv:1 len:28 (  --  )w2C7:;---------GEN; ccxadd rbp,8mov [rbp],raxmovsxd rax,dword[w1B5]; ccyadd rbp,8mov [rbp],raxmovsxd rax,dword[w1B6]; SWadd rbp,8mov [rbp],raxmov rax,XRES; *imul rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; 2; OPTN <<shl rax,2; VFRAMEadd rbp,8mov [rbp],raxmov rax,[SYSFRAME]; +add rax,[rbp]sub rbp,8; >Amov r8,raxmov rax,[rbp]sub rbp,8; cchadd rbp,8mov [rbp],raxmovsxd rax,dword[w1EE]; (_iAD:; 1?or rax,raxjz _oAD; 1; OPTN -sub rax,1; ccwadd rbp,8mov [rbp],raxmovsxd rax,dword[w1EF]; (_iAE:; 1?or rax,raxjz _oAE; 1; OPTN -sub rax,1; A@add rbp,8mov [rbp],raxmovsxd rax,dword[r8]; NOTnot rax; A!+mov dword[r8],eaxadd r8,4mov rax,[rbp]sub rbp,8; )jmp _iAE_oAE:; DROPmov rax,[rbp]sub rbp,8; SWadd rbp,8mov [rbp],raxmov rax,XRES; ccw; OPTV -movsxd rbx,dword[w1EF]sub rax,rbx; 2; OPTN <<shl rax,2; A+add r8,raxmov rax,[rbp]sub rbp,8; )jmp _iAD_oAD:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :drci  |1001480|l     . I| calls:1 niv:1 len:36 (  --  )w2C8:;---------GEN; ccxadd rbp,8mov [rbp],raxmovsxd rax,dword[w1B5]; ccyadd rbp,8mov [rbp],raxmovsxd rax,dword[w1B6]; cchadd rbp,8mov [rbp],raxmovsxd rax,dword[w1EE]; DUPadd rbp,8mov [rbp],rax; 2; OPTN >>sar rax,2; -neg raxadd rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; SWadd rbp,8mov [rbp],raxmov rax,XRES; *imul rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; 2; OPTN <<shl rax,2; VFRAMEadd rbp,8mov [rbp],raxmov rax,[SYSFRAME]; +add rax,[rbp]sub rbp,8; >Amov r8,raxmov rax,[rbp]sub rbp,8; cchadd rbp,8mov [rbp],raxmovsxd rax,dword[w1EE]; 2; OPTN >>sar rax,2; (_iAF:; 1?or rax,raxjz _oAF; 1; OPTN -sub rax,1; ccwadd rbp,8mov [rbp],raxmovsxd rax,dword[w1EF]; (_iB0:; 1?or rax,raxjz _oB0; 1; OPTN -sub rax,1; A@add rbp,8mov [rbp],raxmovsxd rax,dword[r8]; NOTnot rax; A!+mov dword[r8],eaxadd r8,4mov rax,[rbp]sub rbp,8; )jmp _iB0_oB0:; DROPmov rax,[rbp]sub rbp,8; SWadd rbp,8mov [rbp],raxmov rax,XRES; ccw; OPTV -movsxd rbx,dword[w1EF]sub rax,rbx; 2; OPTN <<shl rax,2; A+add r8,raxmov rax,[rbp]sub rbp,8; )jmp _iAF_oAF:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :cursor  |2001090|l  ;  .  | calls:1 niv:2 len:11 (  --  )w2C9:;---------GEN; modoadd rbp,8mov [rbp],raxmovsxd rax,dword[w2C6]; 'lins; OPTAW =?cmp rax,w2BDjne _oB1; (; DROPmov rax,[rbp]sub rbp,8; drcijmp w2C8; ;; )_oB1:; DROPmov rax,[rbp]sub rbp,8; drcjmp w2C7; ;;--------------------------; :cursori  |4002490|l  ;  . I| calls:2 niv:4 len:22 (  --  )w2CA:;---------GEN; MSECcall SYSMSEC; $100; OPTN ANDand rax,256; 1?or rax,raxjz _oB2; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_oB2:; DROPmov rax,[rbp]sub rbp,8; padi>add rbp,8mov [rbp],raxmovsxd rax,dword[w2BA]; (_iB3:; pad>; OPTV =?cmp eax,dword[w2BB]jne _oB4; (; DROPmov rax,[rbp]sub rbp,8; cursorjmp w2C9; ;; )_oB4:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _oB3; $ff; OPTN ANDand rax,255; _charsize; OPTV EXmov ecx,dword[w1F4]call rcx; 'ccx; OPTAV +!add dword[w1B5],eaxmov rax,[rbp]sub rbp,8; )jmp _iB3_oB3:; 2DROPmov rax,[rbp-8]sub rbp,8*2; ;ret;--------------------------; :iniinput  |2084|l'    .  | calls:2 niv:0 len:26 ( abcd -- efgh )w2CB:;---------GEN; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 1; OPTN -sub rax,1; 'cmax; OPTAV !mov dword[w2B9],eaxmov rax,[rbp]sub rbp,8; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; DUPadd rbp,8mov [rbp],rax; 'padi>; OPTAV !mov dword[w2BA],eaxmov rax,[rbp]sub rbp,8; (_iB5:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _oB5; DROPmov rax,[rbp]sub rbp,8; )jmp _iB5_oB5:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; DUPadd rbp,8mov [rbp],rax; 'pad>; OPTAV !mov dword[w2BB],eaxmov rax,[rbp]sub rbp,8; 'padf>; OPTAV !mov dword[w2BC],eaxmov rax,[rbp]sub rbp,8; 'linsadd rbp,8mov [rbp],raxmov rax,w2BD; 'modo; OPTAV !mov dword[w2C6],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :chmode  |2090|l  ;  .  | calls:2 niv:0 len:15 (  --  )w2CC:;---------GEN; modoadd rbp,8mov [rbp],raxmovsxd rax,dword[w2C6]; 'lins; OPTAW =?cmp rax,w2BDjne _oB6; (; DROPmov rax,[rbp]sub rbp,8; 'loveradd rbp,8mov [rbp],raxmov rax,w2BE; 'modo; OPTAV !mov dword[w2C6],eaxmov rax,[rbp]sub rbp,8; ;ret; )_oB6:; DROPmov rax,[rbp]sub rbp,8; 'linsadd rbp,8mov [rbp],raxmov rax,w2BD; 'modo; OPTAV !mov dword[w2C6],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :proinputa  |2001494|l' ;  . I| calls:1 niv:2 len:73 (  --  )w2CD:;---------GEN; ccxadd rbp,8mov [rbp],raxmovsxd rax,dword[w1B5]; cursoricall w2CA; 'ccx; OPTAV !mov dword[w1B5],eaxmov rax,[rbp]sub rbp,8; CHARadd rbp,8mov [rbp],raxmov eax,dword[SYSCHAR]; 1?or rax,raxjz _oB7; (; modo; OPTV EXmov ecx,dword[w2C6]jmp rcx; ;; )_oB7:; DROPmov rax,[rbp]sub rbp,8; KEYadd rbp,8mov [rbp],raxmov eax,dword[SYSKEY]; $4049; OPTN =?cmp rax,16457jne _oB8; (; chmodecall w2CC; )_oB8:; $4050; OPTN =?cmp rax,16464jne _oB9; (; pad>add rbp,8mov [rbp],raxmovsxd rax,dword[w2BB]; padi>; OPTV >?cmp eax,dword[w2BA]jle _oBA; (; 1; OPTN -sub rax,1; )_oBA:; 'pad>; OPTAV !mov dword[w2BB],eaxmov rax,[rbp]sub rbp,8; )_oB9:; $404f; OPTN =?cmp rax,16463jne _oBB; (; pad>add rbp,8mov [rbp],raxmovsxd rax,dword[w2BB]; padf>; OPTV <?cmp eax,dword[w2BC]jge _oBC; (; 1; OPTN +add rax,1; )_oBC:; 'pad>; OPTAV !mov dword[w2BB],eaxmov rax,[rbp]sub rbp,8; )_oBB:; $8; OPTN =?cmp rax,8jne _oBD; (; kbackcall w2C1; )_oBD:; $7f; OPTN =?cmp rax,127jne _oBE; (; kdelcall w2C0; )_oBE:; $404a; OPTN =?cmp rax,16458jne _oBF; (; padi>add rbp,8mov [rbp],raxmovsxd rax,dword[w2BA]; 'pad>; OPTAV !mov dword[w2BB],eaxmov rax,[rbp]sub rbp,8; )_oBF:; $404d; OPTN =?cmp rax,16461jne _oC0; (; padf>add rbp,8mov [rbp],raxmovsxd rax,dword[w2BC]; 'pad>; OPTAV !mov dword[w2BB],eaxmov rax,[rbp]sub rbp,8; )_oC0:; $9; OPTN =?cmp rax,9jne _oC1; (; ktabcall w2B0; )_oC1:; $40e1; OPTN =?cmp rax,16609jne _oC2; (; 1mov dword[w116],1; )_oC2:; $50e1; OPTN =?cmp rax,20705jne _oC3; (; 0mov dword[w116],0; )_oC3:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :proinputexe  |2001484|l'    . I| calls:1 niv:2 len:79 ( abc -- def )w2CF:;---------GEN; ccxadd rbp,8mov [rbp],raxmovsxd rax,dword[w1B5]; cursoricall w2CA; 'ccx; OPTAV !mov dword[w1B5],eaxmov rax,[rbp]sub rbp,8; CHARadd rbp,8mov [rbp],raxmov eax,dword[SYSCHAR]; 1?or rax,raxjz _oC4; (; DUPadd rbp,8mov [rbp],rax; modo; OPTV EXmov ecx,dword[w2C6]call rcx; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; EXmov rcx,raxmov rax,[rbp]sub rbp,8call rcx; )_oC4:; DROPmov rax,[rbp]sub rbp,8; KEYadd rbp,8mov [rbp],raxmov eax,dword[SYSKEY]; $4049; OPTN =?cmp rax,16457jne _oC5; (; chmodecall w2CC; )_oC5:; $8; OPTN =?cmp rax,8jne _oC6; (; kbackcall w2C1; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; EXmov rcx,raxmov rax,[rbp]sub rbp,8call rcx; )_oC6:; $7f; OPTN =?cmp rax,127jne _oC7; (; kdelcall w2C0; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; EXmov rcx,raxmov rax,[rbp]sub rbp,8call rcx; )_oC7:; $4050; OPTN =?cmp rax,16464jne _oC8; (; pad>add rbp,8mov [rbp],raxmovsxd rax,dword[w2BB]; padi>; OPTV >?cmp eax,dword[w2BA]jle _oC9; (; 1; OPTN -sub rax,1; )_oC9:; 'pad>; OPTAV !mov dword[w2BB],eaxmov rax,[rbp]sub rbp,8; )_oC8:; $404f; OPTN =?cmp rax,16463jne _oCA; (; pad>add rbp,8mov [rbp],raxmovsxd rax,dword[w2BB]; padf>; OPTV <?cmp eax,dword[w2BC]jge _oCB; (; 1; OPTN +add rax,1; )_oCB:; 'pad>; OPTAV !mov dword[w2BB],eaxmov rax,[rbp]sub rbp,8; )_oCA:; $404a; OPTN =?cmp rax,16458jne _oCC; (; padi>add rbp,8mov [rbp],raxmovsxd rax,dword[w2BA]; 'pad>; OPTAV !mov dword[w2BB],eaxmov rax,[rbp]sub rbp,8; )_oCC:; $404d; OPTN =?cmp rax,16461jne _oCD; (; padf>add rbp,8mov [rbp],raxmovsxd rax,dword[w2BC]; 'pad>; OPTAV !mov dword[w2BB],eaxmov rax,[rbp]sub rbp,8; )_oCD:; $9; OPTN =?cmp rax,9jne _oCE; (; ktabcall w2B0; )_oCE:; $40e1; OPTN =?cmp rax,16609jne _oCF; (; 1mov dword[w116],1; )_oCF:; $50e1; OPTN =?cmp rax,20705jne _oD0; (; 0mov dword[w116],0; )_oD0:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :scanline2  |1090|l  ;  .  | calls:1 niv:0 len:27 ( ab -- cd )w2DA:;---------GEN; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; nand?mov rbx,raxmov rax,[rbp]sub rbp,8test rax,rbxjnz _oD1; (; 8; OPTN A+add r8,8; ;ret; )_oD1:; inkadd rbp,8mov [rbp],raxmovsxd rax,dword[w53]; DUPadd rbp,8mov [rbp],rax; DUPadd rbp,8mov [rbp],rax; A!+mov dword[r8],eaxadd r8,4mov rax,[rbp]sub rbp,8; A!+mov dword[r8],eaxadd r8,4mov rax,[rbp]sub rbp,8; SWadd rbp,8mov [rbp],raxmov rax,XRES; 2; OPTN -sub rax,2; 2; OPTN <<shl rax,2; A+add r8,raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; A!+mov dword[r8],eaxadd r8,4mov rax,[rbp]sub rbp,8; A!+mov dword[r8],eaxadd r8,4mov rax,[rbp]sub rbp,8; SWadd rbp,8mov [rbp],raxmov rax,XRES; NEGneg rax; 2; OPTN <<shl rax,2; A+add r8,raxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :char8j2  |1001486|e'    . I| calls:1 niv:1 len:37 ( a --  )w2DB:;---------GEN; ccxadd rbp,8mov [rbp],raxmovsxd rax,dword[w1B5]; ccyadd rbp,8mov [rbp],raxmovsxd rax,dword[w1B6]; SWadd rbp,8mov [rbp],raxmov rax,XRES; *imul rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; 2; OPTN <<shl rax,2; VFRAMEadd rbp,8mov [rbp],raxmov rax,[SYSFRAME]; +add rax,[rbp]sub rbp,8; >Amov r8,raxmov rax,[rbp]sub rbp,8; $7f; OPTN ANDand rax,127; 3; OPTN <<shl rax,3; 'fuente8x8; OPTAV +add rax,w2D6; 8add rbp,8mov [rbp],raxmov rax,8; (_iD2:; 1?or rax,raxjz _oD2; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; $80add rbp,8mov [rbp],raxmov rax,128; (_iD3:; 1?or rax,raxjz _oD3; scanline2call w2DA; 1; OPTN >>sar rax,1; )jmp _iD3_oD3:; 2DROPmov rax,[rbp-8]sub rbp,8*2; SWadd rbp,8mov [rbp],raxmov rax,XRES; 1; OPTN <<shl rax,1; 16; OPTN -sub rax,16; 2; OPTN <<shl rax,2; A+add r8,raxmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; )jmp _iD2_oD2:; 2DROPmov rax,[rbp-8]sub rbp,8*2; ;ret;--------------------------; :size8j2  |1086|e'    .  | calls:1 niv:0 len:3 ( a -- b )w2DC:;---------GEN; 16add rbp,8mov [rbp],raxmov rax,16; NIPsub rbp,8; ;ret;--------------------------; :mtrans  |1001482|e     . I| calls:1 niv:1 len:94 ( abc --  )w2F2:;---------GEN; mat>; OPTV >Amovsxd rbx,dword[w2ED]mov r8,rbx; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; A>add rbp,8mov [rbp],raxmov rax,r8; 48; OPTN +add rax,48; @movsxd rax,dword [rax]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; A@add rbp,8mov [rbp],raxmovsxd rax,dword[r8]; +add rax,[rbp]sub rbp,8; A!+mov dword[r8],eaxadd r8,4mov rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; A>add rbp,8mov [rbp],raxmov rax,r8; 48; OPTN +add rax,48; @movsxd rax,dword [rax]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; A@add rbp,8mov [rbp],raxmovsxd rax,dword[r8]; +add rax,[rbp]sub rbp,8; A!+mov dword[r8],eaxadd r8,4mov rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; A>add rbp,8mov [rbp],raxmov rax,r8; 48; OPTN +add rax,48; @movsxd rax,dword [rax]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; A@add rbp,8mov [rbp],raxmovsxd rax,dword[r8]; +add rax,[rbp]sub rbp,8; A!+mov dword[r8],eaxadd r8,4mov rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; A@add rbp,8mov [rbp],raxmovsxd rax,dword[r8]; +add rax,[rbp]sub rbp,8; A!+mov dword[r8],eaxadd r8,4mov rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; A>add rbp,8mov [rbp],raxmov rax,r8; 32; OPTN +add rax,32; @movsxd rax,dword [rax]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; A@add rbp,8mov [rbp],raxmovsxd rax,dword[r8]; +add rax,[rbp]sub rbp,8; A!+mov dword[r8],eaxadd r8,4mov rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; A>add rbp,8mov [rbp],raxmov rax,r8; 32; OPTN +add rax,32; @movsxd rax,dword [rax]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; A@add rbp,8mov [rbp],raxmovsxd rax,dword[r8]; +add rax,[rbp]sub rbp,8; A!+mov dword[r8],eaxadd r8,4mov rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; A>add rbp,8mov [rbp],raxmov rax,r8; 32; OPTN +add rax,32; @movsxd rax,dword [rax]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; A@add rbp,8mov [rbp],raxmovsxd rax,dword[r8]; +add rax,[rbp]sub rbp,8; A!+mov dword[r8],eaxadd r8,4mov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; A@add rbp,8mov [rbp],raxmovsxd rax,dword[r8]; +add rax,[rbp]sub rbp,8; A!+mov dword[r8],eaxadd r8,4mov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; A>add rbp,8mov [rbp],raxmov rax,r8; 16; OPTN +add rax,16; @movsxd rax,dword [rax]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; A@add rbp,8mov [rbp],raxmovsxd rax,dword[r8]; +add rax,[rbp]sub rbp,8; A!+mov dword[r8],eaxadd r8,4mov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; A>add rbp,8mov [rbp],raxmov rax,r8; 16; OPTN +add rax,16; @movsxd rax,dword [rax]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; A@add rbp,8mov [rbp],raxmovsxd rax,dword[r8]; +add rax,[rbp]sub rbp,8; A!+mov dword[r8],eaxadd r8,4mov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; A>add rbp,8mov [rbp],raxmov rax,r8; 16; OPTN +add rax,16; @movsxd rax,dword [rax]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; A@add rbp,8mov [rbp],raxmovsxd rax,dword[r8]; +add rax,[rbp]sub rbp,8; A!+mov dword[r8],eaxadd r8,4mov rax,[rbp]sub rbp,8; A>add rbp,8mov [rbp],raxmov rax,r8; +!mov rcx,[rbp]add dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; ;ret;--------------------------; :mtransi  |1003482|e     . I| calls:3 niv:1 len:45 ( abc --  )w2F3:;---------GEN; mat>; OPTV >Amovsxd rbx,dword[w2ED]mov r8,rbx; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; A@+add rbp,8mov [rbp],raxmovsxd rax,dword[r8]add r8,4; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; A@+add rbp,8mov [rbp],raxmovsxd rax,dword[r8]add r8,4; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; A@+add rbp,8mov [rbp],raxmovsxd rax,dword[r8]add r8,4; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; A@add rbp,8mov [rbp],raxmovsxd rax,dword[r8]; +add rax,[rbp]sub rbp,8; A!+mov dword[r8],eaxadd r8,4mov rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; A@+add rbp,8mov [rbp],raxmovsxd rax,dword[r8]add r8,4; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; A@+add rbp,8mov [rbp],raxmovsxd rax,dword[r8]add r8,4; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; A@+add rbp,8mov [rbp],raxmovsxd rax,dword[r8]add r8,4; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; A@add rbp,8mov [rbp],raxmovsxd rax,dword[r8]; +add rax,[rbp]sub rbp,8; A!+mov dword[r8],eaxadd r8,4mov rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; A@+add rbp,8mov [rbp],raxmovsxd rax,dword[r8]add r8,4; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; A@+add rbp,8mov [rbp],raxmovsxd rax,dword[r8]add r8,4; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; A@+add rbp,8mov [rbp],raxmovsxd rax,dword[r8]add r8,4; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; A@add rbp,8mov [rbp],raxmovsxd rax,dword[r8]; +add rax,[rbp]sub rbp,8; A!mov dword[r8],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :mrotzi  |1001492|e  ;  . I| calls:1 niv:1 len:105 ( a --  )w2FB:;---------GEN; 0?or rax,raxjnz _oD4; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_oD4:; mat>; OPTV >Amovsxd rbx,dword[w2ED]mov r8,rbx; DUPadd rbp,8mov [rbp],rax; sincall w7; SWAPxchg rax,[rbp]; coscall w6; A@add rbp,8mov [rbp],raxmovsxd rax,dword[r8]; A>add rbp,8mov [rbp],raxmov rax,r8; 4; OPTN +add rax,4; @movsxd rax,dword [rax]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; PICK4add rbp,8mov [rbp],raxmov rax,[rbp-8*4]; NEGneg rax; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; A!+mov dword[r8],eaxadd r8,4mov rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; R>add rbp,8mov [rbp],raxpop rax; +add rax,[rbp]sub rbp,8; A!+mov dword[r8],eaxadd r8,4mov rax,[rbp]sub rbp,8; 8; OPTN A+add r8,8; A@add rbp,8mov [rbp],raxmovsxd rax,dword[r8]; A>add rbp,8mov [rbp],raxmov rax,r8; 4; OPTN +add rax,4; @movsxd rax,dword [rax]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; PICK4add rbp,8mov [rbp],raxmov rax,[rbp-8*4]; NEGneg rax; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; A!+mov dword[r8],eaxadd r8,4mov rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; R>add rbp,8mov [rbp],raxpop rax; +add rax,[rbp]sub rbp,8; A!+mov dword[r8],eaxadd r8,4mov rax,[rbp]sub rbp,8; 8; OPTN A+add r8,8; A@add rbp,8mov [rbp],raxmovsxd rax,dword[r8]; A>add rbp,8mov [rbp],raxmov rax,r8; 4; OPTN +add rax,4; @movsxd rax,dword [rax]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; PICK4add rbp,8mov [rbp],raxmov rax,[rbp-8*4]; NEGneg rax; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; A!+mov dword[r8],eaxadd r8,4mov rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; R>add rbp,8mov [rbp],raxpop rax; +add rax,[rbp]sub rbp,8; A!+mov dword[r8],eaxadd r8,4mov rax,[rbp]sub rbp,8; 8; OPTN A+add r8,8; A@add rbp,8mov [rbp],raxmovsxd rax,dword[r8]; A>add rbp,8mov [rbp],raxmov rax,r8; 4; OPTN +add rax,4; @movsxd rax,dword [rax]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; PICK4add rbp,8mov [rbp],raxmov rax,[rbp-8*4]; NEGneg rax; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; A!+mov dword[r8],eaxadd r8,4mov rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; R>add rbp,8mov [rbp],raxpop rax; +add rax,[rbp]sub rbp,8; A!mov dword[r8],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :transform  |1001482|e     . I| calls:1 niv:1 len:48 ( abc -- def )w2FE:;---------GEN; mat>; OPTV >Amovsxd rbx,dword[w2ED]mov r8,rbx; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; A@+add rbp,8mov [rbp],raxmovsxd rax,dword[r8]add r8,4; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; A@+add rbp,8mov [rbp],raxmovsxd rax,dword[r8]add r8,4; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; A@+add rbp,8mov [rbp],raxmovsxd rax,dword[r8]add r8,4; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; A@+add rbp,8mov [rbp],raxmovsxd rax,dword[r8]add r8,4; +add rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; A@+add rbp,8mov [rbp],raxmovsxd rax,dword[r8]add r8,4; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; A@+add rbp,8mov [rbp],raxmovsxd rax,dword[r8]add r8,4; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; A@+add rbp,8mov [rbp],raxmovsxd rax,dword[r8]add r8,4; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; A@+add rbp,8mov [rbp],raxmovsxd rax,dword[r8]add r8,4; +add rax,[rbp]sub rbp,8; >Rpush raxmov rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; A@+add rbp,8mov [rbp],raxmovsxd rax,dword[r8]add r8,4; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; A@+add rbp,8mov [rbp],raxmovsxd rax,dword[r8]add r8,4; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; A@+add rbp,8mov [rbp],raxmovsxd rax,dword[r8]add r8,4; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; -neg raxadd rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; A@add rbp,8mov [rbp],raxmovsxd rax,dword[r8]; +add rax,[rbp]sub rbp,8; R>add rbp,8mov [rbp],raxpop rax; R>add rbp,8mov [rbp],raxpop rax; SWAPxchg rax,[rbp]; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; ;ret;--------------------------; :Omode  |1001482|e     . I| calls:1 niv:1 len:20 (  --  )w305:;---------GEN; SWadd rbp,8mov [rbp],raxmov rax,XRES; DUPadd rbp,8mov [rbp],rax; 1; OPTN >>sar rax,1; 'ox; OPTAV !mov dword[w2E9],eaxmov rax,[rbp]sub rbp,8; SHadd rbp,8mov [rbp],raxmov rax,YRES; DUPadd rbp,8mov [rbp],rax; 1; OPTN >>sar rax,1; 'oy; OPTAV !mov dword[w2EA],eaxmov rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; -neg raxadd rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; ANDand rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 'xf; OPTAV !mov dword[w2E7],eaxmov rax,[rbp]sub rbp,8; 'yf; OPTAV !mov dword[w2E8],eaxmov rax,[rbp]sub rbp,8; 'matsadd rbp,8mov [rbp],raxmov rax,w2EC; DUPadd rbp,8mov [rbp],rax; 'mat>; OPTAV !mov dword[w2ED],eaxmov rax,[rbp]sub rbp,8; 'matiadd rbp,8mov [rbp],raxmov rax,w2EB; 16add rbp,8mov [rbp],raxmov rax,16; MOVEmov rcx,raxmovsxd rsi,dword[rbp]movsxd rdi,dword[rbp-8]rep movsdmov rax,[rbp-8*2]sub rbp,8*3; ;ret;--------------------------; :project3d  |2006092|e  ;  .  | calls:6 niv:2 len:22 ( abc -- de )w30F:;---------GEN; transformcall w2FE; 0?or rax,raxjnz _oD5; (; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; oxadd rbp,8mov [rbp],raxmovsxd rax,dword[w2E9]; oyadd rbp,8mov [rbp],raxmovsxd rax,dword[w2EA]; ;ret; )_oD5:; >Rpush raxmov rax,[rbp]sub rbp,8; yfadd rbp,8mov [rbp],raxmovsxd rax,dword[w2E8]; R@add rbp,8mov [rbp],raxmov rax,[rsp]; */mov rbx,raxmov rcx,[rbp]mov rax,[rbp-8]sub rbp,8*2cqoimul rcxidiv rbx; oy; OPTV +movsxd rbx,dword[w2EA]add rax,rbx; SWAPxchg rax,[rbp]; xfadd rbp,8mov [rbp],raxmovsxd rax,dword[w2E7]; R>add rbp,8mov [rbp],raxpop rax; */mov rbx,raxmov rcx,[rbp]mov rax,[rbp-8]sub rbp,8*2cqoimul rcxidiv rbx; ox; OPTV +movsxd rbx,dword[w2E9]add rax,rbx; SWAPxchg rax,[rbp]; ;ret;--------------------------; :delp  |1080|l     .  | calls:1 niv:0 len:15 ( abc -- def )w320:;---------GEN; NIPsub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; @movsxd rax,dword [rax]; 64; OPTN -sub rax,64; 2DUPmov rcx,[rbp]mov [rbp+8],raxmov [rbp+8*2],rcxadd rbp,8*2; 8add rbp,8mov [rbp],raxmov rax,8; QMOVEmov rcx,raxmovsxd rsi,dword[rbp]movsxd rdi,dword[rbp-8]rep movsqmov rax,[rbp-8*2]sub rbp,8*3; DUPadd rbp,8mov [rbp],rax; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; !mov rcx,[rbp]mov dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; SWAPxchg rax,[rbp]; 64; OPTN -sub rax,64; ;ret;--------------------------; :p.draw  |1001082|e     .  | calls:1 niv:1 len:20 ( a --  )w321:;---------GEN; DUPadd rbp,8mov [rbp],rax; @+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; SWAPxchg rax,[rbp]; @movsxd rax,dword [rax]; (_iD6:; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; <?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjge _oD6; DUPadd rbp,8mov [rbp],rax; @+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; EXmov rcx,raxmov rax,[rbp]sub rbp,8call rcx; 0?or rax,raxjnz _oD7; (; DROPmov rax,[rbp]sub rbp,8; delpcall w320; )_oD7:; 64; OPTN +add rax,64; )jmp _iD6_oD6:; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; ;ret;--------------------------; :p.mapv  |1001082|e     .  | calls:1 niv:1 len:13 ( ab --  )w324:;---------GEN; @+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; SWAPxchg rax,[rbp]; @movsxd rax,dword [rax]; (_iD8:; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; <?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjge _oD8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; EXmov rcx,raxmov rax,[rbp]sub rbp,8call rcx; 64; OPTN +add rax,64; )jmp _iD8_oD8:; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; ;ret;--------------------------; :signo  |2090|l  ;  .  | calls:2 niv:0 len:23 ( a -- bc )w328:;---------GEN; DUPadd rbp,8mov [rbp],rax; C@movsx rax,byte [rax]; $2b; OPTN =?cmp rax,43jne _oD9; (; DROPmov rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; 0add rbp,8mov [rbp],raxxor rax,rax; ;ret; )_oD9:; $2d; OPTN =?cmp rax,45jne _oDA; (; DROPmov rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; 1add rbp,8mov [rbp],raxmov rax,1; ;ret; )_oDA:; DROPmov rax,[rbp]sub rbp,8; 0add rbp,8mov [rbp],raxxor rax,rax; ;ret;--------------------------; :dighex  |2090|l  ;  .  | calls:2 niv:0 len:36 ( a -- b )w329:;---------GEN; $3A; OPTN <?cmp rax,58jge _oDB; (; $30; OPTN -sub rax,48; ;ret; )_oDB:; $60; OPTN >?cmp rax,96jle _oDC; (; $57; OPTN -sub rax,87; $f; OPTN >?cmp rax,15jle _oDD; (; DROPmov rax,[rbp]sub rbp,8; -1add rbp,8mov [rbp],raxmov rax,-1; )_oDD:; ;ret; )_oDC:; $40; OPTN >?cmp rax,64jle _oDE; (; $37; OPTN -sub rax,55; $f; OPTN >?cmp rax,15jle _oDF; (; DROPmov rax,[rbp]sub rbp,8; -1add rbp,8mov [rbp],raxmov rax,-1; )_oDF:; ;ret; )_oDE:; DROPmov rax,[rbp]sub rbp,8; -1add rbp,8mov [rbp],raxmov rax,-1; ;ret;--------------------------; :str$>nro  |1001092|e  ;  .  | calls:1 niv:1 len:26 ( a -- bc )w32A:;---------GEN; 0add rbp,8mov [rbp],raxxor rax,rax; SWAPxchg rax,[rbp]; (_iE0:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; $2f; OPTN >?cmp rax,47jle _oE0; dighexcall w329; -?or rax,raxjns _oE1; (; DROPmov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; ;ret; )_oE1:; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; 4; OPTN <<shl rax,4; +add rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; )jmp _iE0_oE0:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; ;ret;--------------------------; :str%>nro  |1092|e  ;  .  | calls:1 niv:0 len:30 ( a -- bc )w32B:;---------GEN; 0add rbp,8mov [rbp],raxxor rax,rax; SWAPxchg rax,[rbp]; (_iE2:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; $2e; OPTN >=?cmp rax,46jl _oE2; $31; OPTN >?cmp rax,49jle _oE3; (; DROPmov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; ;ret; )_oE3:; $30; OPTN -sub rax,48; $1; OPTN ANDand rax,1; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; 1; OPTN <<shl rax,1; +add rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; )jmp _iE2_oE2:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; ;ret;--------------------------; :str>nro  |10014D2|e  ; [. I| calls:1 niv:1 len:77 ( a -- bc )w32C:;---------GEN; signocall w328; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; C@movsx rax,byte [rax]; 33; OPTN <?cmp rax,33jge _oE4; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; 1; OPTN -sub rax,1; 0add rbp,8mov [rbp],raxxor rax,rax; ;ret; )_oE4:; SWAPxchg rax,[rbp]; 1?or rax,raxjz _oE5; (; [jmp jaE6anonE6:; NEGneg rax; ;ret; ]jaE6:add rbp,8mov [rbp],raxmov rax,anonE6; >Rpush raxmov rax,[rbp]sub rbp,8; )_oE5:; DROPmov rax,[rbp]sub rbp,8; $24; OPTN =?cmp rax,36jne _oE7; (; DROPmov rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; 16mov dword[w327],16; str$>nrojmp w32A; ;; )_oE7:; $25; OPTN =?cmp rax,37jne _oE8; (; DROPmov rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; 2mov dword[w327],2; str%>nrojmp w32B; ;; )_oE8:; DROPmov rax,[rbp]sub rbp,8; 10mov dword[w327],10; 0add rbp,8mov [rbp],raxxor rax,rax; SWAPxchg rax,[rbp]; (_iE9:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; $2f; OPTN >?cmp rax,47jle _oE9; $39; OPTN >?cmp rax,57jle _oEA; (; DROPmov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; ;ret; )_oEA:; $30; OPTN -sub rax,48; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; 1; OPTN <<shl rax,1; DUPadd rbp,8mov [rbp],rax; 2; OPTN <<shl rax,2; +add rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; )jmp _iE9_oE9:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; ;ret;--------------------------; :getfrac  |1001490|l  ;  . I| calls:1 niv:1 len:26 ( ab -- cd )w334:;---------GEN; DROPmov rax,[rbp]sub rbp,8; 1add rbp,8mov [rbp],raxmov rax,1; SWAPxchg rax,[rbp]; (_iEB:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; $2f; OPTN >?cmp rax,47jle _oEB; $39; OPTN >?cmp rax,57jle _oEC; (; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; 'f; OPTAV !mov dword[w332],eaxmov rax,[rbp]sub rbp,8; ;ret; )_oEC:; $30; OPTN -sub rax,48; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; 1; OPTN <<shl rax,1; DUPadd rbp,8mov [rbp],rax; 2; OPTN <<shl rax,2; +add rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; )jmp _iEB_oEB:; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; 'f; OPTAV !mov dword[w332],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :str>fnro  |10014D2|e  ; [. I| calls:1 niv:1 len:79 ( a -- bc )w336:;---------GEN; 0mov dword[w332],0; trimcall w143; signocall w328; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; C@movsx rax,byte [rax]; 33; OPTN <?cmp rax,33jge _oED; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; 1; OPTN -sub rax,1; 0add rbp,8mov [rbp],raxxor rax,rax; ;ret; )_oED:; SWAPxchg rax,[rbp]; 1?or rax,raxjz _oEE; (; [jmp jaEFanonEF:; NEGneg rax; ;ret; ]jaEF:add rbp,8mov [rbp],raxmov rax,anonEF; >Rpush raxmov rax,[rbp]sub rbp,8; )_oEE:; DROPmov rax,[rbp]sub rbp,8; DROPmov rax,[rbp]sub rbp,8; 0add rbp,8mov [rbp],raxxor rax,rax; SWAPxchg rax,[rbp]; (_iF0:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; $2f; OPTN >?cmp rax,47jle _oF0; $39; OPTN >?cmp rax,57jle _oF1; (; DROPmov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; ;ret; )_oF1:; $30; OPTN -sub rax,48; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; 1; OPTN <<shl rax,1; DUPadd rbp,8mov [rbp],rax; 2; OPTN <<shl rax,2; +add rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; )jmp _iF0_oF0:; $2e; OPTN =?cmp rax,46jne _oF2; (; getfraccall w334; )_oF2:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; 16; OPTN <<shl rax,16; $10000add rbp,8mov [rbp],raxmov rax,65536; fadd rbp,8mov [rbp],raxmovsxd rax,dword[w332]; 1add rbp,8mov [rbp],raxmov rax,1; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; (_iF3:; 1; OPTN >?cmp rax,1jle _oF3; $66666667 ; calcadd rbp,8mov [rbp],raxmov rax,1717986919; $22 ; calc; OPTC *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,34; DUPadd rbp,8mov [rbp],rax; $3F ; calc; OPTC >>>shr rax,63; +add rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; 1; OPTN <<shl rax,1; DUPadd rbp,8mov [rbp],rax; 2; OPTN <<shl rax,2; +add rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; )jmp _iF3_oF3:; DROPmov rax,[rbp]sub rbp,8; */mov rbx,raxmov rcx,[rbp]mov rax,[rbp-8]sub rbp,8*2cqoimul rcxidiv rbx; $ffff; OPTN ANDand rax,65535; ORor rax,[rbp]sub rbp,8; ;ret;--------------------------; :str>anro  |2002092|e  ;  .  | calls:2 niv:2 len:15 ( a -- bc )w337:;---------GEN; DUPadd rbp,8mov [rbp],rax; str>nrocall w32C; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; C@movsx rax,byte [rax]; 33; OPTN <?cmp rax,33jge _oF4; (; DROPmov rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; DROPmov rax,[rbp]sub rbp,8; ;ret; )_oF4:; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; str>fnrojmp w336; ;;--------------------------; :isHex  |1001092|e  ;  .  | calls:1 niv:1 len:23 ( a -- b )w33A:;---------GEN; (_iF5:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; $2f; OPTN >?cmp rax,47jle _oF5; dighexcall w329; -?or rax,raxjns _oF6; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; 0add rbp,8mov [rbp],raxxor rax,rax; ;ret; )_oF6:; DROPmov rax,[rbp]sub rbp,8; )jmp _iF5_oF5:; 33; OPTN <?cmp rax,33jge _oF7; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; 3add rbp,8mov [rbp],raxmov rax,3; ;ret; )_oF7:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 0add rbp,8mov [rbp],raxxor rax,rax; ;ret;--------------------------; :isBin  |1092|e  ;  .  | calls:1 niv:0 len:23 ( a -- b )w33B:;---------GEN; (_iF8:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; $2e; OPTN >=?cmp rax,46jl _oF8; $31; OPTN >?cmp rax,49jle _oF9; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; 0add rbp,8mov [rbp],raxxor rax,rax; ;ret; )_oF9:; DROPmov rax,[rbp]sub rbp,8; )jmp _iF8_oF8:; 33; OPTN <?cmp rax,33jge _oFA; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; 2add rbp,8mov [rbp],raxmov rax,2; ;ret; )_oFA:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 0add rbp,8mov [rbp],raxxor rax,rax; ;ret;--------------------------; :isNro  |1002092|e  ;  .  | calls:2 niv:1 len:83 ( a -- b )w33C:;---------GEN; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; $2b; OPTN =?cmp rax,43jne _oFB; (; DROPmov rax,[rbp]sub rbp,8; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; )_oFB:; $2d; OPTN =?cmp rax,45jne _oFC; (; DROPmov rax,[rbp]sub rbp,8; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; )_oFC:; 33; OPTN <?cmp rax,33jge _oFD; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; 0add rbp,8mov [rbp],raxxor rax,rax; ;ret; )_oFD:; $24; OPTN =?cmp rax,36jne _oFE; (; DROPmov rax,[rbp]sub rbp,8; isHexjmp w33A; ;; )_oFE:; $25; OPTN =?cmp rax,37jne _oFF; (; DROPmov rax,[rbp]sub rbp,8; isBinjmp w33B; ;; )_oFF:; (_i100:; $30; OPTN >=?cmp rax,48jl _o100; $39; OPTN >?cmp rax,57jle _o101; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; 0add rbp,8mov [rbp],raxxor rax,rax; ;ret; )_o101:; DROPmov rax,[rbp]sub rbp,8; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; )jmp _i100_o100:; $2e; OPTN =?cmp rax,46jne _o102; (; DROPmov rax,[rbp]sub rbp,8; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; (_i103:; $30; OPTN >=?cmp rax,48jl _o103; $39; OPTN >?cmp rax,57jle _o104; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; 0add rbp,8mov [rbp],raxxor rax,rax; ;ret; )_o104:; DROPmov rax,[rbp]sub rbp,8; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; )jmp _i103_o103:; 33; OPTN <?cmp rax,33jge _o105; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; 4add rbp,8mov [rbp],raxmov rax,4; ;ret; )_o105:; )_o102:; 33; OPTN <?cmp rax,33jge _o106; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; 1add rbp,8mov [rbp],raxmov rax,1; ;ret; )_o106:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 0add rbp,8mov [rbp],raxxor rax,rax; ;ret;--------------------------; :lins  |3004|l'       | calls:3 niv:0 len:30 ( a --  )w36A:;---------GEN; fuente>add rbp,8mov [rbp],raxmovsxd rax,dword[w35D]; DUPadd rbp,8mov [rbp],rax; 1; OPTN -sub rax,1; $fuenteadd rbp,8mov [rbp],raxmovsxd rax,dword[w35E]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; -neg raxadd rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; CMOVE>mov rcx,raxmovsxd rsi,dword[rbp]movsxd rdi,dword[rbp-8]lea rsi,[rsi+rcx-1]lea rdi,[rdi+rcx-1]stdrep movsbcldmov rax,[rbp-8*2]sub rbp,8*3; 1add rbp,8mov [rbp],raxmov rax,1; '$fuente; OPTAV +!add dword[w35E],eaxmov rax,[rbp]sub rbp,8;--------------------------; :lover  |1004|l'       | calls:1 niv:0 len:17 ( a --  )w36B:;---------GEN; fuente>; OPTV C!+movsxd rbx,dword[w35D]mov byte[rbx],aladd rbx,1mov rax,rbx; DUPadd rbp,8mov [rbp],rax; 'fuente>; OPTAV !mov dword[w35D],eaxmov rax,[rbp]sub rbp,8; $fuente; OPTV >?cmp eax,dword[w35E]jle _o107; (; DUPadd rbp,8mov [rbp],rax; '$fuente; OPTAV !mov dword[w35E],eaxmov rax,[rbp]sub rbp,8; )_o107:; DROPmov rax,[rbp]sub rbp,8; 0add rbp,8mov [rbp],raxxor rax,rax; $fuente; OPTV C!movsxd rbx,dword[w35E]mov byte[rbx],almov rax,[rbp]sub rbp,8; ;ret;--------------------------; :back  |1090|l  ;  .  | calls:1 niv:0 len:32 (  --  )w36E:;---------GEN; fuente>add rbp,8mov [rbp],raxmovsxd rax,dword[w35D]; fuente; OPTV <=?cmp eax,dword[w35C]jg _o108; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o108:; DUPadd rbp,8mov [rbp],rax; 1; OPTN -sub rax,1; C@movsx rax,byte [rax]; undobuffer>; OPTV C!+movsxd rbx,dword[w362]mov byte[rbx],aladd rbx,1mov rax,rbx; 'undobuffer>; OPTAV !mov dword[w362],eaxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; $fuenteadd rbp,8mov [rbp],raxmovsxd rax,dword[w35E]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; -neg raxadd rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; CMOVEmov rcx,raxmovsxd rsi,dword[rbp]movsxd rdi,dword[rbp-8]rep movsbmov rax,[rbp-8*2]sub rbp,8*3; -1add rbp,8mov [rbp],raxmov rax,-1; '$fuente; OPTAV +!add dword[w35E],eaxmov rax,[rbp]sub rbp,8; -1add rbp,8mov [rbp],raxmov rax,-1; 'fuente>; OPTAV +!add dword[w35D],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :del  |1090|l  ;  .  | calls:1 niv:0 len:39 (  --  )w36F:;---------GEN; fuente>add rbp,8mov [rbp],raxmovsxd rax,dword[w35D]; $fuente; OPTV >=?cmp eax,dword[w35E]jl _o109; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o109:; 1; OPTN +add rax,1; fuente; OPTV <=?cmp eax,dword[w35C]jg _o10A; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o10A:; 9add rbp,8mov [rbp],raxmov rax,9; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 1; OPTN -sub rax,1; C@movsx rax,byte [rax]; undobuffer>; OPTV C!+movsxd rbx,dword[w362]mov byte[rbx],aladd rbx,1mov rax,rbx; C!+mov rcx,[rbp]mov byte[rax],cladd rax,1sub rbp,8; 'undobuffer>; OPTAV !mov dword[w362],eaxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; $fuenteadd rbp,8mov [rbp],raxmovsxd rax,dword[w35E]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; -neg raxadd rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; CMOVEmov rcx,raxmovsxd rsi,dword[rbp]movsxd rdi,dword[rbp-8]rep movsbmov rax,[rbp-8*2]sub rbp,8*3; -1add rbp,8mov [rbp],raxmov rax,-1; '$fuente; OPTAV +!add dword[w35E],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :<<13  |6090|l  ;  .  | calls:6 niv:0 len:16 ( a -- b )w370:;---------GEN; (_i10B:; fuente; OPTV >=?cmp eax,dword[w35C]jl _o10B; DUPadd rbp,8mov [rbp],rax; C@movsx rax,byte [rax]; 13; OPTN =?cmp rax,13jne _o10C; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o10C:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; )jmp _i10B_o10B:; ;ret;--------------------------; :>>13  |6090|l  ;  .  | calls:6 niv:0 len:22 ( a -- b )w371:;---------GEN; (_i10D:; $fuente; OPTV <?cmp eax,dword[w35E]jge _o10D; DUPadd rbp,8mov [rbp],rax; C@movsx rax,byte [rax]; 13; OPTN =?cmp rax,13jne _o10E; (; DROPmov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; ;ret; )_o10E:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; )jmp _i10D_o10D:; DROPmov rax,[rbp]sub rbp,8; $fuenteadd rbp,8mov [rbp],raxmovsxd rax,dword[w35E]; 2; OPTN -sub rax,2; ;ret;--------------------------; :selecc  |12090|l  ;  .  | calls:18 niv:0 len:34 (  --  )w374:;---------GEN; mshiftadd rbp,8mov [rbp],raxmovsxd rax,dword[w116]; 0?or rax,raxjnz _o10F; (; DUPadd rbp,8mov [rbp],rax; 'inisel; OPTAV !mov dword[w35A],eaxmov rax,[rbp]sub rbp,8; 'finsel; OPTAV !mov dword[w35B],eaxmov rax,[rbp]sub rbp,8; ;ret; )_o10F:; DROPmov rax,[rbp]sub rbp,8; iniseladd rbp,8mov [rbp],raxmovsxd rax,dword[w35A]; 0?or rax,raxjnz _o110; (; fuente>add rbp,8mov [rbp],raxmovsxd rax,dword[w35D]; '1sel; OPTAV !mov dword[w372],eaxmov rax,[rbp]sub rbp,8; )_o110:; DROPmov rax,[rbp]sub rbp,8; fuente>add rbp,8mov [rbp],raxmovsxd rax,dword[w35D]; DUPadd rbp,8mov [rbp],rax; '2sel; OPTAV !mov dword[w373],eaxmov rax,[rbp]sub rbp,8; 1seladd rbp,8mov [rbp],raxmovsxd rax,dword[w372]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; <?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjge _o111; (; SWAPxchg rax,[rbp]; )_o111:; 'finsel; OPTAV !mov dword[w35B],eaxmov rax,[rbp]sub rbp,8; 'inisel; OPTAV !mov dword[w35A],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :scrollup  |1001080|l     .  | calls:1 niv:1 len:21 (  --  )w377:;---------GEN; pantaini>add rbp,8mov [rbp],raxmovsxd rax,dword[w358]; 1; OPTN -sub rax,1; <<13call w370; 1; OPTN -sub rax,1; <<13call w370; 1; OPTN +add rax,1; 'pantaini>; OPTAV !mov dword[w358],eaxmov rax,[rbp]sub rbp,8; ylineaadd rbp,8mov [rbp],raxmovsxd rax,dword[w354]; 1?or rax,raxjz _o112; (; 1; OPTN -sub rax,1; )_o112:; 'ylinea; OPTAV !mov dword[w354],eaxmov rax,[rbp]sub rbp,8; seleccjmp w374; ;;--------------------------; :scrolldw  |1001080|l     .  | calls:1 niv:1 len:17 (  --  )w378:;---------GEN; pantaini>add rbp,8mov [rbp],raxmovsxd rax,dword[w358]; >>13call w371; 2; OPTN +add rax,2; 'pantaini>; OPTAV !mov dword[w358],eaxmov rax,[rbp]sub rbp,8; pantafin>add rbp,8mov [rbp],raxmovsxd rax,dword[w359]; >>13call w371; 2; OPTN +add rax,2; 'pantafin>; OPTAV !mov dword[w359],eaxmov rax,[rbp]sub rbp,8; 1add rbp,8mov [rbp],raxmov rax,1; 'ylinea; OPTAV +!add dword[w354],eaxmov rax,[rbp]sub rbp,8; seleccjmp w374; ;;--------------------------; :karriba  |1002490|l  ;  . I| calls:2 niv:1 len:32 (  --  )w37A:;---------GEN; fuente>add rbp,8mov [rbp],raxmovsxd rax,dword[w35D]; fuente; OPTV =?cmp eax,dword[w35C]jne _o113; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o113:; selecccall w374; DUPadd rbp,8mov [rbp],rax; 1; OPTN -sub rax,1; <<13call w370; SWAPxchg rax,[rbp]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; -neg raxadd rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; DUPadd rbp,8mov [rbp],rax; 1; OPTN -sub rax,1; <<13call w370; SWAPxchg rax,[rbp]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; -neg raxadd rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; -neg raxadd rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; ANDand rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; fuenteadd rbp,8mov [rbp],raxmovsxd rax,dword[w35C]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; SWAPxchg rax,[rbp]; -neg raxadd rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; ANDand rax,[rbp]sub rbp,8; -neg raxadd rax,[rbp]sub rbp,8; 'fuente>; OPTAV !mov dword[w35D],eaxmov rax,[rbp]sub rbp,8; seleccjmp w374; ;;--------------------------; :kabajo  |1002490|l  ;  . I| calls:2 niv:1 len:34 (  --  )w37B:;---------GEN; fuente>add rbp,8mov [rbp],raxmovsxd rax,dword[w35D]; $fuente; OPTV >=?cmp eax,dword[w35E]jl _o114; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o114:; selecccall w374; DUPadd rbp,8mov [rbp],rax; 1; OPTN -sub rax,1; <<13call w370; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; SWAPxchg rax,[rbp]; -neg raxadd rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; >>13call w371; 1; OPTN +add rax,1; DUPadd rbp,8mov [rbp],rax; 1; OPTN +add rax,1; >>13call w371; 1; OPTN +add rax,1; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; -neg raxadd rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; -neg raxadd rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; ANDand rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; 'fuente>; OPTAV !mov dword[w35D],eaxmov rax,[rbp]sub rbp,8; seleccjmp w374; ;;--------------------------; :kder  |1001090|l  ;  .  | calls:1 niv:1 len:14 (  --  )w37C:;---------GEN; selecccall w374; fuente>add rbp,8mov [rbp],raxmovsxd rax,dword[w35D]; $fuente; OPTV <?cmp eax,dword[w35E]jge _o115; (; 1; OPTN +add rax,1; 'fuente>; OPTAV !mov dword[w35D],eaxmov rax,[rbp]sub rbp,8; seleccjmp w374; ;; )_o115:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :kizq  |1001090|l  ;  .  | calls:1 niv:1 len:14 (  --  )w37D:;---------GEN; selecccall w374; fuente>add rbp,8mov [rbp],raxmovsxd rax,dword[w35D]; fuente; OPTV >?cmp eax,dword[w35C]jle _o116; (; 1; OPTN -sub rax,1; 'fuente>; OPTAV !mov dword[w35D],eaxmov rax,[rbp]sub rbp,8; seleccjmp w374; ;; )_o116:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :calcselect  |1001480|l     . I| calls:1 niv:1 len:13 (  --  )w380:;---------GEN; xcodeadd rbp,8mov [rbp],raxmovsxd rax,dword[w34D]; wcode; OPTV +movsxd rbx,dword[w34F]add rax,rbx; ccw; OPTV *movsxd rbx,dword[w1EF]imul rax,rbx; 'ccx; OPTAV !mov dword[w1B5],eaxmov rax,[rbp]sub rbp,8; ccxadd rbp,8mov [rbp],raxmovsxd rax,dword[w1B5]; 'xsele; OPTAV !mov dword[w352],eaxmov rax,[rbp]sub rbp,8; xcodeadd rbp,8mov [rbp],raxmovsxd rax,dword[w34D]; ccw; OPTV *movsxd rbx,dword[w1EF]imul rax,rbx; 'ccx; OPTAV !mov dword[w1B5],eaxmov rax,[rbp]sub rbp,8; ccxadd rbp,8mov [rbp],raxmovsxd rax,dword[w1B5]; 'xseli; OPTAV !mov dword[w351],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :copysel  |1090|l  ;  .  | calls:1 niv:0 len:18 (  --  )w384:;---------GEN; iniseladd rbp,8mov [rbp],raxmovsxd rax,dword[w35A]; 0?or rax,raxjnz _o117; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o117:; clipboardadd rbp,8mov [rbp],raxmovsxd rax,dword[w35F]; SWAPxchg rax,[rbp]; finseladd rbp,8mov [rbp],raxmovsxd rax,dword[w35B]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; -neg raxadd rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; +add rax,[rbp]sub rbp,8; 'clipboard>; OPTAV !mov dword[w360],eaxmov rax,[rbp]sub rbp,8; CMOVEmov rcx,raxmovsxd rsi,dword[rbp]movsxd rdi,dword[rbp-8]rep movsbmov rax,[rbp-8*2]sub rbp,8*3; ;ret;--------------------------; :realdel  |1090|l  ;  .  | calls:1 niv:0 len:26 (  --  )w385:;---------GEN; fuente>add rbp,8mov [rbp],raxmovsxd rax,dword[w35D]; inisel; OPTV <?cmp eax,dword[w35A]jge _o118; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o118:; finsel; OPTV <=?cmp eax,dword[w35B]jg _o119; (; DROPmov rax,[rbp]sub rbp,8; iniseladd rbp,8mov [rbp],raxmovsxd rax,dword[w35A]; 'fuente>; OPTAV !mov dword[w35D],eaxmov rax,[rbp]sub rbp,8; ;ret; )_o119:; finseladd rbp,8mov [rbp],raxmovsxd rax,dword[w35B]; inisel; OPTV -movsxd rbx,dword[w35A]sub rax,rbx; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; SWAPxchg rax,[rbp]; -neg raxadd rax,[rbp]sub rbp,8; 'fuente>; OPTAV !mov dword[w35D],eaxmov rax,[rbp]sub rbp,8; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :borrasel  |1003080|l     .  | calls:3 niv:1 len:22 (  --  )w386:;---------GEN; iniseladd rbp,8mov [rbp],raxmovsxd rax,dword[w35A]; finseladd rbp,8mov [rbp],raxmovsxd rax,dword[w35B]; $fuenteadd rbp,8mov [rbp],raxmovsxd rax,dword[w35E]; finsel; OPTV -movsxd rbx,dword[w35B]sub rax,rbx; 4; OPTN +add rax,4; CMOVEmov rcx,raxmovsxd rsi,dword[rbp]movsxd rdi,dword[rbp-8]rep movsbmov rax,[rbp-8*2]sub rbp,8*3; finseladd rbp,8mov [rbp],raxmovsxd rax,dword[w35B]; inisel; OPTV -movsxd rbx,dword[w35A]sub rax,rbx; NEGneg rax; '$fuente; OPTAV +!add dword[w35E],eaxmov rax,[rbp]sub rbp,8; realdelcall w385; 0add rbp,8mov [rbp],raxxor rax,rax; DUPadd rbp,8mov [rbp],rax; 'inisel; OPTAV !mov dword[w35A],eaxmov rax,[rbp]sub rbp,8; 'finsel; OPTAV !mov dword[w35B],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :kdel  |2001090|l  ;  .  | calls:1 niv:2 len:10 (  --  )w387:;---------GEN; iniseladd rbp,8mov [rbp],raxmovsxd rax,dword[w35A]; 0?or rax,raxjnz _o11A; (; DROPmov rax,[rbp]sub rbp,8; deljmp w36F; ;; )_o11A:; DROPmov rax,[rbp]sub rbp,8; borraseljmp w386; ;;--------------------------; :kback  |2001090|l  ;  .  | calls:1 niv:2 len:10 (  --  )w388:;---------GEN; iniseladd rbp,8mov [rbp],raxmovsxd rax,dword[w35A]; 0?or rax,raxjnz _o11B; (; DROPmov rax,[rbp]sub rbp,8; backjmp w36E; ;; )_o11B:; DROPmov rax,[rbp]sub rbp,8; borraseljmp w386; ;;--------------------------; :controlv  |1090|l  ;  .  | calls:1 niv:0 len:33 ( a --  )w38D:;---------GEN; clipboardadd rbp,8mov [rbp],raxmovsxd rax,dword[w35F]; clipboard>add rbp,8mov [rbp],raxmovsxd rax,dword[w360]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; -neg raxadd rax,[rbp]sub rbp,8; 0?or rax,raxjnz _o11C; (; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; ;ret; )_o11C:; fuente>add rbp,8mov [rbp],raxmovsxd rax,dword[w35D]; DUPadd rbp,8mov [rbp],rax; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; +add rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; $fuenteadd rbp,8mov [rbp],raxmovsxd rax,dword[w35E]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; -neg raxadd rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; CMOVE>mov rcx,raxmovsxd rsi,dword[rbp]movsxd rdi,dword[rbp-8]lea rsi,[rsi+rcx-1]lea rdi,[rdi+rcx-1]stdrep movsbcldmov rax,[rbp-8*2]sub rbp,8*3; fuente>add rbp,8mov [rbp],raxmovsxd rax,dword[w35D]; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; DUPadd rbp,8mov [rbp],rax; '$fuente; OPTAV +!add dword[w35E],eaxmov rax,[rbp]sub rbp,8; CMOVEmov rcx,raxmovsxd rsi,dword[rbp]movsxd rdi,dword[rbp-8]rep movsbmov rax,[rbp-8*2]sub rbp,8*3; clipboard>add rbp,8mov [rbp],raxmovsxd rax,dword[w360]; clipboard; OPTV -movsxd rbx,dword[w35F]sub rax,rbx; 'fuente>; OPTAV +!add dword[w35D],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :=w  |1001490|l  ;  . I| calls:1 niv:1 len:22 ( ab -- c )w38F:;---------GEN; (_i11D:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 32; OPTN >?cmp rax,32jle _o11D; $df; OPTN ANDand rax,223; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; $df; OPTN ANDand rax,223; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; -neg raxadd rax,[rbp]sub rbp,8; 1?or rax,raxjz _o11E; (; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; 0add rbp,8mov [rbp],raxxor rax,rax; ;ret; )_o11E:; DROPmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; )jmp _i11D_o11D:; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; 1add rbp,8mov [rbp],raxmov rax,1; ;ret;--------------------------; :controla  |1001490|l  ;  . I| calls:1 niv:1 len:36 (  --  )w392:;---------GEN; 'findpadadd rbp,8mov [rbp],raxmov rax,w365; DUPadd rbp,8mov [rbp],rax; C@movsx rax,byte [rax]; $ff; OPTN ANDand rax,255; 0?or rax,raxjnz _o11F; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; ;ret; )_o11F:; $df; OPTN ANDand rax,223; fuente>add rbp,8mov [rbp],raxmovsxd rax,dword[w35D]; 1; OPTN -sub rax,1; (_i120:; fuente; OPTV >?cmp eax,dword[w35C]jle _o120; DUPadd rbp,8mov [rbp],rax; C@movsx rax,byte [rax]; $df; OPTN ANDand rax,223; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; =?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjne _o121; (; DROPmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; =wcall w38F; 1?or rax,raxjz _o122; (; DROPmov rax,[rbp]sub rbp,8; NIPsub rbp,8; NIPsub rbp,8; 'fuente>; OPTAV !mov dword[w35D],eaxmov rax,[rbp]sub rbp,8; ;ret; )_o122:; )_o121:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; )jmp _i120_o120:; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; ;ret;--------------------------; :controls  |1001490|l  ;  . I| calls:1 niv:1 len:36 (  -- a )w393:;---------GEN; 'findpadadd rbp,8mov [rbp],raxmov rax,w365; DUPadd rbp,8mov [rbp],rax; C@movsx rax,byte [rax]; $ff; OPTN ANDand rax,255; 0?or rax,raxjnz _o123; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o123:; $df; OPTN ANDand rax,223; fuente>add rbp,8mov [rbp],raxmovsxd rax,dword[w35D]; 1; OPTN +add rax,1; (_i124:; $fuente; OPTV <?cmp eax,dword[w35E]jge _o124; DUPadd rbp,8mov [rbp],rax; C@movsx rax,byte [rax]; $df; OPTN ANDand rax,223; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; =?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjne _o125; (; DROPmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; PICK3add rbp,8mov [rbp],raxmov rax,[rbp-8*3]; =wcall w38F; 1?or rax,raxjz _o126; (; DROPmov rax,[rbp]sub rbp,8; NIPsub rbp,8; NIPsub rbp,8; 'fuente>; OPTAV !mov dword[w35D],eaxmov rax,[rbp]sub rbp,8; ;ret; )_o126:; )_o125:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; )jmp _i124_o124:; 3DROPmov rax,[rbp-8*2]sub rbp,8*3; ;ret;--------------------------; :wcolor  |1005490|l  ;  . I| calls:5 niv:1 len:59 ( ab -- cd )w3A0:;---------GEN; mcoloradd rbp,8mov [rbp],raxmovsxd rax,dword[w39F]; 1?or rax,raxjz _o127; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o127:; DROPmov rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; C@movsx rax,byte [rax]; $5e; OPTN =?cmp rax,94jne _o128; (; DROPmov rax,[rbp]sub rbp,8; $ff7f00mov dword[w53],16744192; ;ret; )_o128:; $7c; OPTN =?cmp rax,124jne _o129; (; DROPmov rax,[rbp]sub rbp,8; $666666mov dword[w53],6710886; 1mov dword[w39F],1; ;ret; )_o129:; $3A; OPTN =?cmp rax,58jne _o12A; (; DROPmov rax,[rbp]sub rbp,8; $ff0000mov dword[w53],16711680; ;ret; )_o12A:; $23; OPTN =?cmp rax,35jne _o12B; (; DROPmov rax,[rbp]sub rbp,8; $ff00ffmov dword[w53],16711935; ;ret; )_o12B:; $27; OPTN =?cmp rax,39jne _o12C; (; DROPmov rax,[rbp]sub rbp,8; $ffffmov dword[w53],65535; ;ret; )_o12C:; DROPmov rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; isNrocall w33C; 1?or rax,raxjz _o12D; (; DROPmov rax,[rbp]sub rbp,8; $ffff00mov dword[w53],16776960; ;ret; )_o12D:; DROPmov rax,[rbp]sub rbp,8; $ff00mov dword[w53],65280; ;ret;--------------------------; :strcol  |1002490|l  ;  . I| calls:2 niv:1 len:55 ( ab -- cd )w3A1:;---------GEN; mcoloradd rbp,8mov [rbp],raxmovsxd rax,dword[w39F]; 0?or rax,raxjnz _o12E; (; DROPmov rax,[rbp]sub rbp,8; $ffffffmov dword[w53],16777215; 2mov dword[w39F],2; ;ret; )_o12E:; 1; OPTN =?cmp rax,1jne _o12F; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o12F:; DROPmov rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; C@movsx rax,byte [rax]; $22; OPTN <>?cmp rax,34je _o130; (; DROPmov rax,[rbp]sub rbp,8; mcoloradd rbp,8mov [rbp],raxmovsxd rax,dword[w39F]; 3; OPTN =?cmp rax,3jne _o131; (; DROPmov rax,[rbp]sub rbp,8; 2mov dword[w39F],2; ;ret; )_o131:; DROPmov rax,[rbp]sub rbp,8; 0mov dword[w39F],0; ;ret; )_o130:; DROPmov rax,[rbp]sub rbp,8; mcoloradd rbp,8mov [rbp],raxmovsxd rax,dword[w39F]; 2; OPTN =?cmp rax,2jne _o132; (; DROPmov rax,[rbp]sub rbp,8; 3mov dword[w39F],3; ;ret; )_o132:; DROPmov rax,[rbp]sub rbp,8; 2mov dword[w39F],2; ;ret;--------------------------; :iniline  |2001090|l  ;  .  | calls:1 niv:2 len:48 ( a -- b )w3A2:;---------GEN; 0mov dword[w39F],0; xlineaadd rbp,8mov [rbp],raxmovsxd rax,dword[w353]; wcolorcall w3A0; (_i133:; 1?or rax,raxjz _o133; 1; OPTN -sub rax,1; SWAPxchg rax,[rbp]; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 0?or rax,raxjnz _o134; (; DROPmov rax,[rbp]sub rbp,8; NIPsub rbp,8; 1; OPTN -sub rax,1; ;ret; )_o134:; 13; OPTN =?cmp rax,13jne _o135; (; DROPmov rax,[rbp]sub rbp,8; NIPsub rbp,8; 1; OPTN -sub rax,1; ;ret; )_o135:; 9; OPTN =?cmp rax,9jne _o136; (; wcolorcall w3A0; )_o136:; 32; OPTN =?cmp rax,32jne _o137; (; wcolorcall w3A0; )_o137:; $22; OPTN =?cmp rax,34jne _o138; (; strcolcall w3A1; )_o138:; DROPmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; )jmp _i133_o133:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :emitl  |6001490|l  ;  . I| calls:1 niv:6 len:36 ( ab -- c )w3A3:;---------GEN; 9; OPTN =?cmp rax,9jne _o139; (; DROPmov rax,[rbp]sub rbp,8; ccwadd rbp,8mov [rbp],raxmovsxd rax,dword[w1EF]; 2; OPTN <<shl rax,2; 'ccx; OPTAV +!add dword[w1B5],eaxmov rax,[rbp]sub rbp,8; ;ret; )_o139:; $ff; OPTN ANDand rax,255; DUPadd rbp,8mov [rbp],rax; _charemit; OPTV EXmov ecx,dword[w1F3]call rcx; _charsize; OPTV EXmov ecx,dword[w1F4]call rcx; 'ccx; OPTAV +!add dword[w1B5],eaxmov rax,[rbp]sub rbp,8; ccxadd rbp,8mov [rbp],raxmovsxd rax,dword[w1B5]; xsele; OPTV <?cmp eax,dword[w352]jge _o13A; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o13A:; DROPmov rax,[rbp]sub rbp,8; (_i13B:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o13B; 13; OPTN <>?cmp rax,13je _o13B; DROPmov rax,[rbp]sub rbp,8; )jmp _i13B_o13B:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; wcodeadd rbp,8mov [rbp],raxmovsxd rax,dword[w34F]; xcode; OPTV +movsxd rbx,dword[w34D]add rax,rbx; ccw; OPTV *movsxd rbx,dword[w1EF]imul rax,rbx; 'ccx; OPTAV !mov dword[w1B5],eaxmov rax,[rbp]sub rbp,8; $ffffffmov dword[w53],16777215; "."add rbp,8mov [rbp],raxmov rax,str1AC60; markcall w14D; 'buffadd rbp,8mov [rbp],raxmov rax,w177; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; (_i13C:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o13C; ,emitcall w175; )jmp _i13C_o13C:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 0add rbp,8mov [rbp],raxxor rax,rax; here; OPTV C!+movsxd rbx,dword[w14A]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; emptycall w14E; 'buffadd rbp,8mov [rbp],raxmov rax,w177; (_i13D:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o13D; $ff; OPTN ANDand rax,255; DUPadd rbp,8mov [rbp],rax; _charemit; OPTV EXmov ecx,dword[w1F3]call rcx; _charsize; OPTV EXmov ecx,dword[w1F4]call rcx; 'ccx; OPTAV +!add dword[w1B5],eaxmov rax,[rbp]sub rbp,8; )jmp _i13D_o13D:; 2DROPmov rax,[rbp-8]sub rbp,8*2; ;ret;--------------------------; :drawline  |7001090|l  ;  .  | calls:1 niv:7 len:31 ( a -- b )w3A4:;---------GEN; inilinecall w3A2; (_i13E:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o13E; 13; OPTN =?cmp rax,13jne _o13F; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o13F:; 9; OPTN =?cmp rax,9jne _o140; (; wcolorcall w3A0; )_o140:; 32; OPTN =?cmp rax,32jne _o141; (; wcolorcall w3A0; )_o141:; $22; OPTN =?cmp rax,34jne _o142; (; strcolcall w3A1; )_o142:; emitlcall w3A3; )jmp _i13E_o13E:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; ;ret;--------------------------; :linenro  |5001480|l     . I| calls:1 niv:5 len:13 ( a -- b )w3A5:;---------GEN; $aaaaaamov dword[w53],11184810; DUPadd rbp,8mov [rbp],rax; ylinea; OPTV +movsxd rbx,dword[w354]add rax,rbx; 1; OPTN +add rax,1; .dcall w13D; 3add rbp,8mov [rbp],raxmov rax,3; .r.call w142; (_i143:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o143; $ff; OPTN ANDand rax,255; DUPadd rbp,8mov [rbp],rax; _charemit; OPTV EXmov ecx,dword[w1F3]call rcx; _charsize; OPTV EXmov ecx,dword[w1F4]call rcx; 'ccx; OPTAV +!add dword[w1B5],eaxmov rax,[rbp]sub rbp,8; )jmp _i143_o143:; 2DROPmov rax,[rbp-8]sub rbp,8*2; ;ret;--------------------------; :emitsel  |4002490|l  ;  . I| calls:2 niv:4 len:20 ( a --  )w3A6:;---------GEN; 13; OPTN =?cmp rax,13jne _o144; (; DROPmov rax,[rbp]sub rbp,8; cchadd rbp,8mov [rbp],raxmovsxd rax,dword[w1EE]; 'ccy; OPTAV +!add dword[w1B6],eaxmov rax,[rbp]sub rbp,8; 0mov dword[w1B5],0; xcodeadd rbp,8mov [rbp],raxmovsxd rax,dword[w34D]; xlinea; OPTV -movsxd rbx,dword[w353]sub rax,rbx; ccw; OPTV *movsxd rbx,dword[w1EF]imul rax,rbx; 'ccx; OPTAV !mov dword[w1B5],eaxmov rax,[rbp]sub rbp,8; ;ret; )_o144:; 9; OPTN =?cmp rax,9jne _o145; (; DROPmov rax,[rbp]sub rbp,8; ccwadd rbp,8mov [rbp],raxmovsxd rax,dword[w1EF]; 2; OPTN <<shl rax,2; 'ccx; OPTAV +!add dword[w1B5],eaxmov rax,[rbp]sub rbp,8; ;ret; )_o145:; $ff; OPTN ANDand rax,255; _charsize; OPTV EXmov ecx,dword[w1F4]call rcx; 'ccx; OPTAV +!add dword[w1B5],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :drawselect  |2001490|l  ;  . I| calls:1 niv:2 len:74 (  --  )w3A7:;---------GEN; iniseladd rbp,8mov [rbp],raxmovsxd rax,dword[w35A]; 0?or rax,raxjnz _o146; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o146:; pantafin>; OPTV >?cmp eax,dword[w359]jle _o147; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o147:; xcodeadd rbp,8mov [rbp],raxmovsxd rax,dword[w34D]; xlinea; OPTV -movsxd rbx,dword[w353]sub rax,rbx; ycodeadd rbp,8mov [rbp],raxmovsxd rax,dword[w34E]; cch; OPTV *movsxd rbx,dword[w1EE]imul rax,rbx; 'ccy; OPTAV !mov dword[w1B6],eaxmov rax,[rbp]sub rbp,8; ccw; OPTV *movsxd rbx,dword[w1EF]imul rax,rbx; 'ccx; OPTAV !mov dword[w1B5],eaxmov rax,[rbp]sub rbp,8; pantaini>add rbp,8mov [rbp],raxmovsxd rax,dword[w358]; (_i148:; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; <?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjge _o148; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; emitselcall w3A6; )jmp _i148_o148:; NIPsub rbp,8; xseliadd rbp,8mov [rbp],raxmovsxd rax,dword[w351]; ccyadd rbp,8mov [rbp],raxmovsxd rax,dword[w1B6]; cch; OPTV +movsxd rbx,dword[w1EE]add rax,rbx; DUPadd rbp,8mov [rbp],rax; >Rpush raxmov rax,[rbp]sub rbp,8; OPcall w70; ccxadd rbp,8mov [rbp],raxmovsxd rax,dword[w1B5]; ccyadd rbp,8mov [rbp],raxmovsxd rax,dword[w1B6]; cch; OPTV +movsxd rbx,dword[w1EE]add rax,rbx; 2; OPTN <<shl rax,2; SWAPxchg rax,[rbp]; 2; OPTN <<shl rax,2; SWAPxchg rax,[rbp]; PLINEIcall w9D; ccxadd rbp,8mov [rbp],raxmovsxd rax,dword[w1B5]; ccyadd rbp,8mov [rbp],raxmovsxd rax,dword[w1B6]; 2; OPTN <<shl rax,2; SWAPxchg rax,[rbp]; 2; OPTN <<shl rax,2; SWAPxchg rax,[rbp]; PLINEIcall w9D; xseleadd rbp,8mov [rbp],raxmovsxd rax,dword[w352]; ccyadd rbp,8mov [rbp],raxmovsxd rax,dword[w1B6]; 2; OPTN <<shl rax,2; SWAPxchg rax,[rbp]; 2; OPTN <<shl rax,2; SWAPxchg rax,[rbp]; PLINEIcall w9D; (_i149:; pantafin>; OPTV <?cmp eax,dword[w359]jge _o149; finsel; OPTV <?cmp eax,dword[w35B]jge _o149; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; emitselcall w3A6; )jmp _i149_o149:; DROPmov rax,[rbp]sub rbp,8; xseleadd rbp,8mov [rbp],raxmovsxd rax,dword[w352]; ccyadd rbp,8mov [rbp],raxmovsxd rax,dword[w1B6]; 2; OPTN <<shl rax,2; SWAPxchg rax,[rbp]; 2; OPTN <<shl rax,2; SWAPxchg rax,[rbp]; PLINEIcall w9D; ccxadd rbp,8mov [rbp],raxmovsxd rax,dword[w1B5]; ccyadd rbp,8mov [rbp],raxmovsxd rax,dword[w1B6]; 2; OPTN <<shl rax,2; SWAPxchg rax,[rbp]; 2; OPTN <<shl rax,2; SWAPxchg rax,[rbp]; PLINEIcall w9D; ccxadd rbp,8mov [rbp],raxmovsxd rax,dword[w1B5]; ccyadd rbp,8mov [rbp],raxmovsxd rax,dword[w1B6]; cch; OPTV +movsxd rbx,dword[w1EE]add rax,rbx; 2; OPTN <<shl rax,2; SWAPxchg rax,[rbp]; 2; OPTN <<shl rax,2; SWAPxchg rax,[rbp]; PLINEIcall w9D; xseliadd rbp,8mov [rbp],raxmovsxd rax,dword[w351]; ccyadd rbp,8mov [rbp],raxmovsxd rax,dword[w1B6]; cch; OPTV +movsxd rbx,dword[w1EE]add rax,rbx; 2; OPTN <<shl rax,2; SWAPxchg rax,[rbp]; 2; OPTN <<shl rax,2; SWAPxchg rax,[rbp]; PLINEIcall w9D; xseliadd rbp,8mov [rbp],raxmovsxd rax,dword[w351]; R>add rbp,8mov [rbp],raxpop rax; 2; OPTN <<shl rax,2; SWAPxchg rax,[rbp]; 2; OPTN <<shl rax,2; SWAPxchg rax,[rbp]; PLINEIcall w9D; $444444mov dword[w53],4473924; POLIjmp wB2; ;;--------------------------; :emitcur  |4001490|l  ;  . I| calls:1 niv:4 len:26 ( a --  )w3A8:;---------GEN; 13; OPTN =?cmp rax,13jne _o14A; (; DROPmov rax,[rbp]sub rbp,8; 1add rbp,8mov [rbp],raxmov rax,1; 'ycursor; OPTAV +!add dword[w355],eaxmov rax,[rbp]sub rbp,8; 0mov dword[w356],0; ;ret; )_o14A:; 9; OPTN =?cmp rax,9jne _o14B; (; DROPmov rax,[rbp]sub rbp,8; 4add rbp,8mov [rbp],raxmov rax,4; 'xcursor; OPTAV +!add dword[w356],eaxmov rax,[rbp]sub rbp,8; ;ret; )_o14B:; 1add rbp,8mov [rbp],raxmov rax,1; 'xcursor; OPTAV +!add dword[w356],eaxmov rax,[rbp]sub rbp,8; $ff; OPTN ANDand rax,255; _charsize; OPTV EXmov ecx,dword[w1F4]call rcx; 'ccx; OPTAV +!add dword[w1B5],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :drawcursor  |1001490|l  ;  . I| calls:1 niv:1 len:86 (  --  )w3A9:;---------GEN; ylineaadd rbp,8mov [rbp],raxmovsxd rax,dword[w354]; 'ycursor; OPTAV !mov dword[w355],eaxmov rax,[rbp]sub rbp,8; 0mov dword[w356],0; pantaini>add rbp,8mov [rbp],raxmovsxd rax,dword[w358]; (_i14C:; fuente>; OPTV <?cmp eax,dword[w35D]jge _o14C; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; emitcurcall w3A8; )jmp _i14C_o14C:; DROPmov rax,[rbp]sub rbp,8; xcursoradd rbp,8mov [rbp],raxmovsxd rax,dword[w356]; xlinea; OPTV <?cmp eax,dword[w353]jge _o14D; (; DUPadd rbp,8mov [rbp],rax; 'xlinea; OPTAV !mov dword[w353],eaxmov rax,[rbp]sub rbp,8; )_o14D:; xlineaadd rbp,8mov [rbp],raxmovsxd rax,dword[w353]; wcode; OPTV +movsxd rbx,dword[w34F]add rax,rbx; 4; OPTN -sub rax,4; >=?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjl _o14E; (; DUPadd rbp,8mov [rbp],rax; wcode; OPTV -movsxd rbx,dword[w34F]sub rax,rbx; 5; OPTN +add rax,5; 'xlinea; OPTAV !mov dword[w353],eaxmov rax,[rbp]sub rbp,8; )_o14E:; DROPmov rax,[rbp]sub rbp,8; MSECcall SYSMSEC; $100; OPTN ANDand rax,256; 1?or rax,raxjz _o14F; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o14F:; DROPmov rax,[rbp]sub rbp,8; xcodeadd rbp,8mov [rbp],raxmovsxd rax,dword[w34D]; 4; OPTN +add rax,4; xlinea; OPTV -movsxd rbx,dword[w353]sub rax,rbx; xcursor; OPTV +movsxd rbx,dword[w356]add rax,rbx; ycodeadd rbp,8mov [rbp],raxmovsxd rax,dword[w34E]; ylinea; OPTV -movsxd rbx,dword[w354]sub rax,rbx; ycursor; OPTV +movsxd rbx,dword[w355]add rax,rbx; cch; OPTV *movsxd rbx,dword[w1EE]imul rax,rbx; 'ccy; OPTAV !mov dword[w1B6],eaxmov rax,[rbp]sub rbp,8; ccw; OPTV *movsxd rbx,dword[w1EF]imul rax,rbx; 'ccx; OPTAV !mov dword[w1B5],eaxmov rax,[rbp]sub rbp,8; ccxadd rbp,8mov [rbp],raxmovsxd rax,dword[w1B5]; ccyadd rbp,8mov [rbp],raxmovsxd rax,dword[w1B6]; SWadd rbp,8mov [rbp],raxmov rax,XRES; *imul rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; 2; OPTN <<shl rax,2; VFRAMEadd rbp,8mov [rbp],raxmov rax,[SYSFRAME]; +add rax,[rbp]sub rbp,8; >Amov r8,raxmov rax,[rbp]sub rbp,8; cchadd rbp,8mov [rbp],raxmovsxd rax,dword[w1EE]; (_i150:; 1?or rax,raxjz _o150; 1; OPTN -sub rax,1; ccwadd rbp,8mov [rbp],raxmovsxd rax,dword[w1EF]; (_i151:; 1?or rax,raxjz _o151; 1; OPTN -sub rax,1; A@add rbp,8mov [rbp],raxmovsxd rax,dword[r8]; NOTnot rax; A!+mov dword[r8],eaxadd r8,4mov rax,[rbp]sub rbp,8; )jmp _i151_o151:; DROPmov rax,[rbp]sub rbp,8; SWadd rbp,8mov [rbp],raxmov rax,XRES; ccw; OPTV -movsxd rbx,dword[w1EF]sub rax,rbx; 2; OPTN <<shl rax,2; A+add r8,raxmov rax,[rbp]sub rbp,8; )jmp _i150_o150:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :drawcode  |2001480|l     . I| calls:1 niv:2 len:45 (  --  )w3AA:;---------GEN; drawselectcall w3A7; pantaini>add rbp,8mov [rbp],raxmovsxd rax,dword[w358]; 0add rbp,8mov [rbp],raxxor rax,rax; (_i152:; hcode; OPTV <?cmp eax,dword[w350]jge _o152; xcodeadd rbp,8mov [rbp],raxmovsxd rax,dword[w34D]; ycodeadd rbp,8mov [rbp],raxmovsxd rax,dword[w34E]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; +add rax,[rbp]sub rbp,8; cch; OPTV *movsxd rbx,dword[w1EE]imul rax,rbx; 'ccy; OPTAV !mov dword[w1B6],eaxmov rax,[rbp]sub rbp,8; ccw; OPTV *movsxd rbx,dword[w1EF]imul rax,rbx; 'ccx; OPTAV !mov dword[w1B5],eaxmov rax,[rbp]sub rbp,8; linenrocall w3A5; xcodeadd rbp,8mov [rbp],raxmovsxd rax,dword[w34D]; 4; OPTN +add rax,4; ccw; OPTV *movsxd rbx,dword[w1EF]imul rax,rbx; 'ccx; OPTAV !mov dword[w1B5],eaxmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; drawlinecall w3A4; SWAPxchg rax,[rbp]; 1; OPTN +add rax,1; )jmp _i152_o152:; DROPmov rax,[rbp]sub rbp,8; drawcursorcall w3A9; $fuente; OPTV <?cmp eax,dword[w35E]jge _o153; (; 1; OPTN -sub rax,1; )_o153:; 'pantafin>; OPTAV !mov dword[w359],eaxmov rax,[rbp]sub rbp,8; fuente>add rbp,8mov [rbp],raxmovsxd rax,dword[w35D]; (_i154:; pantafin>; OPTV >?cmp eax,dword[w359]jle _o154; scrolldwcall w378; )jmp _i154_o154:; (_i155:; pantaini>; OPTV <?cmp eax,dword[w358]jge _o155; scrollupcall w377; )jmp _i155_o155:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :mmemit  |1090|l  ;  .  | calls:1 niv:0 len:39 ( abc -- def )w3AE:;---------GEN; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 13; OPTN =?cmp rax,13jne _o156; (; 0add rbp,8mov [rbp],raxxor rax,rax; NIPsub rbp,8; )_o156:; 0?or rax,raxjnz _o157; (; DROPmov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; SWadd rbp,8mov [rbp],raxmov rax,XRES; +add rax,[rbp]sub rbp,8; ;ret; )_o157:; 9; OPTN =?cmp rax,9jne _o158; (; DROPmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; ccwadd rbp,8mov [rbp],raxmovsxd rax,dword[w1EF]; 2; OPTN <<shl rax,2; +add rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; SWAPxchg rax,[rbp]; ;ret; )_o158:; DROPmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; ccw; OPTV +movsxd rbx,dword[w1EF]add rax,rbx; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; SWAPxchg rax,[rbp]; ;ret;--------------------------; :cursormouse  |1003080|l     .  | calls:3 niv:1 len:36 ( a --  )w3AF:;---------GEN; XYPENadd rbp,8mov [rbp],raxmov eax,dword[SYSXM]add rbp,8mov [rbp],raxmov eax,dword[SYSYM]; pantaini>add rbp,8mov [rbp],raxmovsxd rax,dword[w358]; SWAPxchg rax,[rbp]; cchadd rbp,8mov [rbp],raxmovsxd rax,dword[w1EE]; 1; OPTN <<shl rax,1; (_i159:; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; <?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjge _o159; cch; OPTV +movsxd rbx,dword[w1EE]add rax,rbx; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; >>13call w371; 2; OPTN +add rax,2; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; )jmp _i159_o159:; 2DROPmov rax,[rbp-8]sub rbp,8*2; SWAPxchg rax,[rbp]; ccwadd rbp,8mov [rbp],raxmovsxd rax,dword[w1EF]; 1; OPTN <<shl rax,1; DUPadd rbp,8mov [rbp],rax; 1; OPTN <<shl rax,1; +add rax,[rbp]sub rbp,8; (_i15A:; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; <?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjge _o15A; mmemitcall w3AE; )jmp _i15A_o15A:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 'fuente>; OPTAV !mov dword[w35D],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :dns  |2001084|l'    .  | calls:1 niv:2 len:5 ( a --  )w3B0:;---------GEN; cursormousecall w3AF; fuente>add rbp,8mov [rbp],raxmovsxd rax,dword[w35D]; '1sel; OPTAV !mov dword[w372],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :mos  |2001084|l'    .  | calls:1 niv:2 len:13 ( a --  )w3B1:;---------GEN; cursormousecall w3AF; fuente>add rbp,8mov [rbp],raxmovsxd rax,dword[w35D]; 1seladd rbp,8mov [rbp],raxmovsxd rax,dword[w372]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; <?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjge _o15B; (; SWAPxchg rax,[rbp]; )_o15B:; 'finsel; OPTAV !mov dword[w35B],eaxmov rax,[rbp]sub rbp,8; 'inisel; OPTAV !mov dword[w35A],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :ups  |2001084|l'    .  | calls:1 niv:2 len:13 ( a --  )w3B2:;---------GEN; cursormousecall w3AF; fuente>add rbp,8mov [rbp],raxmovsxd rax,dword[w35D]; 1seladd rbp,8mov [rbp],raxmovsxd rax,dword[w372]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; <?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjge _o15C; (; SWAPxchg rax,[rbp]; )_o15C:; 'finsel; OPTAV !mov dword[w35B],eaxmov rax,[rbp]sub rbp,8; 'inisel; OPTAV !mov dword[w35A],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :buscapad  |3001094|l' ;  .  | calls:1 niv:3 len:11 (  --  )w3B3:;---------GEN; fuenteadd rbp,8mov [rbp],raxmovsxd rax,dword[w35C]; 'findpadadd rbp,8mov [rbp],raxmov rax,w365; findstricall w139; 0?or rax,raxjnz _o15D; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o15D:; 'fuente>; OPTAV !mov dword[w35D],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :findmodekey  |1001480|l     . I| calls:1 niv:1 len:41 (  --  )w3B4:;---------GEN; 0add rbp,8mov [rbp],raxxor rax,rax; hcodeadd rbp,8mov [rbp],raxmovsxd rax,dword[w350]; 1; OPTN +add rax,1; cch; OPTV *movsxd rbx,dword[w1EE]imul rax,rbx; 'ccy; OPTAV !mov dword[w1B6],eaxmov rax,[rbp]sub rbp,8; ccw; OPTV *movsxd rbx,dword[w1EF]imul rax,rbx; 'ccx; OPTAV !mov dword[w1B5],eaxmov rax,[rbp]sub rbp,8; $0000AEmov dword[w53],174; rowsadd rbp,8mov [rbp],raxmovsxd rax,dword[w1EC]; hcode; OPTV -movsxd rbx,dword[w350]sub rax,rbx; 1; OPTN -sub rax,1; SWadd rbp,8mov [rbp],raxmov rax,XRES; SWAPxchg rax,[rbp]; cch; OPTV *movsxd rbx,dword[w1EE]imul rax,rbx; 0add rbp,8mov [rbp],raxxor rax,rax; ccyadd rbp,8mov [rbp],raxmovsxd rax,dword[w1B6]; fillrectcall w1C2; $ffffffmov dword[w53],16777215; " > "add rbp,8mov [rbp],raxmov rax,str1B5BC; (_i15E:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o15E; $ff; OPTN ANDand rax,255; DUPadd rbp,8mov [rbp],rax; _charemit; OPTV EXmov ecx,dword[w1F3]call rcx; _charsize; OPTV EXmov ecx,dword[w1F4]call rcx; 'ccx; OPTAV +!add dword[w1B5],eaxmov rax,[rbp]sub rbp,8; )jmp _i15E_o15E:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 'buscapadadd rbp,8mov [rbp],raxmov rax,w3B3; 'findpadadd rbp,8mov [rbp],raxmov rax,w365; 31add rbp,8mov [rbp],raxmov rax,31; 'proinputexeadd rbp,8mov [rbp],raxmov rax,w2CF; 'iniinputadd rbp,8mov [rbp],raxmov rax,w2CB; w/fococall w2B4; DROPmov rax,[rbp]sub rbp,8; (_i15F:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o15F; $ff; OPTN ANDand rax,255; DUPadd rbp,8mov [rbp],rax; _charemit; OPTV EXmov ecx,dword[w1F3]call rcx; _charsize; OPTV EXmov ecx,dword[w1F4]call rcx; 'ccx; OPTAV +!add dword[w1B5],eaxmov rax,[rbp]sub rbp,8; )jmp _i15F_o15F:; 2DROPmov rax,[rbp-8]sub rbp,8*2; DROPmov rax,[rbp]sub rbp,8; KEYadd rbp,8mov [rbp],raxmov eax,dword[SYSKEY]; $d; OPTN =?cmp rax,13jne _o160; (; 0mov dword[w369],0; )_o160:; $101b; OPTN =?cmp rax,4123jne _o161; (; 0mov dword[w369],0; )_o161:; $50e0; OPTN =?cmp rax,20704jne _o162; (; 0mov dword[w3AB],0; )_o162:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :controlkey  |2001480|l     . I| calls:1 niv:2 len:38 (  --  )w3B5:;---------GEN; KEYadd rbp,8mov [rbp],raxmov eax,dword[SYSKEY]; $50e0; OPTN =?cmp rax,20704jne _o163; (; 0mov dword[w3AB],0; )_o163:; $66; OPTN =?cmp rax,102jne _o164; (; 2mov dword[w369],2; )_o164:; $78; OPTN =?cmp rax,120jne _o165; (; copyselcall w384; borraselcall w386; )_o165:; $63; OPTN =?cmp rax,99jne _o166; (; copyselcall w384; )_o166:; $76; OPTN =?cmp rax,118jne _o167; (; controlvcall w38D; )_o167:; $4052; OPTN =?cmp rax,16466jne _o168; (; controlacall w392; )_o168:; $4051; OPTN =?cmp rax,16465jne _o169; (; controlscall w393; )_o169:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :editmodekey  |1002490|l  ;  . I| calls:2 niv:1 len:134 ( a -- b )w3B6:;---------GEN; panelcontroladd rbp,8mov [rbp],raxmovsxd rax,dword[w3AB]; 1?or rax,raxjz _o16A; (; DROPmov rax,[rbp]sub rbp,8; controlkeyjmp w3B5; ;; )_o16A:; DROPmov rax,[rbp]sub rbp,8; 'dnsadd rbp,8mov [rbp],raxmov rax,w3B0; 'mosadd rbp,8mov [rbp],raxmov rax,w3B1; 'upsadd rbp,8mov [rbp],raxmov rax,w3B2; guiMapcall w2A1; CHARadd rbp,8mov [rbp],raxmov eax,dword[SYSCHAR]; 1?or rax,raxjz _o16B; (; modo; OPTV EXmov ecx,dword[w36D]jmp rcx; ;; )_o16B:; DROPmov rax,[rbp]sub rbp,8; KEYadd rbp,8mov [rbp],raxmov eax,dword[SYSKEY]; $8; OPTN =?cmp rax,8jne _o16C; (; kbackcall w388; )_o16C:; $7f; OPTN =?cmp rax,127jne _o16D; (; kdelcall w387; )_o16D:; $4052; OPTN =?cmp rax,16466jne _o16E; (; karribacall w37A; )_o16E:; $4051; OPTN =?cmp rax,16465jne _o16F; (; kabajocall w37B; )_o16F:; $404f; OPTN =?cmp rax,16463jne _o170; (; kdercall w37C; )_o170:; $4050; OPTN =?cmp rax,16464jne _o171; (; kizqcall w37D; )_o171:; $404a; OPTN =?cmp rax,16458jne _o172; (; selecccall w374; fuente>add rbp,8mov [rbp],raxmovsxd rax,dword[w35D]; 1; OPTN -sub rax,1; <<13call w370; 1; OPTN +add rax,1; 'fuente>; OPTAV !mov dword[w35D],eaxmov rax,[rbp]sub rbp,8; selecccall w374; )_o172:; $404d; OPTN =?cmp rax,16461jne _o173; (; selecccall w374; fuente>add rbp,8mov [rbp],raxmovsxd rax,dword[w35D]; >>13call w371; 1; OPTN +add rax,1; 'fuente>; OPTAV !mov dword[w35D],eaxmov rax,[rbp]sub rbp,8; selecccall w374; )_o173:; $404b; OPTN =?cmp rax,16459jne _o174; (; selecccall w374; 20add rbp,8mov [rbp],raxmov rax,20; (_i175:; 1?or rax,raxjz _o175; 1; OPTN -sub rax,1; karribacall w37A; )jmp _i175_o175:; DROPmov rax,[rbp]sub rbp,8; selecccall w374; )_o174:; $404e; OPTN =?cmp rax,16462jne _o176; (; selecccall w374; 20add rbp,8mov [rbp],raxmov rax,20; (_i177:; 1?or rax,raxjz _o177; 1; OPTN -sub rax,1; kabajocall w37B; )jmp _i177_o177:; DROPmov rax,[rbp]sub rbp,8; selecccall w374; )_o176:; $4049; OPTN =?cmp rax,16457jne _o178; (; modoadd rbp,8mov [rbp],raxmovsxd rax,dword[w36D]; 'lins; OPTAW =?cmp rax,w36Ajne _o179; (; DROPmov rax,[rbp]sub rbp,8; 'loveradd rbp,8mov [rbp],raxmov rax,w36B; 'modo; OPTAV !mov dword[w36D],eaxmov rax,[rbp]sub rbp,8; ;ret; )_o179:; DROPmov rax,[rbp]sub rbp,8; 'linsadd rbp,8mov [rbp],raxmov rax,w36A; 'modo; OPTAV !mov dword[w36D],eaxmov rax,[rbp]sub rbp,8; )_o178:; $d; OPTN =?cmp rax,13jne _o17A; (; 13add rbp,8mov [rbp],raxmov rax,13; modo; OPTV EXmov ecx,dword[w36D]call rcx; )_o17A:; $9; OPTN =?cmp rax,9jne _o17B; (; 9add rbp,8mov [rbp],raxmov rax,9; modo; OPTV EXmov ecx,dword[w36D]call rcx; )_o17B:; $101b; OPTN =?cmp rax,4123jne _o17C; (; 1mov dword[w118],1; )_o17C:; $40e0; OPTN =?cmp rax,16608jne _o17D; (; 1mov dword[w3AB],1; )_o17D:; $50e0; OPTN =?cmp rax,20704jne _o17E; (; 0mov dword[w3AB],0; )_o17E:; $40e1; OPTN =?cmp rax,16609jne _o17F; (; 1mov dword[w116],1; )_o17F:; $50e1; OPTN =?cmp rax,20705jne _o180; (; 0mov dword[w116],0; )_o180:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :errmodekey  |2001480|l     . I| calls:1 niv:2 len:21 (  --  )w3B7:;---------GEN; xcodeadd rbp,8mov [rbp],raxmovsxd rax,dword[w34D]; hcodeadd rbp,8mov [rbp],raxmovsxd rax,dword[w350]; 1; OPTN +add rax,1; cch; OPTV *movsxd rbx,dword[w1EE]imul rax,rbx; 'ccy; OPTAV !mov dword[w1B6],eaxmov rax,[rbp]sub rbp,8; ccw; OPTV *movsxd rbx,dword[w1EF]imul rax,rbx; 'ccx; OPTAV !mov dword[w1B5],eaxmov rax,[rbp]sub rbp,8; $AE0000mov dword[w53],11403264; rowsadd rbp,8mov [rbp],raxmovsxd rax,dword[w1EC]; hcode; OPTV -movsxd rbx,dword[w350]sub rax,rbx; 1; OPTN -sub rax,1; SWadd rbp,8mov [rbp],raxmov rax,XRES; SWAPxchg rax,[rbp]; cch; OPTV *movsxd rbx,dword[w1EE]imul rax,rbx; 0add rbp,8mov [rbp],raxxor rax,rax; ccyadd rbp,8mov [rbp],raxmovsxd rax,dword[w1B6]; fillrectcall w1C2; $ffffffmov dword[w53],16777215; 'outpadadd rbp,8mov [rbp],raxmov rax,w366; (_i181:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o181; ctextcall w20A; )jmp _i181_o181:; 2DROPmov rax,[rbp-8]sub rbp,8*2; editmodekeyjmp w3B6; ;;--------------------------; :btnf  |5004480|l     . I| calls:4 niv:5 len:14 ( ab --  )w3B8:;---------GEN; $20 ; calcadd rbp,8mov [rbp],raxmov rax,32; DUPadd rbp,8mov [rbp],rax; _charemit; OPTV EXmov ecx,dword[w1F3]call rcx; _charsize; OPTV EXmov ecx,dword[w1F4]call rcx; 'ccx; OPTAV +!add dword[w1B5],eaxmov rax,[rbp]sub rbp,8; $ff0000mov dword[w53],16711680; swprintcall w200; cchadd rbp,8mov [rbp],raxmovsxd rax,dword[w1EE]; ccxadd rbp,8mov [rbp],raxmovsxd rax,dword[w1B5]; ccyadd rbp,8mov [rbp],raxmovsxd rax,dword[w1B6]; fillrectcall w1C2; $ffffffmov dword[w53],16777215; (_i182:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o182; $ff; OPTN ANDand rax,255; DUPadd rbp,8mov [rbp],rax; _charemit; OPTV EXmov ecx,dword[w1F3]call rcx; _charsize; OPTV EXmov ecx,dword[w1F4]call rcx; 'ccx; OPTAV +!add dword[w1B5],eaxmov rax,[rbp]sub rbp,8; )jmp _i182_o182:; 2DROPmov rax,[rbp-8]sub rbp,8*2; $ff00mov dword[w53],65280; (_i183:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o183; $ff; OPTN ANDand rax,255; DUPadd rbp,8mov [rbp],rax; _charemit; OPTV EXmov ecx,dword[w1F3]call rcx; _charsize; OPTV EXmov ecx,dword[w1F4]call rcx; 'ccx; OPTAV +!add dword[w1B5],eaxmov rax,[rbp]sub rbp,8; )jmp _i183_o183:; 2DROPmov rax,[rbp-8]sub rbp,8*2; ;ret;--------------------------; :barrac  |6001490|l  ;  . I| calls:1 niv:6 len:27 (  --  )w3B9:;---------GEN; "Cut"add rbp,8mov [rbp],raxmov rax,str1BB3B; "X"add rbp,8mov [rbp],raxmov rax,str1BB41; btnfcall w3B8; "opy"add rbp,8mov [rbp],raxmov rax,str1BB4B; "C"add rbp,8mov [rbp],raxmov rax,str1BB51; btnfcall w3B8; "Paste"add rbp,8mov [rbp],raxmov rax,str1BB5B; "V"add rbp,8mov [rbp],raxmov rax,str1BB63; btnfcall w3B8; "ind"add rbp,8mov [rbp],raxmov rax,str1BB6D; "F"add rbp,8mov [rbp],raxmov rax,str1BB73; btnfcall w3B8; 'findpadadd rbp,8mov [rbp],raxmov rax,w365; DUPadd rbp,8mov [rbp],rax; C@movsx rax,byte [rax]; 0?or rax,raxjnz _o184; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; ;ret; )_o184:; DROPmov rax,[rbp]sub rbp,8; $ffffffmov dword[w53],16777215; " [%s]"add rbp,8mov [rbp],raxmov rax,str1BBB3; markcall w14D; 'buffadd rbp,8mov [rbp],raxmov rax,w177; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; (_i185:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o185; ,emitcall w175; )jmp _i185_o185:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 0add rbp,8mov [rbp],raxxor rax,rax; here; OPTV C!+movsxd rbx,dword[w14A]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; emptycall w14E; 'buffadd rbp,8mov [rbp],raxmov rax,w177; (_i186:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o186; $ff; OPTN ANDand rax,255; DUPadd rbp,8mov [rbp],rax; _charemit; OPTV EXmov ecx,dword[w1F3]call rcx; _charsize; OPTV EXmov ecx,dword[w1F4]call rcx; 'ccx; OPTAV +!add dword[w1B5],eaxmov rax,[rbp]sub rbp,8; )jmp _i186_o186:; 2DROPmov rax,[rbp-8]sub rbp,8*2; ;ret;--------------------------; :barra  |5001490|l  ;  . I| calls:1 niv:5 len:51 (  --  )w3BA:;---------GEN; xcodeadd rbp,8mov [rbp],raxmovsxd rax,dword[w34D]; ycodeadd rbp,8mov [rbp],raxmovsxd rax,dword[w34E]; 1; OPTN -sub rax,1; cch; OPTV *movsxd rbx,dword[w1EE]imul rax,rbx; 'ccy; OPTAV !mov dword[w1B6],eaxmov rax,[rbp]sub rbp,8; ccw; OPTV *movsxd rbx,dword[w1EF]imul rax,rbx; 'ccx; OPTAV !mov dword[w1B5],eaxmov rax,[rbp]sub rbp,8; $ff00mov dword[w53],65280; ":r3 editor"add rbp,8mov [rbp],raxmov rax,str1BBF3; (_i187:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o187; $ff; OPTN ANDand rax,255; DUPadd rbp,8mov [rbp],rax; _charemit; OPTV EXmov ecx,dword[w1F3]call rcx; _charsize; OPTV EXmov ecx,dword[w1F4]call rcx; 'ccx; OPTAV +!add dword[w1B5],eaxmov rax,[rbp]sub rbp,8; )jmp _i187_o187:; 2DROPmov rax,[rbp-8]sub rbp,8*2; xcodeadd rbp,8mov [rbp],raxmovsxd rax,dword[w34D]; wcode; OPTV +movsxd rbx,dword[w34F]add rax,rbx; 8; OPTN -sub rax,8; ccw; OPTV *movsxd rbx,dword[w1EF]imul rax,rbx; 'ccx; OPTAV !mov dword[w1B5],eaxmov rax,[rbp]sub rbp,8; $ffffmov dword[w53],65535; $20 ; calcadd rbp,8mov [rbp],raxmov rax,32; DUPadd rbp,8mov [rbp],rax; _charemit; OPTV EXmov ecx,dword[w1F3]call rcx; _charsize; OPTV EXmov ecx,dword[w1F4]call rcx; 'ccx; OPTAV +!add dword[w1B5],eaxmov rax,[rbp]sub rbp,8; xcursoradd rbp,8mov [rbp],raxmovsxd rax,dword[w356]; 1; OPTN +add rax,1; .dcall w13D; (_i188:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o188; $ff; OPTN ANDand rax,255; DUPadd rbp,8mov [rbp],rax; _charemit; OPTV EXmov ecx,dword[w1F3]call rcx; _charsize; OPTV EXmov ecx,dword[w1F4]call rcx; 'ccx; OPTAV +!add dword[w1B5],eaxmov rax,[rbp]sub rbp,8; )jmp _i188_o188:; 2DROPmov rax,[rbp-8]sub rbp,8*2; $20 ; calcadd rbp,8mov [rbp],raxmov rax,32; DUPadd rbp,8mov [rbp],rax; _charemit; OPTV EXmov ecx,dword[w1F3]call rcx; _charsize; OPTV EXmov ecx,dword[w1F4]call rcx; 'ccx; OPTAV +!add dword[w1B5],eaxmov rax,[rbp]sub rbp,8; ycursoradd rbp,8mov [rbp],raxmovsxd rax,dword[w355]; 1; OPTN +add rax,1; .dcall w13D; (_i189:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o189; $ff; OPTN ANDand rax,255; DUPadd rbp,8mov [rbp],rax; _charemit; OPTV EXmov ecx,dword[w1F3]call rcx; _charsize; OPTV EXmov ecx,dword[w1F4]call rcx; 'ccx; OPTAV +!add dword[w1B5],eaxmov rax,[rbp]sub rbp,8; )jmp _i189_o189:; 2DROPmov rax,[rbp-8]sub rbp,8*2; $20 ; calcadd rbp,8mov [rbp],raxmov rax,32; DUPadd rbp,8mov [rbp],rax; _charemit; OPTV EXmov ecx,dword[w1F3]call rcx; _charsize; OPTV EXmov ecx,dword[w1F4]call rcx; 'ccx; OPTAV +!add dword[w1B5],eaxmov rax,[rbp]sub rbp,8; xcodeadd rbp,8mov [rbp],raxmovsxd rax,dword[w34D]; ycodeadd rbp,8mov [rbp],raxmovsxd rax,dword[w34E]; hcode; OPTV +movsxd rbx,dword[w350]add rax,rbx; cch; OPTV *movsxd rbx,dword[w1EE]imul rax,rbx; 'ccy; OPTAV !mov dword[w1B6],eaxmov rax,[rbp]sub rbp,8; ccw; OPTV *movsxd rbx,dword[w1EF]imul rax,rbx; 'ccx; OPTAV !mov dword[w1B5],eaxmov rax,[rbp]sub rbp,8; panelcontroladd rbp,8mov [rbp],raxmovsxd rax,dword[w3AB]; 1?or rax,raxjz _o18A; (; DROPmov rax,[rbp]sub rbp,8; barracjmp w3B9; ;; )_o18A:; DROPmov rax,[rbp]sub rbp,8; $ff00mov dword[w53],65280; 'nameadd rbp,8mov [rbp],raxmov rax,w357; (_i18B:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o18B; $ff; OPTN ANDand rax,255; DUPadd rbp,8mov [rbp],rax; _charemit; OPTV EXmov ecx,dword[w1F3]call rcx; _charsize; OPTV EXmov ecx,dword[w1F4]call rcx; 'ccx; OPTAV +!add dword[w1B5],eaxmov rax,[rbp]sub rbp,8; )jmp _i18B_o18B:; 2DROPmov rax,[rbp-8]sub rbp,8*2; ;ret;--------------------------; :edload  |1001482|e     . I| calls:1 niv:1 len:20 ( a --  )w3BB:;---------GEN; 'nameadd rbp,8mov [rbp],raxmov rax,w357; (_i18C:; SWAPxchg rax,[rbp]; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o18C; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; C!+mov rcx,[rbp]mov byte[rax],cladd rax,1sub rbp,8; )jmp _i18C_o18C:; NIPsub rbp,8; SWAPxchg rax,[rbp]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; fuenteadd rbp,8mov [rbp],raxmovsxd rax,dword[w35C]; 'nameadd rbp,8mov [rbp],raxmov rax,w357; getpathcall w120; LOADcall SYSLOAD; 0add rbp,8mov [rbp],raxxor rax,rax; SWAPxchg rax,[rbp]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; fuenteadd rbp,8mov [rbp],raxmovsxd rax,dword[w35C]; only13call w148; fuenteadd rbp,8mov [rbp],raxmovsxd rax,dword[w35C]; DUPadd rbp,8mov [rbp],rax; 'pantaini>; OPTAV !mov dword[w358],eaxmov rax,[rbp]sub rbp,8; countcall w130; +add rax,[rbp]sub rbp,8; '$fuente; OPTAV !mov dword[w35E],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :edsave  |1001482|e     . I| calls:1 niv:1 len:18 (  --  )w3BC:;---------GEN; markcall w14D; fuenteadd rbp,8mov [rbp],raxmovsxd rax,dword[w35C]; (_i18D:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o18D; 13; OPTN =?cmp rax,13jne _o18E; (; here; OPTV C!+movsxd rbx,dword[w14A]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; 10add rbp,8mov [rbp],raxmov rax,10; )_o18E:; here; OPTV C!+movsxd rbx,dword[w14A]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; )jmp _i18D_o18D:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 'nameadd rbp,8mov [rbp],raxmov rax,w357; memmap>add rbp,8mov [rbp],raxmovsxd rax,dword[w14C]; 4; OPTN -sub rax,4; @movsxd rax,dword [rax]; hereadd rbp,8mov [rbp],raxmovsxd rax,dword[w14A]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; -neg raxadd rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; SAVEcall SYSSAVE; emptyjmp w14E; ;;--------------------------; :editando  |9001484|l'    . I| calls:1 niv:9 len:34 ( a --  )w3BD:;---------GEN; VFRAMEadd rbp,8mov [rbp],raxmov rax,[SYSFRAME]; 0add rbp,8mov [rbp],raxxor rax,rax; SWadd rbp,8mov [rbp],raxmov rax,XRES; SHadd rbp,8mov [rbp],raxmov rax,YRES; *imul rax,[rbp]sub rbp,8; FILLmov rcx,raxmovsxd rax,dword[rbp]movsxd rdi,dword[rbp-8]rep stosdmov rax,[rbp-8*2]sub rbp,8*3; guicall w29B; $101010mov dword[w53],1052688; xcodeadd rbp,8mov [rbp],raxmovsxd rax,dword[w34D]; ycodeadd rbp,8mov [rbp],raxmovsxd rax,dword[w34E]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; wcode; OPTV +movsxd rbx,dword[w34F]add rax,rbx; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; hcode; OPTV +movsxd rbx,dword[w350]add rax,rbx; backfillcall w212; barracall w3BA; drawcodecall w3AA; emodeadd rbp,8mov [rbp],raxmovsxd rax,dword[w369]; 0?or rax,raxjnz _o18F; (; editmodekeycall w3B6; )_o18F:; 2; OPTN =?cmp rax,2jne _o190; (; findmodekeycall w3B4; )_o190:; 3; OPTN =?cmp rax,3jne _o191; (; errmodekeycall w3B7; )_o191:; DROPmov rax,[rbp]sub rbp,8; XYPENadd rbp,8mov [rbp],raxmov eax,dword[SYSXM]add rbp,8mov [rbp],raxmov eax,dword[SYSYM]; 'arrow8add rbp,8mov [rbp],raxmov rax,w254; spritejmp w230; ;;--------------------------; :edram  |1001082|e     .  | calls:1 niv:1 len:38 (  --  )w3BF:;---------GEN; hereadd rbp,8mov [rbp],raxmovsxd rax,dword[w14A]; DUPadd rbp,8mov [rbp],rax; 'fuente; OPTAV !mov dword[w35C],eaxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 'fuente>; OPTAV !mov dword[w35D],eaxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; '$fuente; OPTAV !mov dword[w35E],eaxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 'pantaini>; OPTAV !mov dword[w358],eaxmov rax,[rbp]sub rbp,8; $ffff; OPTN +add rax,65535; DUPadd rbp,8mov [rbp],rax; 'clipboard; OPTAV !mov dword[w35F],eaxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 'clipboard>; OPTAV !mov dword[w360],eaxmov rax,[rbp]sub rbp,8; $3fff; OPTN +add rax,16383; DUPadd rbp,8mov [rbp],rax; 'undobuffer; OPTAV !mov dword[w361],eaxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 'undobuffer>; OPTAV !mov dword[w362],eaxmov rax,[rbp]sub rbp,8; $1fff; OPTN +add rax,8191; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; 0add rbp,8mov [rbp],raxxor rax,rax; here; OPTV !movsxd rbx,dword[w14A]mov dword[rbx],eaxmov rax,[rbp]sub rbp,8; markjmp w14D; ;;--------------------------; :i;  |1084|l'    .  | calls:1 niv:0 len:7 ( a -- b )w3CB:;---------GEN; DROPmov rax,[rbp]sub rbp,8; RTOS; OPTV @movsxd rbx,dword[w3C5]add rbp,8mov [rbp],raxmovsxd rax,dword [rbx]; 4add rbp,8mov [rbp],raxmov rax,4; 'RTOS; OPTAV +!add dword[w3C5],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :i(  |1084|l'    .  | calls:1 niv:0 len:1 (  --  )w3CC:;---------GEN; ;ret;--------------------------; :i)  |1084|l'    .  | calls:1 niv:0 len:9 ( a -- b )w3CD:;---------GEN; @+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; 48; OPTN <<shl rax,48; 48; OPTN >>sar rax,48; +add rax,[rbp]sub rbp,8; 2; OPTN -sub rax,2; ;ret;--------------------------; :i[  |1084|l'    .  | calls:1 niv:0 len:7 ( a -- b )w3CE:;---------GEN; @+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; 48; OPTN <<shl rax,48; 48; OPTN >>sar rax,48; +add rax,[rbp]sub rbp,8; ;ret;--------------------------; :i]  |1084|l'    .  | calls:1 niv:0 len:15 ( a --  )w3CF:;---------GEN; 4add rbp,8mov [rbp],raxmov rax,4; 'NOS; OPTAV +!add dword[w3C4],eaxmov rax,[rbp]sub rbp,8; TOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C3]; NOS; OPTV !movsxd rbx,dword[w3C4]mov dword[rbx],eaxmov rax,[rbp]sub rbp,8; @+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; 48; OPTN <<shl rax,48; 48; OPTN >>sar rax,48; +add rax,[rbp]sub rbp,8; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :iEX  |1084|l'    .  | calls:1 niv:0 len:16 ( a -- b )w3D0:;---------GEN; -4add rbp,8mov [rbp],raxmov rax,-4; 'RTOS; OPTAV +!add dword[w3C5],eaxmov rax,[rbp]sub rbp,8; RTOS; OPTV !movsxd rbx,dword[w3C5]mov dword[rbx],eaxmov rax,[rbp]sub rbp,8; TOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C3]; CODE; OPTV +movsxd rbx,dword[w3C8]add rax,rbx; 4add rbp,8mov [rbp],raxmov rax,4; 'NOS; OPTAV +!add dword[w3C4],eaxmov rax,[rbp]sub rbp,8; NOS; OPTV @movsxd rbx,dword[w3C4]add rbp,8mov [rbp],raxmovsxd rax,dword [rbx]; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :i0?  |1094|l' ;  .  | calls:1 niv:0 len:18 ( a -- b )w3D1:;---------GEN; TOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C3]; 1?or rax,raxjz _o192; (; DROPmov rax,[rbp]sub rbp,8; @+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; 48; OPTN <<shl rax,48; 48; OPTN >>sar rax,48; +add rax,[rbp]sub rbp,8; 2; OPTN -sub rax,2; ;ret; )_o192:; DROPmov rax,[rbp]sub rbp,8; 2; OPTN +add rax,2; ;ret;--------------------------; :i1?  |1094|l' ;  .  | calls:1 niv:0 len:18 ( a -- b )w3D2:;---------GEN; TOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C3]; 0?or rax,raxjnz _o193; (; DROPmov rax,[rbp]sub rbp,8; @+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; 48; OPTN <<shl rax,48; 48; OPTN >>sar rax,48; +add rax,[rbp]sub rbp,8; 2; OPTN -sub rax,2; ;ret; )_o193:; DROPmov rax,[rbp]sub rbp,8; 2; OPTN +add rax,2; ;ret;--------------------------; :i+?  |1094|l' ;  .  | calls:1 niv:0 len:18 ( a -- b )w3D3:;---------GEN; TOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C3]; -?or rax,raxjns _o194; (; DROPmov rax,[rbp]sub rbp,8; @+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; 48; OPTN <<shl rax,48; 48; OPTN >>sar rax,48; +add rax,[rbp]sub rbp,8; 2; OPTN -sub rax,2; ;ret; )_o194:; DROPmov rax,[rbp]sub rbp,8; 2; OPTN +add rax,2; ;ret;--------------------------; :i-?  |1094|l' ;  .  | calls:1 niv:0 len:18 ( a -- b )w3D4:;---------GEN; TOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C3]; +?or rax,raxjs _o195; (; DROPmov rax,[rbp]sub rbp,8; @+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; 48; OPTN <<shl rax,48; 48; OPTN >>sar rax,48; +add rax,[rbp]sub rbp,8; 2; OPTN -sub rax,2; ;ret; )_o195:; DROPmov rax,[rbp]sub rbp,8; 2; OPTN +add rax,2; ;ret;--------------------------; :i<?  |1094|l' ;  .  | calls:1 niv:0 len:28 ( a -- b )w3D5:;---------GEN; NOS; OPTV @movsxd rbx,dword[w3C4]add rbp,8mov [rbp],raxmovsxd rax,dword [rbx]; TOS; OPTV >=?cmp eax,dword[w3C3]jl _o196; (; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; -4add rbp,8mov [rbp],raxmov rax,-4; 'NOS; OPTAV +!add dword[w3C4],eaxmov rax,[rbp]sub rbp,8; @+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; 48; OPTN <<shl rax,48; 48; OPTN >>sar rax,48; +add rax,[rbp]sub rbp,8; 2; OPTN -sub rax,2; ;ret; )_o196:; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; -4add rbp,8mov [rbp],raxmov rax,-4; 'NOS; OPTAV +!add dword[w3C4],eaxmov rax,[rbp]sub rbp,8; 2; OPTN +add rax,2; ;ret;--------------------------; :i>?  |1094|l' ;  .  | calls:1 niv:0 len:28 ( a -- b )w3D6:;---------GEN; NOS; OPTV @movsxd rbx,dword[w3C4]add rbp,8mov [rbp],raxmovsxd rax,dword [rbx]; TOS; OPTV <=?cmp eax,dword[w3C3]jg _o197; (; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; -4add rbp,8mov [rbp],raxmov rax,-4; 'NOS; OPTAV +!add dword[w3C4],eaxmov rax,[rbp]sub rbp,8; @+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; 48; OPTN <<shl rax,48; 48; OPTN >>sar rax,48; +add rax,[rbp]sub rbp,8; 2; OPTN -sub rax,2; ;ret; )_o197:; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; -4add rbp,8mov [rbp],raxmov rax,-4; 'NOS; OPTAV +!add dword[w3C4],eaxmov rax,[rbp]sub rbp,8; 2; OPTN +add rax,2; ;ret;--------------------------; :i=?  |1094|l' ;  .  | calls:1 niv:0 len:28 ( a -- b )w3D7:;---------GEN; NOS; OPTV @movsxd rbx,dword[w3C4]add rbp,8mov [rbp],raxmovsxd rax,dword [rbx]; TOS; OPTV <>?cmp eax,dword[w3C3]je _o198; (; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; -4add rbp,8mov [rbp],raxmov rax,-4; 'NOS; OPTAV +!add dword[w3C4],eaxmov rax,[rbp]sub rbp,8; @+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; 48; OPTN <<shl rax,48; 48; OPTN >>sar rax,48; +add rax,[rbp]sub rbp,8; 2; OPTN -sub rax,2; ;ret; )_o198:; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; -4add rbp,8mov [rbp],raxmov rax,-4; 'NOS; OPTAV +!add dword[w3C4],eaxmov rax,[rbp]sub rbp,8; 2; OPTN +add rax,2; ;ret;--------------------------; :i>=?  |1094|l' ;  .  | calls:1 niv:0 len:28 ( a -- b )w3D8:;---------GEN; NOS; OPTV @movsxd rbx,dword[w3C4]add rbp,8mov [rbp],raxmovsxd rax,dword [rbx]; TOS; OPTV <?cmp eax,dword[w3C3]jge _o199; (; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; -4add rbp,8mov [rbp],raxmov rax,-4; 'NOS; OPTAV +!add dword[w3C4],eaxmov rax,[rbp]sub rbp,8; @+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; 48; OPTN <<shl rax,48; 48; OPTN >>sar rax,48; +add rax,[rbp]sub rbp,8; 2; OPTN -sub rax,2; ;ret; )_o199:; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; -4add rbp,8mov [rbp],raxmov rax,-4; 'NOS; OPTAV +!add dword[w3C4],eaxmov rax,[rbp]sub rbp,8; 2; OPTN +add rax,2; ;ret;--------------------------; :i<=?  |1094|l' ;  .  | calls:1 niv:0 len:28 ( a -- b )w3D9:;---------GEN; NOS; OPTV @movsxd rbx,dword[w3C4]add rbp,8mov [rbp],raxmovsxd rax,dword [rbx]; TOS; OPTV >?cmp eax,dword[w3C3]jle _o19A; (; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; -4add rbp,8mov [rbp],raxmov rax,-4; 'NOS; OPTAV +!add dword[w3C4],eaxmov rax,[rbp]sub rbp,8; @+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; 48; OPTN <<shl rax,48; 48; OPTN >>sar rax,48; +add rax,[rbp]sub rbp,8; 2; OPTN -sub rax,2; ;ret; )_o19A:; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; -4add rbp,8mov [rbp],raxmov rax,-4; 'NOS; OPTAV +!add dword[w3C4],eaxmov rax,[rbp]sub rbp,8; 2; OPTN +add rax,2; ;ret;--------------------------; :i<>?  |1094|l' ;  .  | calls:1 niv:0 len:28 ( a -- b )w3DA:;---------GEN; NOS; OPTV @movsxd rbx,dword[w3C4]add rbp,8mov [rbp],raxmovsxd rax,dword [rbx]; TOS; OPTV =?cmp eax,dword[w3C3]jne _o19B; (; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; -4add rbp,8mov [rbp],raxmov rax,-4; 'NOS; OPTAV +!add dword[w3C4],eaxmov rax,[rbp]sub rbp,8; @+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; 48; OPTN <<shl rax,48; 48; OPTN >>sar rax,48; +add rax,[rbp]sub rbp,8; 2; OPTN -sub rax,2; ;ret; )_o19B:; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; -4add rbp,8mov [rbp],raxmov rax,-4; 'NOS; OPTAV +!add dword[w3C4],eaxmov rax,[rbp]sub rbp,8; 2; OPTN +add rax,2; ;ret;--------------------------; :iAND?  |1094|l' ;  .  | calls:1 niv:0 len:28 ( a -- b )w3DB:;---------GEN; NOS; OPTV @movsxd rbx,dword[w3C4]add rbp,8mov [rbp],raxmovsxd rax,dword [rbx]; TOS; OPTV nand?test eax,dword[w3C3]jnz _o19C; (; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; -4add rbp,8mov [rbp],raxmov rax,-4; 'NOS; OPTAV +!add dword[w3C4],eaxmov rax,[rbp]sub rbp,8; @+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; 48; OPTN <<shl rax,48; 48; OPTN >>sar rax,48; +add rax,[rbp]sub rbp,8; 2; OPTN -sub rax,2; ;ret; )_o19C:; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; -4add rbp,8mov [rbp],raxmov rax,-4; 'NOS; OPTAV +!add dword[w3C4],eaxmov rax,[rbp]sub rbp,8; 2; OPTN +add rax,2; ;ret;--------------------------; :iNAND?  |1094|l' ;  .  | calls:1 niv:0 len:28 ( a -- b )w3DC:;---------GEN; NOS; OPTV @movsxd rbx,dword[w3C4]add rbp,8mov [rbp],raxmovsxd rax,dword [rbx]; TOS; OPTV and?test eax,dword[w3C3]jz _o19D; (; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; -4add rbp,8mov [rbp],raxmov rax,-4; 'NOS; OPTAV +!add dword[w3C4],eaxmov rax,[rbp]sub rbp,8; @+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; 48; OPTN <<shl rax,48; 48; OPTN >>sar rax,48; +add rax,[rbp]sub rbp,8; 2; OPTN -sub rax,2; ;ret; )_o19D:; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; -4add rbp,8mov [rbp],raxmov rax,-4; 'NOS; OPTAV +!add dword[w3C4],eaxmov rax,[rbp]sub rbp,8; 2; OPTN +add rax,2; ;ret;--------------------------; :iBT?  |1094|l' ;  .  | calls:1 niv:0 len:33 ( a -- b )w3DD:;---------GEN; NOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C4]; DUPadd rbp,8mov [rbp],rax; 4; OPTN -sub rax,4; @movsxd rax,dword [rax]; SWAPxchg rax,[rbp]; @movsxd rax,dword [rax]; TOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C3]; BT?sub rbp,8*2mov rbx,[rbp+8]xchg rax,rbxcmp rax,[rbp+8*2]jge _o19Ecmp rax,rbxjle _o19E; (; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; -8add rbp,8mov [rbp],raxmov rax,-8; 'NOS; OPTAV +!add dword[w3C4],eaxmov rax,[rbp]sub rbp,8; @+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; 48; OPTN <<shl rax,48; 48; OPTN >>sar rax,48; +add rax,[rbp]sub rbp,8; 2; OPTN -sub rax,2; ;ret; )_o19E:; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; -8add rbp,8mov [rbp],raxmov rax,-8; 'NOS; OPTAV +!add dword[w3C4],eaxmov rax,[rbp]sub rbp,8; 2; OPTN +add rax,2; ;ret;--------------------------; :iDUP  |1084|l'    .  | calls:1 niv:0 len:7 (  --  )w3DE:;---------GEN; 4add rbp,8mov [rbp],raxmov rax,4; 'NOS; OPTAV +!add dword[w3C4],eaxmov rax,[rbp]sub rbp,8; TOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C3]; NOS; OPTV !movsxd rbx,dword[w3C4]mov dword[rbx],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :iDROP  |1084|l'    .  | calls:1 niv:0 len:10 (  --  )w3DF:;---------GEN; NOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C4]; DUPadd rbp,8mov [rbp],rax; @movsxd rax,dword [rax]; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; 4; OPTN -sub rax,4; 'NOS; OPTAV !mov dword[w3C4],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :iOVER  |3084|l'    .  | calls:3 niv:0 len:13 (  --  )w3E0:;---------GEN; 4add rbp,8mov [rbp],raxmov rax,4; 'NOS; OPTAV +!add dword[w3C4],eaxmov rax,[rbp]sub rbp,8; TOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C3]; NOS; OPTV !movsxd rbx,dword[w3C4]mov dword[rbx],eaxmov rax,[rbp]sub rbp,8; NOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C4]; 8; OPTN -sub rax,8; @movsxd rax,dword [rax]; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :iPICK2  |3084|l'    .  | calls:3 niv:0 len:13 (  --  )w3E1:;---------GEN; 4add rbp,8mov [rbp],raxmov rax,4; 'NOS; OPTAV +!add dword[w3C4],eaxmov rax,[rbp]sub rbp,8; TOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C3]; NOS; OPTV !movsxd rbx,dword[w3C4]mov dword[rbx],eaxmov rax,[rbp]sub rbp,8; NOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C4]; 12; OPTN -sub rax,12; @movsxd rax,dword [rax]; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :iPICK3  |1084|l'    .  | calls:1 niv:0 len:13 (  --  )w3E2:;---------GEN; 4add rbp,8mov [rbp],raxmov rax,4; 'NOS; OPTAV +!add dword[w3C4],eaxmov rax,[rbp]sub rbp,8; TOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C3]; NOS; OPTV !movsxd rbx,dword[w3C4]mov dword[rbx],eaxmov rax,[rbp]sub rbp,8; NOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C4]; 16; OPTN -sub rax,16; @movsxd rax,dword [rax]; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :iPICK4  |1084|l'    .  | calls:1 niv:0 len:13 (  --  )w3E3:;---------GEN; 4add rbp,8mov [rbp],raxmov rax,4; 'NOS; OPTAV +!add dword[w3C4],eaxmov rax,[rbp]sub rbp,8; TOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C3]; NOS; OPTV !movsxd rbx,dword[w3C4]mov dword[rbx],eaxmov rax,[rbp]sub rbp,8; NOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C4]; 20; OPTN -sub rax,20; @movsxd rax,dword [rax]; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :iSWAP  |1084|l'    .  | calls:1 niv:0 len:8 (  --  )w3E4:;---------GEN; NOS; OPTV @movsxd rbx,dword[w3C4]add rbp,8mov [rbp],raxmovsxd rax,dword [rbx]; TOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C3]; NOS; OPTV !movsxd rbx,dword[w3C4]mov dword[rbx],eaxmov rax,[rbp]sub rbp,8; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :iNIP  |1084|l'    .  | calls:1 niv:0 len:4 (  --  )w3E5:;---------GEN; -4add rbp,8mov [rbp],raxmov rax,-4; 'NOS; OPTAV +!add dword[w3C4],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :iROT  |1084|l'    .  | calls:1 niv:0 len:15 (  --  )w3E6:;---------GEN; TOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C3]; NOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C4]; 4; OPTN -sub rax,4; @movsxd rax,dword [rax]; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; NOS; OPTV @movsxd rbx,dword[w3C4]add rbp,8mov [rbp],raxmovsxd rax,dword [rbx]; NOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C4]; 4; OPTN -sub rax,4; !+mov rcx,[rbp]mov dword[rax],ecxadd rax,4sub rbp,8; !mov rcx,[rbp]mov dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; ;ret;--------------------------; :i2DUP  |1001084|l'    .  | calls:1 niv:1 len:3 (  --  )w3E7:;---------GEN; iOVERcall w3E0; iOVERjmp w3E0; ;;--------------------------; :i2DROP  |1084|l'    .  | calls:1 niv:0 len:12 (  --  )w3E8:;---------GEN; NOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C4]; DUPadd rbp,8mov [rbp],rax; 4; OPTN -sub rax,4; @movsxd rax,dword [rax]; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; 8; OPTN -sub rax,8; 'NOS; OPTAV !mov dword[w3C4],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :i3DROP  |1084|l'    .  | calls:1 niv:0 len:12 (  --  )w3E9:;---------GEN; NOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C4]; DUPadd rbp,8mov [rbp],rax; 8; OPTN -sub rax,8; @movsxd rax,dword [rax]; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; 12; OPTN -sub rax,12; 'NOS; OPTAV !mov dword[w3C4],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :i4DROP  |1084|l'    .  | calls:1 niv:0 len:12 (  --  )w3EA:;---------GEN; NOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C4]; DUPadd rbp,8mov [rbp],rax; 12; OPTN -sub rax,12; @movsxd rax,dword [rax]; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; 16; OPTN -sub rax,16; 'NOS; OPTAV !mov dword[w3C4],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :i2OVER  |1001084|l'    .  | calls:1 niv:1 len:3 (  --  )w3EB:;---------GEN; iPICK2call w3E1; iPICK2jmp w3E1; ;;--------------------------; :i2SWAP  |1084|l'    .  | calls:1 niv:0 len:21 (  --  )w3EC:;---------GEN; TOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C3]; NOS; OPTV @movsxd rbx,dword[w3C4]add rbp,8mov [rbp],raxmovsxd rax,dword [rbx]; NOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C4]; 4; OPTN -sub rax,4; DUPadd rbp,8mov [rbp],rax; 4; OPTN -sub rax,4; @movsxd rax,dword [rax]; NOS; OPTV !movsxd rbx,dword[w3C4]mov dword[rbx],eaxmov rax,[rbp]sub rbp,8; @movsxd rax,dword [rax]; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; NOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C4]; 8; OPTN -sub rax,8; !+mov rcx,[rbp]mov dword[rax],ecxadd rax,4sub rbp,8; !mov rcx,[rbp]mov dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; ;ret;--------------------------; :i@  |1084|l'    .  | calls:1 niv:0 len:7 (  --  )w3ED:;---------GEN; TOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C3]; CODE; OPTV +movsxd rbx,dword[w3C8]add rax,rbx; @movsxd rax,dword [rax]; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :iC@  |1084|l'    .  | calls:1 niv:0 len:7 (  --  )w3EE:;---------GEN; TOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C3]; CODE; OPTV +movsxd rbx,dword[w3C8]add rax,rbx; C@movsx rax,byte [rax]; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :i@+  |1084|l'    .  | calls:1 niv:0 len:14 (  --  )w3EF:;---------GEN; TOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C3]; CODE; OPTV +movsxd rbx,dword[w3C8]add rax,rbx; @+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; CODE; OPTV -movsxd rbx,dword[w3C8]sub rax,rbx; 4add rbp,8mov [rbp],raxmov rax,4; 'NOS; OPTAV +!add dword[w3C4],eaxmov rax,[rbp]sub rbp,8; NOS; OPTV !movsxd rbx,dword[w3C4]mov dword[rbx],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :iC@+  |1084|l'    .  | calls:1 niv:0 len:14 (  --  )w3F0:;---------GEN; TOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C3]; CODE; OPTV +movsxd rbx,dword[w3C8]add rax,rbx; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; CODE; OPTV -movsxd rbx,dword[w3C8]sub rax,rbx; 4add rbp,8mov [rbp],raxmov rax,4; 'NOS; OPTAV +!add dword[w3C4],eaxmov rax,[rbp]sub rbp,8; NOS; OPTV !movsxd rbx,dword[w3C4]mov dword[rbx],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :i!  |1084|l'    .  | calls:1 niv:0 len:18 (  --  )w3F1:;---------GEN; NOS; OPTV @movsxd rbx,dword[w3C4]add rbp,8mov [rbp],raxmovsxd rax,dword [rbx]; TOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C3]; CODE; OPTV +movsxd rbx,dword[w3C8]add rax,rbx; !mov rcx,[rbp]mov dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; NOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C4]; DUPadd rbp,8mov [rbp],rax; 4; OPTN -sub rax,4; @movsxd rax,dword [rax]; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; 8; OPTN -sub rax,8; 'NOS; OPTAV !mov dword[w3C4],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :iC!  |1084|l'    .  | calls:1 niv:0 len:18 (  --  )w3F2:;---------GEN; NOS; OPTV @movsxd rbx,dword[w3C4]add rbp,8mov [rbp],raxmovsxd rax,dword [rbx]; TOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C3]; CODE; OPTV +movsxd rbx,dword[w3C8]add rax,rbx; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; NOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C4]; DUPadd rbp,8mov [rbp],rax; 4; OPTN -sub rax,4; @movsxd rax,dword [rax]; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; 8; OPTN -sub rax,8; 'NOS; OPTAV !mov dword[w3C4],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :i!+  |1084|l'    .  | calls:1 niv:0 len:14 (  --  )w3F3:;---------GEN; NOS; OPTV @movsxd rbx,dword[w3C4]add rbp,8mov [rbp],raxmovsxd rax,dword [rbx]; TOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C3]; CODE; OPTV +movsxd rbx,dword[w3C8]add rax,rbx; !+mov rcx,[rbp]mov dword[rax],ecxadd rax,4sub rbp,8; CODE; OPTV -movsxd rbx,dword[w3C8]sub rax,rbx; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; -4mov dword[w3C4],-4; ;ret;--------------------------; :iC!+  |1084|l'    .  | calls:1 niv:0 len:14 (  --  )w3F4:;---------GEN; NOS; OPTV @movsxd rbx,dword[w3C4]add rbp,8mov [rbp],raxmovsxd rax,dword [rbx]; TOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C3]; CODE; OPTV +movsxd rbx,dword[w3C8]add rax,rbx; C!+mov rcx,[rbp]mov byte[rax],cladd rax,1sub rbp,8; CODE; OPTV -movsxd rbx,dword[w3C8]sub rax,rbx; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; -4mov dword[w3C4],-4; ;ret;--------------------------; :i+!  |1084|l'    .  | calls:1 niv:0 len:18 (  --  )w3F5:;---------GEN; NOS; OPTV @movsxd rbx,dword[w3C4]add rbp,8mov [rbp],raxmovsxd rax,dword [rbx]; TOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C3]; CODE; OPTV +movsxd rbx,dword[w3C8]add rax,rbx; +!mov rcx,[rbp]add dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; NOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C4]; DUPadd rbp,8mov [rbp],rax; 4; OPTN -sub rax,4; @movsxd rax,dword [rax]; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; 8; OPTN -sub rax,8; 'NOS; OPTAV !mov dword[w3C4],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :iC+!  |1084|l'    .  | calls:1 niv:0 len:18 (  --  )w3F6:;---------GEN; NOS; OPTV @movsxd rbx,dword[w3C4]add rbp,8mov [rbp],raxmovsxd rax,dword [rbx]; TOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C3]; CODE; OPTV +movsxd rbx,dword[w3C8]add rax,rbx; C+!mov rcx,[rbp]add byte [rax],clmov rax,[rbp-8]sub rbp,8*2; NOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C4]; DUPadd rbp,8mov [rbp],rax; 4; OPTN -sub rax,4; @movsxd rax,dword [rax]; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; 8; OPTN -sub rax,8; 'NOS; OPTAV !mov dword[w3C4],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :i>A  |1084|l'    .  | calls:1 niv:0 len:13 (  --  )w3F7:;---------GEN; TOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C3]; 'RA; OPTAV !mov dword[w3C6],eaxmov rax,[rbp]sub rbp,8; NOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C4]; DUPadd rbp,8mov [rbp],rax; @movsxd rax,dword [rax]; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; 4; OPTN -sub rax,4; 'NOS; OPTAV !mov dword[w3C4],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :iA>  |1084|l'    .  | calls:1 niv:0 len:10 (  --  )w3F8:;---------GEN; 4add rbp,8mov [rbp],raxmov rax,4; 'NOS; OPTAV +!add dword[w3C4],eaxmov rax,[rbp]sub rbp,8; TOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C3]; NOS; OPTV !movsxd rbx,dword[w3C4]mov dword[rbx],eaxmov rax,[rbp]sub rbp,8; RAadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C6]; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :iA@  |1084|l'    .  | calls:1 niv:0 len:13 (  --  )w3F9:;---------GEN; 4add rbp,8mov [rbp],raxmov rax,4; 'NOS; OPTAV +!add dword[w3C4],eaxmov rax,[rbp]sub rbp,8; TOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C3]; NOS; OPTV !movsxd rbx,dword[w3C4]mov dword[rbx],eaxmov rax,[rbp]sub rbp,8; RAadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C6]; CODE; OPTV +movsxd rbx,dword[w3C8]add rax,rbx; @movsxd rax,dword [rax]; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :iA!  |1084|l'    .  | calls:1 niv:0 len:15 (  --  )w3FA:;---------GEN; TOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C3]; RAadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C6]; CODE; OPTV +movsxd rbx,dword[w3C8]add rax,rbx; !mov rcx,[rbp]mov dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; NOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C4]; DUPadd rbp,8mov [rbp],rax; @movsxd rax,dword [rax]; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; 4; OPTN -sub rax,4; 'NOS; OPTAV !mov dword[w3C4],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :iA+  |1084|l'    .  | calls:1 niv:0 len:13 (  --  )w3FB:;---------GEN; TOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C3]; 'RA; OPTAV +!add dword[w3C6],eaxmov rax,[rbp]sub rbp,8; NOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C4]; DUPadd rbp,8mov [rbp],rax; @movsxd rax,dword [rax]; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; 4; OPTN -sub rax,4; 'NOS; OPTAV !mov dword[w3C4],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :iA@+  |1084|l'    .  | calls:1 niv:0 len:15 (  -- ab )w3FC:;---------GEN; 4add rbp,8mov [rbp],raxmov rax,4; 'NOS; OPTAV +!add dword[w3C4],eaxmov rax,[rbp]sub rbp,8; TOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C3]; NOS; OPTV !movsxd rbx,dword[w3C4]mov dword[rbx],eaxmov rax,[rbp]sub rbp,8; RAadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C6]; CODE; OPTV +movsxd rbx,dword[w3C8]add rax,rbx; @movsxd rax,dword [rax]; 'TOSadd rbp,8mov [rbp],raxmov rax,w3C3; 4add rbp,8mov [rbp],raxmov rax,4; 'RA; OPTAV +!add dword[w3C6],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :iA!+  |1084|l'    .  | calls:1 niv:0 len:18 (  --  )w3FD:;---------GEN; TOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C3]; RAadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C6]; CODE; OPTV +movsxd rbx,dword[w3C8]add rax,rbx; !mov rcx,[rbp]mov dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; 4add rbp,8mov [rbp],raxmov rax,4; 'RA; OPTAV +!add dword[w3C6],eaxmov rax,[rbp]sub rbp,8; NOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C4]; DUPadd rbp,8mov [rbp],rax; @movsxd rax,dword [rax]; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; 4; OPTN -sub rax,4; 'NOS; OPTAV !mov dword[w3C4],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :i>B  |1084|l'    .  | calls:1 niv:0 len:13 (  --  )w3FE:;---------GEN; TOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C3]; 'RB; OPTAV !mov dword[w3C7],eaxmov rax,[rbp]sub rbp,8; NOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C4]; DUPadd rbp,8mov [rbp],rax; @movsxd rax,dword [rax]; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; 4; OPTN -sub rax,4; 'NOS; OPTAV !mov dword[w3C4],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :iB>  |1084|l'    .  | calls:1 niv:0 len:10 (  --  )w3FF:;---------GEN; 4add rbp,8mov [rbp],raxmov rax,4; 'NOS; OPTAV +!add dword[w3C4],eaxmov rax,[rbp]sub rbp,8; TOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C3]; NOS; OPTV !movsxd rbx,dword[w3C4]mov dword[rbx],eaxmov rax,[rbp]sub rbp,8; RBadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C7]; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :iB@  |1084|l'    .  | calls:1 niv:0 len:13 (  --  )w400:;---------GEN; 4add rbp,8mov [rbp],raxmov rax,4; 'NOS; OPTAV +!add dword[w3C4],eaxmov rax,[rbp]sub rbp,8; TOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C3]; NOS; OPTV !movsxd rbx,dword[w3C4]mov dword[rbx],eaxmov rax,[rbp]sub rbp,8; RBadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C7]; CODE; OPTV +movsxd rbx,dword[w3C8]add rax,rbx; @movsxd rax,dword [rax]; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :iB!  |1084|l'    .  | calls:1 niv:0 len:15 (  --  )w401:;---------GEN; TOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C3]; RBadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C7]; CODE; OPTV +movsxd rbx,dword[w3C8]add rax,rbx; !mov rcx,[rbp]mov dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; NOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C4]; DUPadd rbp,8mov [rbp],rax; @movsxd rax,dword [rax]; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; 4; OPTN -sub rax,4; 'NOS; OPTAV !mov dword[w3C4],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :iB+  |1084|l'    .  | calls:1 niv:0 len:13 (  --  )w402:;---------GEN; TOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C3]; 'RB; OPTAV +!add dword[w3C7],eaxmov rax,[rbp]sub rbp,8; NOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C4]; DUPadd rbp,8mov [rbp],rax; @movsxd rax,dword [rax]; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; 4; OPTN -sub rax,4; 'NOS; OPTAV !mov dword[w3C4],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :iB@+  |1084|l'    .  | calls:1 niv:0 len:15 (  -- ab )w403:;---------GEN; 4add rbp,8mov [rbp],raxmov rax,4; 'NOS; OPTAV +!add dword[w3C4],eaxmov rax,[rbp]sub rbp,8; TOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C3]; NOS; OPTV !movsxd rbx,dword[w3C4]mov dword[rbx],eaxmov rax,[rbp]sub rbp,8; RBadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C7]; CODE; OPTV +movsxd rbx,dword[w3C8]add rax,rbx; @movsxd rax,dword [rax]; 'TOSadd rbp,8mov [rbp],raxmov rax,w3C3; 4add rbp,8mov [rbp],raxmov rax,4; 'RB; OPTAV +!add dword[w3C7],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :iB!+  |1084|l'    .  | calls:1 niv:0 len:18 (  --  )w404:;---------GEN; TOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C3]; RBadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C7]; CODE; OPTV +movsxd rbx,dword[w3C8]add rax,rbx; !mov rcx,[rbp]mov dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; 4add rbp,8mov [rbp],raxmov rax,4; 'RB; OPTAV +!add dword[w3C7],eaxmov rax,[rbp]sub rbp,8; NOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C4]; DUPadd rbp,8mov [rbp],rax; @movsxd rax,dword [rax]; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; 4; OPTN -sub rax,4; 'NOS; OPTAV !mov dword[w3C4],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :iNOT  |1084|l'    .  | calls:1 niv:0 len:5 (  --  )w405:;---------GEN; TOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C3]; NOTnot rax; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :iNEG  |1084|l'    .  | calls:1 niv:0 len:5 (  --  )w406:;---------GEN; TOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C3]; NEGneg rax; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :iABS  |1084|l'    .  | calls:1 niv:0 len:5 (  --  )w407:;---------GEN; TOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C3]; ABScqoadd rax,rdxxor rax,rdx; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :iSQRT  |1084|l'    .  | calls:1 niv:0 len:5 (  --  )w408:;---------GEN; TOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C3]; SQRTcvtsi2sd xmm0,raxsqrtsd xmm0,xmm0cvtsd2si rax,xmm0; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :iCLZ  |1084|l'    .  | calls:1 niv:0 len:5 (  --  )w409:;---------GEN; TOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C3]; CLZbsr rax,raxxor rax,63; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :iAND  |1084|l'    .  | calls:1 niv:0 len:10 (  --  )w40A:;---------GEN; NOS; OPTV @movsxd rbx,dword[w3C4]add rbp,8mov [rbp],raxmovsxd rax,dword [rbx]; TOS; OPTV ANDmovsxd rbx,dword[w3C3]and rax,rbx; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; -4add rbp,8mov [rbp],raxmov rax,-4; 'NOS; OPTAV +!add dword[w3C4],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :iOR  |1084|l'    .  | calls:1 niv:0 len:10 (  --  )w40B:;---------GEN; NOS; OPTV @movsxd rbx,dword[w3C4]add rbp,8mov [rbp],raxmovsxd rax,dword [rbx]; TOS; OPTV ORmovsxd rbx,dword[w3C3]or rax,rbx; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; -4add rbp,8mov [rbp],raxmov rax,-4; 'NOS; OPTAV +!add dword[w3C4],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :iXOR  |1084|l'    .  | calls:1 niv:0 len:10 (  --  )w40C:;---------GEN; NOS; OPTV @movsxd rbx,dword[w3C4]add rbp,8mov [rbp],raxmovsxd rax,dword [rbx]; TOS; OPTV XORmovsxd rbx,dword[w3C3]xor rax,rbx; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; -4add rbp,8mov [rbp],raxmov rax,-4; 'NOS; OPTAV +!add dword[w3C4],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :i+  |1084|l'    .  | calls:1 niv:0 len:10 (  --  )w40D:;---------GEN; NOS; OPTV @movsxd rbx,dword[w3C4]add rbp,8mov [rbp],raxmovsxd rax,dword [rbx]; TOS; OPTV +movsxd rbx,dword[w3C3]add rax,rbx; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; -4add rbp,8mov [rbp],raxmov rax,-4; 'NOS; OPTAV +!add dword[w3C4],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :i-  |1084|l'    .  | calls:1 niv:0 len:10 (  --  )w40E:;---------GEN; NOS; OPTV @movsxd rbx,dword[w3C4]add rbp,8mov [rbp],raxmovsxd rax,dword [rbx]; TOS; OPTV -movsxd rbx,dword[w3C3]sub rax,rbx; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; -4add rbp,8mov [rbp],raxmov rax,-4; 'NOS; OPTAV +!add dword[w3C4],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :i*  |1084|l'    .  | calls:1 niv:0 len:10 (  --  )w40F:;---------GEN; NOS; OPTV @movsxd rbx,dword[w3C4]add rbp,8mov [rbp],raxmovsxd rax,dword [rbx]; TOS; OPTV *movsxd rbx,dword[w3C3]imul rax,rbx; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; -4add rbp,8mov [rbp],raxmov rax,-4; 'NOS; OPTAV +!add dword[w3C4],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :i/  |1084|l'    .  | calls:1 niv:0 len:10 (  --  )w410:;---------GEN; NOS; OPTV @movsxd rbx,dword[w3C4]add rbp,8mov [rbp],raxmovsxd rax,dword [rbx]; TOS; OPTV /movsxd rbx,dword[w3C3]cqoidiv rbx; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; -4add rbp,8mov [rbp],raxmov rax,-4; 'NOS; OPTAV +!add dword[w3C4],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :iMOD  |1084|l'    .  | calls:1 niv:0 len:10 (  --  )w411:;---------GEN; NOS; OPTV @movsxd rbx,dword[w3C4]add rbp,8mov [rbp],raxmovsxd rax,dword [rbx]; TOS; OPTV MODmovsxd rbx,dword[w3C3]cqoidiv rbxmov rax,rdx; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; -4add rbp,8mov [rbp],raxmov rax,-4; 'NOS; OPTAV +!add dword[w3C4],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :i<<  |1084|l'    .  | calls:1 niv:0 len:10 (  --  )w412:;---------GEN; NOS; OPTV @movsxd rbx,dword[w3C4]add rbp,8mov [rbp],raxmovsxd rax,dword [rbx]; TOS; OPTV <<mov ecx,dword[w3C3]shl rax,cl; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; -4add rbp,8mov [rbp],raxmov rax,-4; 'NOS; OPTAV +!add dword[w3C4],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :i>>  |1084|l'    .  | calls:1 niv:0 len:10 (  --  )w413:;---------GEN; NOS; OPTV @movsxd rbx,dword[w3C4]add rbp,8mov [rbp],raxmovsxd rax,dword [rbx]; TOS; OPTV >>mov ecx,dword[w3C3]sar rax,cl; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; -4add rbp,8mov [rbp],raxmov rax,-4; 'NOS; OPTAV +!add dword[w3C4],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :i>>>  |1084|l'    .  | calls:1 niv:0 len:10 (  --  )w414:;---------GEN; NOS; OPTV @movsxd rbx,dword[w3C4]add rbp,8mov [rbp],raxmovsxd rax,dword [rbx]; TOS; OPTV >>>mov ecx,dword[w3C3]shr rax,cl; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; -4add rbp,8mov [rbp],raxmov rax,-4; 'NOS; OPTAV +!add dword[w3C4],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :i/MOD  |1084|l'    .  | calls:1 niv:0 len:9 (  --  )w415:;---------GEN; NOS; OPTV @movsxd rbx,dword[w3C4]add rbp,8mov [rbp],raxmovsxd rax,dword [rbx]; TOS; OPTV /MODmovsxd rbx,dword[w3C3]cqoidiv rbxadd ebp,8mov [rbp],raxmov rax,rdx; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; NOS; OPTV !movsxd rbx,dword[w3C4]mov dword[rbx],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :i*/  |1084|l'    .  | calls:1 niv:0 len:15 (  --  )w416:;---------GEN; NOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C4]; DUPadd rbp,8mov [rbp],rax; 4; OPTN -sub rax,4; @movsxd rax,dword [rax]; SWAPxchg rax,[rbp]; @movsxd rax,dword [rax]; TOS; OPTV */movsxd rbx,dword[w3C3]cqoimul qword[rbp]idiv rbxsub rbp,8; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; -8add rbp,8mov [rbp],raxmov rax,-8; 'NOS; OPTAV +!add dword[w3C4],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :i*>>  |1084|l'    .  | calls:1 niv:0 len:15 (  --  )w417:;---------GEN; NOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C4]; DUPadd rbp,8mov [rbp],rax; 4; OPTN -sub rax,4; @movsxd rax,dword [rax]; SWAPxchg rax,[rbp]; @movsxd rax,dword [rax]; TOS; OPTV *>>mov ecx,dword[w3C3]cqoimul qword[rbp]sub rbp,8shrd rax,rdx,clsar rdx,cland ecx,64cmovne rax,rdx; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; -8add rbp,8mov [rbp],raxmov rax,-8; 'NOS; OPTAV +!add dword[w3C4],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :i<</  |1084|l'    .  | calls:1 niv:0 len:15 (  --  )w418:;---------GEN; NOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C4]; DUPadd rbp,8mov [rbp],rax; 4; OPTN -sub rax,4; @movsxd rax,dword [rax]; SWAPxchg rax,[rbp]; @movsxd rax,dword [rax]; TOS; OPTV <</mov ecx,dword[w3C3]mov rbx,raxmov rax,[rbp]sub rbp,8cqoshld rdx,rax,clshl rax,clidiv rbx; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; -8add rbp,8mov [rbp],raxmov rax,-8; 'NOS; OPTAV +!add dword[w3C4],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :iMOV  |1084|l'    .  | calls:1 niv:0 len:21 (  --  )w419:;---------GEN; NOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C4]; DUPadd rbp,8mov [rbp],rax; 4; OPTN -sub rax,4; @movsxd rax,dword [rax]; SWAPxchg rax,[rbp]; @movsxd rax,dword [rax]; TOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C3]; MOVEmov rcx,raxmovsxd rsi,dword[rbp]movsxd rdi,dword[rbp-8]rep movsdmov rax,[rbp-8*2]sub rbp,8*3; NOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C4]; DUPadd rbp,8mov [rbp],rax; 8; OPTN -sub rax,8; @movsxd rax,dword [rax]; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; 12; OPTN -sub rax,12; 'NOS; OPTAV !mov dword[w3C4],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :iMOV>  |1084|l'    .  | calls:1 niv:0 len:21 (  --  )w41A:;---------GEN; NOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C4]; DUPadd rbp,8mov [rbp],rax; 4; OPTN -sub rax,4; @movsxd rax,dword [rax]; SWAPxchg rax,[rbp]; @movsxd rax,dword [rax]; TOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C3]; MOVE>mov rcx,raxmovsxd rsi,dword[rbp]movsxd rdi,dword[rbp-8]lea rsi,[rsi+rcx*4-4]lea rdi,[rdi+rcx*4-4]stdrep movsdcldmov rax,[rbp-8*2]sub rbp,8*3; NOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C4]; DUPadd rbp,8mov [rbp],rax; 8; OPTN -sub rax,8; @movsxd rax,dword [rax]; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; 12; OPTN -sub rax,12; 'NOS; OPTAV !mov dword[w3C4],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :iFILL  |1084|l'    .  | calls:1 niv:0 len:21 (  --  )w41B:;---------GEN; NOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C4]; DUPadd rbp,8mov [rbp],rax; 4; OPTN -sub rax,4; @movsxd rax,dword [rax]; SWAPxchg rax,[rbp]; @movsxd rax,dword [rax]; TOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C3]; FILLmov rcx,raxmovsxd rax,dword[rbp]movsxd rdi,dword[rbp-8]rep stosdmov rax,[rbp-8*2]sub rbp,8*3; NOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C4]; DUPadd rbp,8mov [rbp],rax; 8; OPTN -sub rax,8; @movsxd rax,dword [rax]; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; 12; OPTN -sub rax,12; 'NOS; OPTAV !mov dword[w3C4],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :iCMOV  |1084|l'    .  | calls:1 niv:0 len:21 (  --  )w41C:;---------GEN; NOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C4]; DUPadd rbp,8mov [rbp],rax; 4; OPTN -sub rax,4; @movsxd rax,dword [rax]; SWAPxchg rax,[rbp]; @movsxd rax,dword [rax]; TOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C3]; CMOVEmov rcx,raxmovsxd rsi,dword[rbp]movsxd rdi,dword[rbp-8]rep movsbmov rax,[rbp-8*2]sub rbp,8*3; NOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C4]; DUPadd rbp,8mov [rbp],rax; 8; OPTN -sub rax,8; @movsxd rax,dword [rax]; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; 12; OPTN -sub rax,12; 'NOS; OPTAV !mov dword[w3C4],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :iCMOV>  |1084|l'    .  | calls:1 niv:0 len:21 (  --  )w41D:;---------GEN; NOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C4]; DUPadd rbp,8mov [rbp],rax; 4; OPTN -sub rax,4; @movsxd rax,dword [rax]; SWAPxchg rax,[rbp]; @movsxd rax,dword [rax]; TOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C3]; CMOVE>mov rcx,raxmovsxd rsi,dword[rbp]movsxd rdi,dword[rbp-8]lea rsi,[rsi+rcx-1]lea rdi,[rdi+rcx-1]stdrep movsbcldmov rax,[rbp-8*2]sub rbp,8*3; NOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C4]; DUPadd rbp,8mov [rbp],rax; 8; OPTN -sub rax,8; @movsxd rax,dword [rax]; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; 12; OPTN -sub rax,12; 'NOS; OPTAV !mov dword[w3C4],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :iCFILL  |1084|l'    .  | calls:1 niv:0 len:21 (  --  )w41E:;---------GEN; NOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C4]; DUPadd rbp,8mov [rbp],rax; 4; OPTN -sub rax,4; @movsxd rax,dword [rax]; SWAPxchg rax,[rbp]; @movsxd rax,dword [rax]; TOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C3]; CFILLmov rcx,raxmovsxd rax,dword[rbp]movsxd rdi,dword[rbp-8]rep stosbmov rax,[rbp-8*2]sub rbp,8*3; NOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C4]; DUPadd rbp,8mov [rbp],rax; 8; OPTN -sub rax,8; @movsxd rax,dword [rax]; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; 12; OPTN -sub rax,12; 'NOS; OPTAV !mov dword[w3C4],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :iLIT1  |1084|l'    .  | calls:1 niv:0 len:16 ( a -- b )w41F:;---------GEN; 4add rbp,8mov [rbp],raxmov rax,4; 'NOS; OPTAV +!add dword[w3C4],eaxmov rax,[rbp]sub rbp,8; TOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C3]; NOS; OPTV !movsxd rbx,dword[w3C4]mov dword[rbx],eaxmov rax,[rbp]sub rbp,8; @+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; 48; OPTN <<shl rax,48; 48; OPTN >>sar rax,48; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; 2; OPTN -sub rax,2; ;ret;--------------------------; :iLIT2  |1084|l'    .  | calls:1 niv:0 len:10 ( a -- b )w420:;---------GEN; 4add rbp,8mov [rbp],raxmov rax,4; 'NOS; OPTAV +!add dword[w3C4],eaxmov rax,[rbp]sub rbp,8; TOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C3]; NOS; OPTV !movsxd rbx,dword[w3C4]mov dword[rbx],eaxmov rax,[rbp]sub rbp,8; @+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :iLITs  |1084|l'    .  | calls:1 niv:0 len:14 ( a -- b )w421:;---------GEN; 4add rbp,8mov [rbp],raxmov rax,4; 'NOS; OPTAV +!add dword[w3C4],eaxmov rax,[rbp]sub rbp,8; TOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C3]; NOS; OPTV !movsxd rbx,dword[w3C4]mov dword[rbx],eaxmov rax,[rbp]sub rbp,8; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; $ff; OPTN ANDand rax,255; +add rax,[rbp]sub rbp,8; ;ret;--------------------------; :iCOM  |1001094|l' ;  .  | calls:1 niv:1 len:18 ( a -- b )w422:;---------GEN; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; -1; OPTN =?cmp rax,-1jne _o19F; (; DROPmov rax,[rbp]sub rbp,8; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 2; OPTN <<shl rax,2; exsys; OPTV +movsxd rbx,dword[w3CA]add rax,rbx; @movsxd rax,dword [rax]; EXmov rcx,raxmov rax,[rbp]sub rbp,8jmp rcx; ;; )_o19F:; $ff; OPTN ANDand rax,255; +add rax,[rbp]sub rbp,8; ;ret;--------------------------; :iJMPR  |1084|l'    .  | calls:1 niv:0 len:7 ( ab -- c )w423:;---------GEN; @movsxd rax,dword [rax]; 48; OPTN <<shl rax,48; 48; OPTN >>sar rax,48; +add rax,[rbp]sub rbp,8; ;ret;--------------------------; :iJMP  |1084|l'    .  | calls:1 niv:0 len:4 ( a -- b )w424:;---------GEN; @movsxd rax,dword [rax]; CODE; OPTV +movsxd rbx,dword[w3C8]add rax,rbx; ;ret;--------------------------; :iCALL  |1084|l'    .  | calls:1 niv:0 len:10 ( a -- b )w425:;---------GEN; @+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; CODE; OPTV +movsxd rbx,dword[w3C8]add rax,rbx; SWAPxchg rax,[rbp]; -4add rbp,8mov [rbp],raxmov rax,-4; 'RTOS; OPTAV +!add dword[w3C5],eaxmov rax,[rbp]sub rbp,8; RTOS; OPTV !movsxd rbx,dword[w3C5]mov dword[rbx],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :iADR  |1084|l'    .  | calls:1 niv:0 len:10 ( a -- b )w426:;---------GEN; 4add rbp,8mov [rbp],raxmov rax,4; 'NOS; OPTAV +!add dword[w3C4],eaxmov rax,[rbp]sub rbp,8; TOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C3]; NOS; OPTV !movsxd rbx,dword[w3C4]mov dword[rbx],eaxmov rax,[rbp]sub rbp,8; @+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :iVAR  |1084|l'    .  | calls:1 niv:0 len:13 ( a -- b )w427:;---------GEN; 4add rbp,8mov [rbp],raxmov rax,4; 'NOS; OPTAV +!add dword[w3C4],eaxmov rax,[rbp]sub rbp,8; TOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C3]; NOS; OPTV !movsxd rbx,dword[w3C4]mov dword[rbx],eaxmov rax,[rbp]sub rbp,8; @+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; CODE; OPTV +movsxd rbx,dword[w3C8]add rax,rbx; @movsxd rax,dword [rax]; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :exlit  |1080|l     .  | calls:1 niv:0 len:13 ( a --  )w429:;---------GEN; 4add rbp,8mov [rbp],raxmov rax,4; 'NOS; OPTAV +!add dword[w3C4],eaxmov rax,[rbp]sub rbp,8; TOSadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C3]; NOS; OPTV !movsxd rbx,dword[w3C4]mov dword[rbx],eaxmov rax,[rbp]sub rbp,8; 57; OPTN <<shl rax,57; 57; OPTN >>sar rax,57; 'TOS; OPTAV !mov dword[w3C3],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :vmstep  |7001092|e  ;  .  | calls:1 niv:7 len:18 ( a -- b )w42A:;---------GEN; 0?or rax,raxjnz _o1A0; (; ;ret; )_o1A0:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; $80; OPTN and?test rax,128jz _o1A1; (; exlitjmp w429; ;; )_o1A1:; 2; OPTN <<shl rax,2; 'r3maci; OPTAV +add rax,w428; @movsxd rax,dword [rax]; EXmov rcx,raxmov rax,[rbp]sub rbp,8jmp rcx; ;;--------------------------; :vmreset  |1002|e        | calls:1 niv:0 len:17 (  --  )w42C:;---------GEN; CODEadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C8]; 4; OPTN -sub rax,4; 'NOS; OPTAV !mov dword[w3C4],eaxmov rax,[rbp]sub rbp,8; 0mov dword[w3C3],0; CODEadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C8]; 252; OPTN +add rax,252; 0add rbp,8mov [rbp],raxxor rax,rax; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; !mov rcx,[rbp]mov dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; 'RTOS; OPTAV !mov dword[w3C5],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :vmcpu  |1001482|e     . I| calls:1 niv:1 len:21 ( a -- b )w434:;---------GEN; hereadd rbp,8mov [rbp],raxmovsxd rax,dword[w14A]; $20 ; calcadd rbp,8mov [rbp],raxmov rax,32; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; +add rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 'CODE; OPTAV !mov dword[w3C8],eaxmov rax,[rbp]sub rbp,8; 256; OPTN +add rax,256; DUPadd rbp,8mov [rbp],rax; 'CODE>; OPTAV !mov dword[w3C9],eaxmov rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; +add rax,[rbp]sub rbp,8; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 'IPadd rbp,8mov [rbp],raxmov rax,w3C2; 8add rbp,8mov [rbp],raxmov rax,8; MOVEmov rcx,raxmovsxd rsi,dword[rbp]movsxd rdi,dword[rbp-8]rep movsdmov rax,[rbp-8*2]sub rbp,8*3; ;ret;--------------------------; :word2code  |1003492|e  ;  . I| calls:3 niv:1 len:29 ( a -- b )w443:;---------GEN; 5add rbp,8mov [rbp],raxmov rax,5; 0add rbp,8mov [rbp],raxxor rax,rax; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; (_i1A2:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; $ff; OPTN ANDand rax,255; 32; OPTN >?cmp rax,32jle _o1A2; $1f; OPTN -sub rax,31; DUPadd rbp,8mov [rbp],rax; $40; OPTN ANDand rax,64; 1; OPTN >>sar rax,1; ORor rax,[rbp]sub rbp,8; $3f; OPTN ANDand rax,63; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; 6; OPTN <<shl rax,6; ORor rax,[rbp]sub rbp,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; 1; OPTN -sub rax,1; 0?or rax,raxjnz _o1A3; (; DROPmov rax,[rbp]sub rbp,8; NIPsub rbp,8; ;ret; )_o1A3:; SWAPxchg rax,[rbp]; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; )jmp _i1A2_o1A2:; 2DROPmov rax,[rbp-8]sub rbp,8*2; NIPsub rbp,8; ;ret;--------------------------; :tokenext  |1092|e  ;  .  | calls:1 niv:0 len:22 ( ab -- c )w44A:;---------GEN; $80; OPTN and?test rax,128jz _o1A4; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o1A4:; 27; OPTN >?cmp rax,27jle _o1A5; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o1A5:; 'tsum; OPTAV +add rax,w449; C@movsx rax,byte [rax]; -?or rax,raxjns _o1A6; (; DROPmov rax,[rbp]sub rbp,8; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; )_o1A6:; +add rax,[rbp]sub rbp,8; ;ret;--------------------------; :?dicc  |2002090|l  ;  .  | calls:2 niv:2 len:23 ( ab -- c )w44C:;---------GEN; SWAPxchg rax,[rbp]; word2codecall w443; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; (_i1A7:; @+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o1A7; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; =?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjne _o1A8; (; DROPmov rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; -neg raxadd rax,[rbp]sub rbp,8; 2; OPTN >>sar rax,2; NIPsub rbp,8; NIPsub rbp,8; ;ret; )_o1A8:; DROPmov rax,[rbp]sub rbp,8; )jmp _i1A7_o1A7:; 4DROPmov rax,[rbp-8*3]sub rbp,8*4; 0add rbp,8mov [rbp],raxxor rax,rax; ;ret;--------------------------; :?word  |2002090|l  ;  .  | calls:2 niv:2 len:32 ( a -- b )w44F:;---------GEN; word2codecall w443; lastdicc>add rbp,8mov [rbp],raxmovsxd rax,dword[w437]; (_i1A9:; DUPadd rbp,8mov [rbp],rax; @movsxd rax,dword [rax]; $3fffffff; OPTN ANDand rax,1073741823; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; =?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjne _o1AA; (; DROPmov rax,[rbp]sub rbp,8; NIPsub rbp,8; ;ret; )_o1AA:; DROPmov rax,[rbp]sub rbp,8; CODEadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C8]; 256; OPTN +add rax,256; >?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjle _o1A9; DUPadd rbp,8mov [rbp],rax; 4; OPTN +add rax,4; @movsxd rax,dword [rax]; 16; OPTN >>>shr rax,16; 8; OPTN +add rax,8; -neg raxadd rax,[rbp]sub rbp,8; )jmp _i1A9_o1A9:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 0add rbp,8mov [rbp],raxxor rax,rax; ;ret;--------------------------; :patchend  |1002480|l     . I| calls:2 niv:1 len:34 (  --  )w45A:;---------GEN; lastdicc>add rbp,8mov [rbp],raxmovsxd rax,dword[w437]; DUPadd rbp,8mov [rbp],rax; @movsxd rax,dword [rax]; flagdata; OPTV ORmovsxd rbx,dword[w450]or rax,rbx; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; !mov rcx,[rbp]mov dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; icode>add rbp,8mov [rbp],raxmovsxd rax,dword[w436]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; -neg raxadd rax,[rbp]sub rbp,8; 8; OPTN -sub rax,8; 0?or rax,raxjnz _o1AB; (; 4; OPTN +add rax,4; 0add rbp,8mov [rbp],raxxor rax,rax; icode>; OPTV !+movsxd rbx,dword[w436]mov dword[rbx],eaxadd rbx,4mov rax,rbx; 'icode>; OPTAV !mov dword[w436],eaxmov rax,[rbp]sub rbp,8; )_o1AB:; SWAPxchg rax,[rbp]; 4; OPTN +add rax,4; DUPadd rbp,8mov [rbp],rax; @movsxd rax,dword [rax]; $ffff0000; OPTN ANDmov rbx,4294901760and rax,rbx; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; ORor rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; !mov rcx,[rbp]mov dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; icode>add rbp,8mov [rbp],raxmovsxd rax,dword[w436]; 'CODE>; OPTAV !mov dword[w3C9],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :endef  |2001090|l  ;  .  | calls:1 niv:2 len:23 (  --  )w45B:;---------GEN; tleveladd rbp,8mov [rbp],raxmovsxd rax,dword[w439]; 1?or rax,raxjz _o1AC; (; 'msgnoblkadd rbp,8mov [rbp],raxmov rax,w43D; 'error; OPTAV !mov dword[w43A],eaxmov rax,[rbp]sub rbp,8; )_o1AC:; DROPmov rax,[rbp]sub rbp,8; 'blkadd rbp,8mov [rbp],raxmov rax,w451; 'blk>; OPTAV !mov dword[w452],eaxmov rax,[rbp]sub rbp,8; 0mov dword[w439],0; stateadd rbp,8mov [rbp],raxmovsxd rax,dword[w438]; 0?or rax,raxjnz _o1AD; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o1AD:; DROPmov rax,[rbp]sub rbp,8; patchendjmp w45A; ;;--------------------------; :newentry  |2002080|l     .  | calls:2 niv:2 len:21 ( a -- bcd )w45C:;---------GEN; endefcall w45B; icode>add rbp,8mov [rbp],raxmovsxd rax,dword[w436]; lastdicc>; OPTV -movsxd rbx,dword[w437]sub rax,rbx; 8; OPTN -sub rax,8; -?or rax,raxjns _o1AE; (; 0add rbp,8mov [rbp],raxxor rax,rax; NIPsub rbp,8; )_o1AE:; 16; OPTN <<shl rax,16; icode>add rbp,8mov [rbp],raxmovsxd rax,dword[w436]; 'lastdicc>; OPTAV !mov dword[w437],eaxmov rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 1; OPTN +add rax,1; word2codejmp w443; ;;--------------------------; :.var  |2001480|l     . I| calls:1 niv:2 len:21 (  --  )w45E:;---------GEN; newentrycall w45C; icode>; OPTV !+movsxd rbx,dword[w436]mov dword[rbx],eaxadd rbx,4mov rax,rbx; 'icode>; OPTAV !mov dword[w436],eaxmov rax,[rbp]sub rbp,8; icode>; OPTV !+movsxd rbx,dword[w436]mov dword[rbx],eaxadd rbx,4mov rax,rbx; 'icode>; OPTAV !mov dword[w436],eaxmov rax,[rbp]sub rbp,8; 2mov dword[w438],2; (_i1AF:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; $ff; OPTN ANDand rax,255; 32; OPTN >?cmp rax,32jle _o1AF; DROPmov rax,[rbp]sub rbp,8; )jmp _i1AF_o1AF:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; $40000000mov dword[w450],1073741824; trimcall w143; "* "add rbp,8mov [rbp],raxmov rax,str2016F; =precall w134; 1?or rax,raxjz _o1B0; (; $c0000000mov rbx,3221225472mov dword[w450],ebx; )_o1B0:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :.lit  |1001490|l  ;  . I| calls:1 niv:1 len:41 (  --  )w45F:;---------GEN; stateadd rbp,8mov [rbp],raxmovsxd rax,dword[w438]; 2; OPTN =?cmp rax,2jne _o1B1; (; DROPmov rax,[rbp]sub rbp,8; str>anrocall w337; icode>; OPTV !+movsxd rbx,dword[w436]mov dword[rbx],eaxadd rbx,4mov rax,rbx; 'icode>; OPTAV !mov dword[w436],eaxmov rax,[rbp]sub rbp,8; ;ret; )_o1B1:; DROPmov rax,[rbp]sub rbp,8; str>anrocall w337; DUPadd rbp,8mov [rbp],rax; 57; OPTN <<shl rax,57; 57; OPTN >>sar rax,57; =?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjne _o1B2; (; $7f; OPTN ANDand rax,127; $80; OPTN ORor rax,128; icode>; OPTV C!+movsxd rbx,dword[w436]mov byte[rbx],aladd rbx,1mov rax,rbx; 'icode>; OPTAV !mov dword[w436],eaxmov rax,[rbp]sub rbp,8; ;ret; )_o1B2:; DUPadd rbp,8mov [rbp],rax; 48; OPTN <<shl rax,48; 48; OPTN >>sar rax,48; =?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjne _o1B3; (; 0add rbp,8mov [rbp],raxxor rax,rax; icode>; OPTV C!+movsxd rbx,dword[w436]mov byte[rbx],aladd rbx,1mov rax,rbx; 'icode>; OPTAV !mov dword[w436],eaxmov rax,[rbp]sub rbp,8; icode>; OPTV !+movsxd rbx,dword[w436]mov dword[rbx],eaxadd rbx,4mov rax,rbx; 2; OPTN -sub rax,2; 'icode>; OPTAV !mov dword[w436],eaxmov rax,[rbp]sub rbp,8; ;ret; )_o1B3:; 1add rbp,8mov [rbp],raxmov rax,1; icode>; OPTV C!+movsxd rbx,dword[w436]mov byte[rbx],aladd rbx,1mov rax,rbx; 'icode>; OPTAV !mov dword[w436],eaxmov rax,[rbp]sub rbp,8; icode>; OPTV !+movsxd rbx,dword[w436]mov dword[rbx],eaxadd rbx,4mov rax,rbx; 'icode>; OPTAV !mov dword[w436],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :,cpystr  |1002490|l  ;  . I| calls:2 niv:1 len:25 ( a -- b )w460:;---------GEN; 1; OPTN +add rax,1; (_i1B4:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o1B4; 34; OPTN =?cmp rax,34jne _o1B5; (; DROPmov rax,[rbp]sub rbp,8; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 34; OPTN <>?cmp rax,34je _o1B6; (; DROPmov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; ;ret; )_o1B6:; )_o1B5:; icode>; OPTV C!+movsxd rbx,dword[w436]mov byte[rbx],aladd rbx,1mov rax,rbx; 'icode>; OPTAV !mov dword[w436],eaxmov rax,[rbp]sub rbp,8; )jmp _i1B4_o1B4:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; ;ret;--------------------------; :.str  |1001490|l  ;  . I| calls:1 niv:1 len:28 ( a --  )w461:;---------GEN; stateadd rbp,8mov [rbp],raxmovsxd rax,dword[w438]; 2; OPTN =?cmp rax,2jne _o1B7; (; DROPmov rax,[rbp]sub rbp,8; ,cpystrcall w460; 0add rbp,8mov [rbp],raxxor rax,rax; icode>; OPTV C!+movsxd rbx,dword[w436]mov byte[rbx],aladd rbx,1mov rax,rbx; 'icode>; OPTAV !mov dword[w436],eaxmov rax,[rbp]sub rbp,8; icode>; OPTV !+movsxd rbx,dword[w436]mov dword[rbx],eaxadd rbx,4mov rax,rbx; 'icode>; OPTAV !mov dword[w436],eaxmov rax,[rbp]sub rbp,8; ;ret; )_o1B7:; DROPmov rax,[rbp]sub rbp,8; 2add rbp,8mov [rbp],raxmov rax,2; icode>; OPTV C!+movsxd rbx,dword[w436]mov byte[rbx],aladd rbx,1mov rax,rbx; 'icode>; OPTAV !mov dword[w436],eaxmov rax,[rbp]sub rbp,8; icode>add rbp,8mov [rbp],raxmovsxd rax,dword[w436]; SWAPxchg rax,[rbp]; 0add rbp,8mov [rbp],raxxor rax,rax; icode>; OPTV C!+movsxd rbx,dword[w436]mov byte[rbx],aladd rbx,1mov rax,rbx; 'icode>; OPTAV !mov dword[w436],eaxmov rax,[rbp]sub rbp,8; ,cpystrcall w460; 0add rbp,8mov [rbp],raxxor rax,rax; icode>; OPTV C!+movsxd rbx,dword[w436]mov byte[rbx],aladd rbx,1mov rax,rbx; 'icode>; OPTAV !mov dword[w436],eaxmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; icode>add rbp,8mov [rbp],raxmovsxd rax,dword[w436]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; -neg raxadd rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; ;ret;--------------------------; :.word  |1001490|l  ;  . I| calls:1 niv:1 len:37 ( a --  )w462:;---------GEN; stateadd rbp,8mov [rbp],raxmovsxd rax,dword[w438]; 2; OPTN =?cmp rax,2jne _o1B8; (; DROPmov rax,[rbp]sub rbp,8; 8; OPTN +add rax,8; icode>; OPTV !+movsxd rbx,dword[w436]mov dword[rbx],eaxadd rbx,4mov rax,rbx; 'icode>; OPTAV !mov dword[w436],eaxmov rax,[rbp]sub rbp,8; ;ret; )_o1B8:; DROPmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; @movsxd rax,dword [rax]; $c0000000; OPTN and?mov rbx,3221225472test rax,rbxjz _o1B9; (; DROPmov rax,[rbp]sub rbp,8; 8add rbp,8mov [rbp],raxmov rax,8; icode>; OPTV C!+movsxd rbx,dword[w436]mov byte[rbx],aladd rbx,1mov rax,rbx; 'icode>; OPTAV !mov dword[w436],eaxmov rax,[rbp]sub rbp,8; 8; OPTN +add rax,8; CODE; OPTV -movsxd rbx,dword[w3C8]sub rax,rbx; icode>; OPTV !+movsxd rbx,dword[w436]mov dword[rbx],eaxadd rbx,4mov rax,rbx; 'icode>; OPTAV !mov dword[w436],eaxmov rax,[rbp]sub rbp,8; (_i1BA:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; $ff; OPTN ANDand rax,255; 32; OPTN >?cmp rax,32jle _o1BA; DROPmov rax,[rbp]sub rbp,8; )jmp _i1BA_o1BA:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; ;ret; )_o1B9:; DROPmov rax,[rbp]sub rbp,8; 6add rbp,8mov [rbp],raxmov rax,6; icode>; OPTV C!+movsxd rbx,dword[w436]mov byte[rbx],aladd rbx,1mov rax,rbx; 'icode>; OPTAV !mov dword[w436],eaxmov rax,[rbp]sub rbp,8; 8; OPTN +add rax,8; CODE; OPTV -movsxd rbx,dword[w3C8]sub rax,rbx; icode>; OPTV !+movsxd rbx,dword[w436]mov dword[rbx],eaxadd rbx,4mov rax,rbx; 'icode>; OPTAV !mov dword[w436],eaxmov rax,[rbp]sub rbp,8; (_i1BB:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; $ff; OPTN ANDand rax,255; 32; OPTN >?cmp rax,32jle _o1BB; DROPmov rax,[rbp]sub rbp,8; )jmp _i1BB_o1BB:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; ;ret;--------------------------; :.adr  |1001490|l  ;  . I| calls:1 niv:1 len:22 ( a --  )w463:;---------GEN; stateadd rbp,8mov [rbp],raxmovsxd rax,dword[w438]; 2; OPTN =?cmp rax,2jne _o1BC; (; DROPmov rax,[rbp]sub rbp,8; 8; OPTN +add rax,8; CODE; OPTV -movsxd rbx,dword[w3C8]sub rax,rbx; icode>; OPTV !+movsxd rbx,dword[w436]mov dword[rbx],eaxadd rbx,4mov rax,rbx; 'icode>; OPTAV !mov dword[w436],eaxmov rax,[rbp]sub rbp,8; ;ret; )_o1BC:; DROPmov rax,[rbp]sub rbp,8; 7add rbp,8mov [rbp],raxmov rax,7; icode>; OPTV C!+movsxd rbx,dword[w436]mov byte[rbx],aladd rbx,1mov rax,rbx; 'icode>; OPTAV !mov dword[w436],eaxmov rax,[rbp]sub rbp,8; 8; OPTN +add rax,8; CODE; OPTV -movsxd rbx,dword[w3C8]sub rax,rbx; icode>; OPTV !+movsxd rbx,dword[w436]mov dword[rbx],eaxadd rbx,4mov rax,rbx; 'icode>; OPTAV !mov dword[w436],eaxmov rax,[rbp]sub rbp,8; (_i1BD:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; $ff; OPTN ANDand rax,255; 32; OPTN >?cmp rax,32jle _o1BD; DROPmov rax,[rbp]sub rbp,8; )jmp _i1BD_o1BD:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; ;ret;--------------------------; :core;  |2001090|l  ;  .  | calls:1 niv:2 len:26 (  --  )w464:;---------GEN; icode>add rbp,8mov [rbp],raxmovsxd rax,dword[w436]; 6; OPTN -sub rax,6; C@movsx rax,byte [rax]; 6; OPTN =?cmp rax,6jne _o1BE; (; 5add rbp,8mov [rbp],raxmov rax,5; icode>add rbp,8mov [rbp],raxmovsxd rax,dword[w436]; 6; OPTN -sub rax,6; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; )_o1BE:; DROPmov rax,[rbp]sub rbp,8; tleveladd rbp,8mov [rbp],raxmovsxd rax,dword[w439]; 1?or rax,raxjz _o1BF; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o1BF:; DROPmov rax,[rbp]sub rbp,8; 0mov dword[w438],0; patchendjmp w45A; ;;--------------------------; :cond??  |1001490|l  ;  . I| calls:1 niv:1 len:27 ( ab -- cd )w467:;---------GEN; 15; OPTN <?cmp rax,15jge _o1C0; (; ;ret; )_o1C0:; 27; OPTN >?cmp rax,27jle _o1C1; (; ;ret; )_o1C1:; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; @movsxd rax,dword [rax]; 48; OPTN <<shl rax,48; 48; OPTN >>sar rax,48; 1?or rax,raxjz _o1C2; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o1C2:; DROPmov rax,[rbp]sub rbp,8; icode>add rbp,8mov [rbp],raxmovsxd rax,dword[w436]; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; -neg raxadd rax,[rbp]sub rbp,8; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 8; OPTN >>sar rax,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; C!+mov rcx,[rbp]mov byte[rax],cladd rax,1sub rbp,8; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; 1mov dword[w465],1; ;ret;--------------------------; :core)  |1001490|l  ;  . I| calls:1 niv:1 len:40 (  --  )w468:;---------GEN; -1add rbp,8mov [rbp],raxmov rax,-1; 'tlevel; OPTAV +!add dword[w439],eaxmov rax,[rbp]sub rbp,8; 0mov dword[w465],0; -4add rbp,8mov [rbp],raxmov rax,-4; 'blk>; OPTAV +!add dword[w452],eaxmov rax,[rbp]sub rbp,8; blk>; OPTV @movsxd rbx,dword[w452]add rbp,8mov [rbp],raxmovsxd rax,dword [rbx]; DUPadd rbp,8mov [rbp],rax; (_i1C3:; icode>; OPTV <?cmp eax,dword[w436]jge _o1C3; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; cond??call w467; tokenextcall w44A; )jmp _i1C3_o1C3:; DROPmov rax,[rbp]sub rbp,8; iswhileadd rbp,8mov [rbp],raxmovsxd rax,dword[w465]; 1?or rax,raxjz _o1C4; (; DROPmov rax,[rbp]sub rbp,8; icode>; OPTV -movsxd rbx,dword[w436]sub rax,rbx; 2; OPTN -sub rax,2; icode>; OPTV !+movsxd rbx,dword[w436]mov dword[rbx],eaxadd rbx,4mov rax,rbx; 2; OPTN -sub rax,2; 'icode>; OPTAV !mov dword[w436],eaxmov rax,[rbp]sub rbp,8; ;ret; )_o1C4:; DROPmov rax,[rbp]sub rbp,8; 0add rbp,8mov [rbp],raxxor rax,rax; icode>; OPTV !+movsxd rbx,dword[w436]mov dword[rbx],eaxadd rbx,4mov rax,rbx; 2; OPTN -sub rax,2; 'icode>; OPTAV !mov dword[w436],eaxmov rax,[rbp]sub rbp,8; 3; OPTN -sub rax,3; icode>add rbp,8mov [rbp],raxmovsxd rax,dword[w436]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; -neg raxadd rax,[rbp]sub rbp,8; 2; OPTN -sub rax,2; SWAPxchg rax,[rbp]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 8; OPTN >>sar rax,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; C!+mov rcx,[rbp]mov byte[rax],cladd rax,1sub rbp,8; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; ;ret;--------------------------; :core]  |1001480|l     . I| calls:1 niv:1 len:14 (  --  )w46A:;---------GEN; -1add rbp,8mov [rbp],raxmov rax,-1; 'tlevel; OPTAV +!add dword[w439],eaxmov rax,[rbp]sub rbp,8; -4add rbp,8mov [rbp],raxmov rax,-4; 'blk>; OPTAV +!add dword[w452],eaxmov rax,[rbp]sub rbp,8; blk>; OPTV @movsxd rbx,dword[w452]add rbp,8mov [rbp],raxmovsxd rax,dword [rbx]; icode>add rbp,8mov [rbp],raxmovsxd rax,dword[w436]; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; -neg raxadd rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; icode>; OPTV !+movsxd rbx,dword[w436]mov dword[rbx],eaxadd rbx,4mov rax,rbx; 2; OPTN -sub rax,2; 'icode>; OPTAV !mov dword[w436],eaxmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; 4; OPTN -sub rax,4; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 8; OPTN >>sar rax,8; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; C!+mov rcx,[rbp]mov byte[rax],cladd rax,1sub rbp,8; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; ;ret;--------------------------; :.core  |1001490|l  ;  . I| calls:1 niv:1 len:76 ( a -- b )w46B:;---------GEN; stateadd rbp,8mov [rbp],raxmovsxd rax,dword[w438]; 2; OPTN =?cmp rax,2jne _o1C5; (; DROPmov rax,[rbp]sub rbp,8; 'msgwoaadd rbp,8mov [rbp],raxmov rax,w43E; 'error; OPTAV !mov dword[w43A],eaxmov rax,[rbp]sub rbp,8; ;ret; )_o1C5:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; DUPadd rbp,8mov [rbp],rax; 9; OPTN +add rax,9; icode>; OPTV C!+movsxd rbx,dword[w436]mov byte[rbx],aladd rbx,1mov rax,rbx; 'icode>; OPTAV !mov dword[w436],eaxmov rax,[rbp]sub rbp,8; 0?or rax,raxjnz _o1C6; (; DROPmov rax,[rbp]sub rbp,8; core;call w464; (_i1C7:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; $ff; OPTN ANDand rax,255; 32; OPTN >?cmp rax,32jle _o1C7; DROPmov rax,[rbp]sub rbp,8; )jmp _i1C7_o1C7:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; ;ret; )_o1C6:; 1; OPTN =?cmp rax,1jne _o1C8; (; DROPmov rax,[rbp]sub rbp,8; 1add rbp,8mov [rbp],raxmov rax,1; 'tlevel; OPTAV +!add dword[w439],eaxmov rax,[rbp]sub rbp,8; icode>add rbp,8mov [rbp],raxmovsxd rax,dword[w436]; blk>; OPTV !+movsxd rbx,dword[w452]mov dword[rbx],eaxadd rbx,4mov rax,rbx; 'blk>; OPTAV !mov dword[w452],eaxmov rax,[rbp]sub rbp,8; (_i1C9:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; $ff; OPTN ANDand rax,255; 32; OPTN >?cmp rax,32jle _o1C9; DROPmov rax,[rbp]sub rbp,8; )jmp _i1C9_o1C9:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; ;ret; )_o1C8:; 2; OPTN =?cmp rax,2jne _o1CA; (; DROPmov rax,[rbp]sub rbp,8; core)call w468; (_i1CB:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; $ff; OPTN ANDand rax,255; 32; OPTN >?cmp rax,32jle _o1CB; DROPmov rax,[rbp]sub rbp,8; )jmp _i1CB_o1CB:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; ;ret; )_o1CA:; 3; OPTN =?cmp rax,3jne _o1CC; (; DROPmov rax,[rbp]sub rbp,8; 0add rbp,8mov [rbp],raxxor rax,rax; icode>; OPTV !+movsxd rbx,dword[w436]mov dword[rbx],eaxadd rbx,4mov rax,rbx; 2; OPTN -sub rax,2; 'icode>; OPTAV !mov dword[w436],eaxmov rax,[rbp]sub rbp,8; 1add rbp,8mov [rbp],raxmov rax,1; 'tlevel; OPTAV +!add dword[w439],eaxmov rax,[rbp]sub rbp,8; icode>add rbp,8mov [rbp],raxmovsxd rax,dword[w436]; blk>; OPTV !+movsxd rbx,dword[w452]mov dword[rbx],eaxadd rbx,4mov rax,rbx; 'blk>; OPTAV !mov dword[w452],eaxmov rax,[rbp]sub rbp,8; (_i1CD:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; $ff; OPTN ANDand rax,255; 32; OPTN >?cmp rax,32jle _o1CD; DROPmov rax,[rbp]sub rbp,8; )jmp _i1CD_o1CD:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; ;ret; )_o1CC:; 4; OPTN =?cmp rax,4jne _o1CE; (; DROPmov rax,[rbp]sub rbp,8; core]call w46A; (_i1CF:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; $ff; OPTN ANDand rax,255; 32; OPTN >?cmp rax,32jle _o1CF; DROPmov rax,[rbp]sub rbp,8; )jmp _i1CF_o1CF:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; ;ret; )_o1CE:; 18; OPTN >?cmp rax,18jle _o1D0; (; DROPmov rax,[rbp]sub rbp,8; (_i1D1:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; $ff; OPTN ANDand rax,255; 32; OPTN >?cmp rax,32jle _o1D1; DROPmov rax,[rbp]sub rbp,8; )jmp _i1D1_o1D1:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; ;ret; )_o1D0:; 9; OPTN +add rax,9; 'tsum; OPTAV +add rax,w449; C@movsx rax,byte [rax]; 1?or rax,raxjz _o1D2; (; 0add rbp,8mov [rbp],raxxor rax,rax; icode>; OPTV !+movsxd rbx,dword[w436]mov dword[rbx],eaxadd rbx,4mov rax,rbx; 2; OPTN -sub rax,2; 'icode>; OPTAV !mov dword[w436],eaxmov rax,[rbp]sub rbp,8; )_o1D2:; DROPmov rax,[rbp]sub rbp,8; (_i1D3:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; $ff; OPTN ANDand rax,255; 32; OPTN >?cmp rax,32jle _o1D3; DROPmov rax,[rbp]sub rbp,8; )jmp _i1D3_o1D3:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; ;ret;--------------------------; :wrd2token  |2001490|l  ;  . I| calls:1 niv:2 len:104 ( a -- b )w470:;---------GEN; (_i1D4:; DUPadd rbp,8mov [rbp],rax; C@movsx rax,byte [rax]; $ff; OPTN ANDand rax,255; 33; OPTN <?cmp rax,33jge _o1D4; 0?or rax,raxjnz _o1D5; (; DROPmov rax,[rbp]sub rbp,8; 'msgokadd rbp,8mov [rbp],raxmov rax,w43C; 'error; OPTAV !mov dword[w43A],eaxmov rax,[rbp]sub rbp,8; ;ret; )_o1D5:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN +add rax,1; )jmp _i1D4_o1D4:; $7c; OPTN =?cmp rax,124jne _o1D6; (; DROPmov rax,[rbp]sub rbp,8; >>crjmp w146; ;; )_o1D6:; $3A; OPTN =?cmp rax,58jne _o1D7; (; DROPmov rax,[rbp]sub rbp,8; newentrycall w45C; icode>; OPTV !+movsxd rbx,dword[w436]mov dword[rbx],eaxadd rbx,4mov rax,rbx; 'icode>; OPTAV !mov dword[w436],eaxmov rax,[rbp]sub rbp,8; icode>; OPTV !+movsxd rbx,dword[w436]mov dword[rbx],eaxadd rbx,4mov rax,rbx; 'icode>; OPTAV !mov dword[w436],eaxmov rax,[rbp]sub rbp,8; 1mov dword[w438],1; (_i1D8:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; $ff; OPTN ANDand rax,255; 32; OPTN >?cmp rax,32jle _o1D8; DROPmov rax,[rbp]sub rbp,8; )jmp _i1D8_o1D8:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; 0mov dword[w450],0; ;ret; )_o1D7:; $23; OPTN =?cmp rax,35jne _o1D9; (; DROPmov rax,[rbp]sub rbp,8; .varjmp w45E; ;; )_o1D9:; $22; OPTN =?cmp rax,34jne _o1DA; (; DROPmov rax,[rbp]sub rbp,8; .strjmp w461; ;; )_o1DA:; $27; OPTN =?cmp rax,39jne _o1DB; (; DROPmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 1; OPTN +add rax,1; ?wordcall w44F; 1?or rax,raxjz _o1DC; (; .adrjmp w463; ;; )_o1DC:; DROPmov rax,[rbp]sub rbp,8; 'msgnoaadd rbp,8mov [rbp],raxmov rax,w43F; 'error; OPTAV !mov dword[w43A],eaxmov rax,[rbp]sub rbp,8; ;ret; )_o1DB:; DROPmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; isNrocall w33C; 1?or rax,raxjz _o1DD; (; DROPmov rax,[rbp]sub rbp,8; .litjmp w45F; ;; )_o1DD:; DROPmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 'wbasdicadd rbp,8mov [rbp],raxmov rax,w448; ?dicccall w44C; 1?or rax,raxjz _o1DE; (; .corejmp w46B; ;; )_o1DE:; DROPmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; ?wordcall w44F; 1?or rax,raxjz _o1DF; (; .wordjmp w462; ;; )_o1DF:; DROPmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; systemwordsadd rbp,8mov [rbp],raxmovsxd rax,dword[w44B]; ?dicccall w44C; 1?or rax,raxjz _o1E0; (; 3add rbp,8mov [rbp],raxmov rax,3; icode>; OPTV C!+movsxd rbx,dword[w436]mov byte[rbx],aladd rbx,1mov rax,rbx; 'icode>; OPTAV !mov dword[w436],eaxmov rax,[rbp]sub rbp,8; -1add rbp,8mov [rbp],raxmov rax,-1; icode>; OPTV C!+movsxd rbx,dword[w436]mov byte[rbx],aladd rbx,1mov rax,rbx; 'icode>; OPTAV !mov dword[w436],eaxmov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; icode>; OPTV C!+movsxd rbx,dword[w436]mov byte[rbx],aladd rbx,1mov rax,rbx; 'icode>; OPTAV !mov dword[w436],eaxmov rax,[rbp]sub rbp,8; (_i1E1:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; $ff; OPTN ANDand rax,255; 32; OPTN >?cmp rax,32jle _o1E1; DROPmov rax,[rbp]sub rbp,8; )jmp _i1E1_o1E1:; DROPmov rax,[rbp]sub rbp,8; 1; OPTN -sub rax,1; ;ret; )_o1E0:; DROPmov rax,[rbp]sub rbp,8; 'msgnowadd rbp,8mov [rbp],raxmov rax,w440; 'error; OPTAV !mov dword[w43A],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :r3i2token  |3001092|e  ;  .  | calls:1 niv:3 len:18 (  -- a )w472:;---------GEN; 0mov dword[w43A],0; 0add rbp,8mov [rbp],raxxor rax,rax; (_i1E2:; DROPmov rax,[rbp]sub rbp,8; wrd2tokencall w470; erroradd rbp,8mov [rbp],raxmovsxd rax,dword[w43A]; 0?or rax,raxjnz _o1E2; )jmp _i1E2_o1E2:; 'msgok; OPTAV =?cmp rax,w43Cjne _o1E3; (; DROPmov rax,[rbp]sub rbp,8; 0add rbp,8mov [rbp],raxxor rax,rax; ;ret; )_o1E3:; ;ret;--------------------------; :r3reset  |1082|e     .  | calls:1 niv:0 len:15 (  --  )w473:;---------GEN; CODEadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C8]; 256; OPTN +add rax,256; DUPadd rbp,8mov [rbp],rax; 'CODE>; OPTAV !mov dword[w3C9],eaxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 'icode>; OPTAV !mov dword[w436],eaxmov rax,[rbp]sub rbp,8; 'lastdicc>; OPTAV !mov dword[w437],eaxmov rax,[rbp]sub rbp,8; 0mov dword[w438],0; ;ret;--------------------------; :vmload  |1001482|e     . I| calls:1 niv:1 len:26 ( ab --  )w474:;---------GEN; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 'IPadd rbp,8mov [rbp],raxmov rax,w3C2; SWAPxchg rax,[rbp]; 8add rbp,8mov [rbp],raxmov rax,8; MOVEmov rcx,raxmovsxd rsi,dword[rbp]movsxd rdi,dword[rbp-8]rep movsdmov rax,[rbp-8*2]sub rbp,8*3; r3resetcall w473; markcall w14D; hereadd rbp,8mov [rbp],raxmovsxd rax,dword[w14A]; SWAPxchg rax,[rbp]; LOADcall SYSLOAD; 0add rbp,8mov [rbp],raxxor rax,rax; SWAPxchg rax,[rbp]; C!mov rcx,[rbp]mov byte[rax],clmov rax,[rbp-8]sub rbp,8*2; hereadd rbp,8mov [rbp],raxmovsxd rax,dword[w14A]; r3i2tokencall w472; DROPmov rax,[rbp]sub rbp,8; 'lerror; OPTAV !mov dword[w43B],eaxmov rax,[rbp]sub rbp,8; vmresetcall w42C; lastdicc>add rbp,8mov [rbp],raxmovsxd rax,dword[w437]; CODE; OPTV -movsxd rbx,dword[w3C8]sub rax,rbx; 8; OPTN +add rax,8; 'IP; OPTAV !mov dword[w3C2],eaxmov rax,[rbp]sub rbp,8; emptycall w14E; 'IPadd rbp,8mov [rbp],raxmov rax,w3C2; 8add rbp,8mov [rbp],raxmov rax,8; MOVEmov rcx,raxmovsxd rsi,dword[rbp]movsxd rdi,dword[rbp-8]rep movsdmov rax,[rbp-8*2]sub rbp,8*3; ;ret;--------------------------; :drawtank  |4001480|l     . I| calls:1 niv:4 len:37 (  --  )w497:;---------GEN; -0.5add rbp,8mov [rbp],raxmov rax,-32768; -0.5add rbp,8mov [rbp],raxmov rax,-32768; 0add rbp,8mov [rbp],raxxor rax,rax; project3dcall w30F; OPcall w70; 0.5add rbp,8mov [rbp],raxmov rax,32768; -0.5add rbp,8mov [rbp],raxmov rax,-32768; 0add rbp,8mov [rbp],raxxor rax,rax; project3dcall w30F; LINEcall w6F; 0.5add rbp,8mov [rbp],raxmov rax,32768; 0.5add rbp,8mov [rbp],raxmov rax,32768; 0add rbp,8mov [rbp],raxxor rax,rax; project3dcall w30F; LINEcall w6F; -0.5add rbp,8mov [rbp],raxmov rax,-32768; 0.5add rbp,8mov [rbp],raxmov rax,32768; 0add rbp,8mov [rbp],raxxor rax,rax; project3dcall w30F; LINEcall w6F; -0.5add rbp,8mov [rbp],raxmov rax,-32768; -0.5add rbp,8mov [rbp],raxmov rax,-32768; 0add rbp,8mov [rbp],raxxor rax,rax; project3dcall w30F; LINEcall w6F; -0.2add rbp,8mov [rbp],raxmov rax,-13107; -0.2add rbp,8mov [rbp],raxmov rax,-13107; 0add rbp,8mov [rbp],raxxor rax,rax; project3dcall w30F; OPcall w70; 0.2add rbp,8mov [rbp],raxmov rax,13107; -0.2add rbp,8mov [rbp],raxmov rax,-13107; 0add rbp,8mov [rbp],raxxor rax,rax; project3dcall w30F; LINEcall w6F; 0.0add rbp,8mov [rbp],raxxor rax,rax; 0.9add rbp,8mov [rbp],raxmov rax,58982; 0add rbp,8mov [rbp],raxxor rax,rax; project3dcall w30F; LINEcall w6F; -0.2add rbp,8mov [rbp],raxmov rax,-13107; -0.2add rbp,8mov [rbp],raxmov rax,-13107; 0add rbp,8mov [rbp],raxxor rax,rax; project3dcall w30F; LINEjmp w6F; ;;--------------------------; :drawshoot  |4001480|l     . I| calls:1 niv:4 len:21 (  --  )w498:;---------GEN; -0.1add rbp,8mov [rbp],raxmov rax,-6553; -0.1add rbp,8mov [rbp],raxmov rax,-6553; 0add rbp,8mov [rbp],raxxor rax,rax; project3dcall w30F; OPcall w70; 0.1add rbp,8mov [rbp],raxmov rax,6553; -0.1add rbp,8mov [rbp],raxmov rax,-6553; 0add rbp,8mov [rbp],raxxor rax,rax; project3dcall w30F; LINEcall w6F; 0.1add rbp,8mov [rbp],raxmov rax,6553; 0.1add rbp,8mov [rbp],raxmov rax,6553; 0add rbp,8mov [rbp],raxxor rax,rax; project3dcall w30F; LINEcall w6F; -0.1add rbp,8mov [rbp],raxmov rax,-6553; 0.1add rbp,8mov [rbp],raxmov rax,6553; 0add rbp,8mov [rbp],raxxor rax,rax; project3dcall w30F; LINEcall w6F; -0.1add rbp,8mov [rbp],raxmov rax,-6553; -0.1add rbp,8mov [rbp],raxmov rax,-6553; 0add rbp,8mov [rbp],raxxor rax,rax; project3dcall w30F; LINEjmp w6F; ;;--------------------------; :drawbackgroud  |4001480|l     . I| calls:1 niv:4 len:24 (  --  )w499:;---------GEN; $ffffmov dword[w53],65535; -30.0add rbp,8mov [rbp],raxmov rax,-1966080; -30.0add rbp,8mov [rbp],raxmov rax,-1966080; 0add rbp,8mov [rbp],raxxor rax,rax; project3dcall w30F; OPcall w70; 30.0add rbp,8mov [rbp],raxmov rax,1966080; -30.0add rbp,8mov [rbp],raxmov rax,-1966080; 0add rbp,8mov [rbp],raxxor rax,rax; project3dcall w30F; LINEcall w6F; 30.0add rbp,8mov [rbp],raxmov rax,1966080; 30.0add rbp,8mov [rbp],raxmov rax,1966080; 0add rbp,8mov [rbp],raxxor rax,rax; project3dcall w30F; LINEcall w6F; -30.0add rbp,8mov [rbp],raxmov rax,-1966080; 30.0add rbp,8mov [rbp],raxmov rax,1966080; 0add rbp,8mov [rbp],raxxor rax,rax; project3dcall w30F; LINEcall w6F; -30.0add rbp,8mov [rbp],raxmov rax,-1966080; -30.0add rbp,8mov [rbp],raxmov rax,-1966080; 0add rbp,8mov [rbp],raxxor rax,rax; project3dcall w30F; LINEjmp w6F; ;;--------------------------; :updatexy  |3080|l     .  | calls:3 niv:0 len:31 ( ab --  )w49E:;---------GEN; y1; OPTV <?cmp eax,dword[w49B]jge _o1E4; (; DUPadd rbp,8mov [rbp],rax; 'y1; OPTAV !mov dword[w49B],eaxmov rax,[rbp]sub rbp,8; )_o1E4:; y2; OPTV >?cmp eax,dword[w49D]jle _o1E5; (; DUPadd rbp,8mov [rbp],rax; 'y2; OPTAV !mov dword[w49D],eaxmov rax,[rbp]sub rbp,8; )_o1E5:; DROPmov rax,[rbp]sub rbp,8; x1; OPTV <?cmp eax,dword[w49A]jge _o1E6; (; DUPadd rbp,8mov [rbp],rax; 'x1; OPTAV !mov dword[w49A],eaxmov rax,[rbp]sub rbp,8; )_o1E6:; x2; OPTV >?cmp eax,dword[w49C]jle _o1E7; (; DUPadd rbp,8mov [rbp],rax; 'x2; OPTAV !mov dword[w49C],eaxmov rax,[rbp]sub rbp,8; )_o1E7:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :tankingui  |1001480|l     . I| calls:1 niv:1 len:35 (  --  )w49F:;---------GEN; -0.8add rbp,8mov [rbp],raxmov rax,-52428; -0.8add rbp,8mov [rbp],raxmov rax,-52428; 0add rbp,8mov [rbp],raxxor rax,rax; project3dcall w30F; DUPadd rbp,8mov [rbp],rax; 'y1; OPTAV !mov dword[w49B],eaxmov rax,[rbp]sub rbp,8; 'y2; OPTAV !mov dword[w49D],eaxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 'x1; OPTAV !mov dword[w49A],eaxmov rax,[rbp]sub rbp,8; 'x2; OPTAV !mov dword[w49C],eaxmov rax,[rbp]sub rbp,8; 0.8add rbp,8mov [rbp],raxmov rax,52428; -0.8add rbp,8mov [rbp],raxmov rax,-52428; 0add rbp,8mov [rbp],raxxor rax,rax; project3dcall w30F; updatexycall w49E; 0.8add rbp,8mov [rbp],raxmov rax,52428; 0.8add rbp,8mov [rbp],raxmov rax,52428; 0add rbp,8mov [rbp],raxxor rax,rax; project3dcall w30F; updatexycall w49E; -0.8add rbp,8mov [rbp],raxmov rax,-52428; 0.8add rbp,8mov [rbp],raxmov rax,52428; 0add rbp,8mov [rbp],raxxor rax,rax; project3dcall w30F; updatexycall w49E; x1add rbp,8mov [rbp],raxmovsxd rax,dword[w49A]; y1add rbp,8mov [rbp],raxmovsxd rax,dword[w49B]; x2add rbp,8mov [rbp],raxmovsxd rax,dword[w49C]; y2add rbp,8mov [rbp],raxmovsxd rax,dword[w49D]; 'yr2; OPTAV !mov dword[w293],eaxmov rax,[rbp]sub rbp,8; 'xr2; OPTAV !mov dword[w292],eaxmov rax,[rbp]sub rbp,8; 'yr1; OPTAV !mov dword[w291],eaxmov rax,[rbp]sub rbp,8; 'xr1; OPTAV !mov dword[w290],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :circle  |4001480|l     . I| calls:1 niv:4 len:18 ( a --  )w4A4:;---------GEN; 0add rbp,8mov [rbp],raxxor rax,rax; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; 0add rbp,8mov [rbp],raxxor rax,rax; project3dcall w30F; OPcall w70; 0add rbp,8mov [rbp],raxxor rax,rax; (_i1E8:; 1.0; OPTN <?cmp rax,65536jge _o1E8; 0.1; OPTN +add rax,6553; DUPadd rbp,8mov [rbp],rax; PICK2add rbp,8mov [rbp],raxmov rax,[rbp-8*2]; >Rpush raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; sincall w7; SWAPxchg rax,[rbp]; coscall w6; R@add rbp,8mov [rbp],raxmov rax,[rsp]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; SWAPxchg rax,[rbp]; R>add rbp,8mov [rbp],raxpop rax; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; SWAPxchg rax,[rbp]; 0add rbp,8mov [rbp],raxxor rax,rax; project3dcall w30F; LINEcall w6F; )jmp _i1E8_o1E8:; 2DROPmov rax,[rbp-8]sub rbp,8*2; ;ret;--------------------------; :explo  |1001494|l' ;  . I| calls:1 niv:1 len:27 ( a -- b )w4A5:;---------GEN; >Bmov r9,raxmov rax,[rbp]sub rbp,8; mat>add rbp,8mov [rbp],raxmovsxd rax,dword[w2ED]; DUPadd rbp,8mov [rbp],rax; 64; OPTN +add rax,64; DUPadd rbp,8mov [rbp],rax; 'mat>; OPTAV !mov dword[w2ED],eaxmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; 16add rbp,8mov [rbp],raxmov rax,16; MOVEmov rcx,raxmovsxd rsi,dword[rbp]movsxd rdi,dword[rbp-8]rep movsdmov rax,[rbp-8*2]sub rbp,8*3; -1add rbp,8mov [rbp],raxmov rax,-1; B>add rbp,8mov [rbp],raxmov rax,r9; +!mov rcx,[rbp]add dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; B@+add rbp,8mov [rbp],raxmovsxd rax,dword[r9]add r9,4; 0?or rax,raxjnz _o1E9; (; ;ret; )_o1E9:; DROPmov rax,[rbp]sub rbp,8; B@+add rbp,8mov [rbp],raxmovsxd rax,dword[r9]add r9,4; B@+add rbp,8mov [rbp],raxmovsxd rax,dword[r9]add r9,4; 0add rbp,8mov [rbp],raxxor rax,rax; mtransicall w2F3; 0.1add rbp,8mov [rbp],raxmov rax,6553; B>add rbp,8mov [rbp],raxmov rax,r9; +!mov rcx,[rbp]add dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; $ffffffmov dword[w53],16777215; B@add rbp,8mov [rbp],raxmovsxd rax,dword[r9]; circlecall w4A4; mat>add rbp,8mov [rbp],raxmovsxd rax,dword[w2ED]; 64; OPTN -sub rax,64; 'mat>; OPTAV !mov dword[w2ED],eaxmov rax,[rbp]sub rbp,8; ;ret; ;ret;--------------------------; :disparo  |1001494|l' ;  . I| calls:1 niv:1 len:30 ( a -- b )w4A7:;---------GEN; >Bmov r9,raxmov rax,[rbp]sub rbp,8; mat>add rbp,8mov [rbp],raxmovsxd rax,dword[w2ED]; DUPadd rbp,8mov [rbp],rax; 64; OPTN +add rax,64; DUPadd rbp,8mov [rbp],rax; 'mat>; OPTAV !mov dword[w2ED],eaxmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; 16add rbp,8mov [rbp],raxmov rax,16; MOVEmov rcx,raxmovsxd rsi,dword[rbp]movsxd rdi,dword[rbp-8]rep movsdmov rax,[rbp-8*2]sub rbp,8*3; -1add rbp,8mov [rbp],raxmov rax,-1; B>add rbp,8mov [rbp],raxmov rax,r9; +!mov rcx,[rbp]add dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; B@+add rbp,8mov [rbp],raxmovsxd rax,dword[r9]add r9,4; 0?or rax,raxjnz _o1EA; (; B@+add rbp,8mov [rbp],raxmovsxd rax,dword[r9]add r9,4; B@add rbp,8mov [rbp],raxmovsxd rax,dword[r9]; 20add rbp,8mov [rbp],raxmov rax,20; 'exploadd rbp,8mov [rbp],raxmov rax,w4A5; 'screenadd rbp,8mov [rbp],raxmov rax,w490; DUPadd rbp,8mov [rbp],rax; >Rpush raxmov rax,[rbp]sub rbp,8; @movsxd rax,dword [rax]; !+mov rcx,[rbp]mov dword[rax],ecxadd rax,4sub rbp,8; 64add rbp,8mov [rbp],raxmov rax,64; R>add rbp,8mov [rbp],raxpop rax; +!mov rcx,[rbp]add dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; >Amov r8,raxmov rax,[rbp]sub rbp,8; A!+mov dword[r8],eaxadd r8,4mov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; A!+mov dword[r8],eaxadd r8,4mov rax,[rbp]sub rbp,8; A!+mov dword[r8],eaxadd r8,4mov rax,[rbp]sub rbp,8; 1; OPTN A!mov dword[r8],1; ;ret; )_o1EA:; DROPmov rax,[rbp]sub rbp,8; B@+add rbp,8mov [rbp],raxmovsxd rax,dword[r9]add r9,4; B@+add rbp,8mov [rbp],raxmovsxd rax,dword[r9]add r9,4; B@+add rbp,8mov [rbp],raxmovsxd rax,dword[r9]add r9,4; mtransicall w2F3; 12; OPTN B+add r9,12; B@+add rbp,8mov [rbp],raxmovsxd rax,dword[r9]add r9,4; B>add rbp,8mov [rbp],raxmov rax,r9; 28; OPTN -sub rax,28; +!mov rcx,[rbp]add dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; B@+add rbp,8mov [rbp],raxmovsxd rax,dword[r9]add r9,4; B>add rbp,8mov [rbp],raxmov rax,r9; 28; OPTN -sub rax,28; +!mov rcx,[rbp]add dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; B@+add rbp,8mov [rbp],raxmovsxd rax,dword[r9]add r9,4; B>add rbp,8mov [rbp],raxmov rax,r9; 28; OPTN -sub rax,28; +!mov rcx,[rbp]add dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; $ffffffmov dword[w53],16777215; drawshootcall w498; mat>add rbp,8mov [rbp],raxmovsxd rax,dword[w2ED]; 64; OPTN -sub rax,64; 'mat>; OPTAV !mov dword[w2ED],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :+disparo  |4001480|l     . I| calls:1 niv:4 len:27 ( abcd --  )w4A8:;---------GEN; 'disparoadd rbp,8mov [rbp],raxmov rax,w4A7; 'screenadd rbp,8mov [rbp],raxmov rax,w490; DUPadd rbp,8mov [rbp],rax; >Rpush raxmov rax,[rbp]sub rbp,8; @movsxd rax,dword [rax]; !+mov rcx,[rbp]mov dword[rax],ecxadd rax,4sub rbp,8; 64add rbp,8mov [rbp],raxmov rax,64; R>add rbp,8mov [rbp],raxpop rax; +!mov rcx,[rbp]add dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; >Amov r8,raxmov rax,[rbp]sub rbp,8; $3f; OPTN A!+mov dword[r8],63add r8,4; 0add rbp,8mov [rbp],raxxor rax,rax; SWAPxchg rax,[rbp]; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; A!+mov dword[r8],eaxadd r8,4mov rax,[rbp]sub rbp,8; A!+mov dword[r8],eaxadd r8,4mov rax,[rbp]sub rbp,8; A!+mov dword[r8],eaxadd r8,4mov rax,[rbp]sub rbp,8; 0add rbp,8mov [rbp],raxxor rax,rax; 0add rbp,8mov [rbp],raxxor rax,rax; 0; OPTN A!+mov dword[r8],0add r8,4; A!+mov dword[r8],eaxadd r8,4mov rax,[rbp]sub rbp,8; A!+mov dword[r8],eaxadd r8,4mov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; >Rpush raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; sincall w7; SWAPxchg rax,[rbp]; coscall w6; R@add rbp,8mov [rbp],raxmov rax,[rsp]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; SWAPxchg rax,[rbp]; R>add rbp,8mov [rbp],raxpop rax; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; SWAPxchg rax,[rbp]; 0add rbp,8mov [rbp],raxxor rax,rax; SWAPxchg rax,[rbp]; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; A!+mov dword[r8],eaxadd r8,4mov rax,[rbp]sub rbp,8; A!+mov dword[r8],eaxadd r8,4mov rax,[rbp]sub rbp,8; A!+mov dword[r8],eaxadd r8,4mov rax,[rbp]sub rbp,8; ;ret;--------------------------; :motor  |4002480|l     . I| calls:2 niv:4 len:15 ( a --  )w4A9:;---------GEN; B>add rbp,8mov [rbp],raxmov rax,r9; 24; OPTN +add rax,24; @movsxd rax,dword [rax]; SWAPxchg rax,[rbp]; >Rpush raxmov rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; sincall w7; SWAPxchg rax,[rbp]; coscall w6; R@add rbp,8mov [rbp],raxmov rax,[rsp]; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; SWAPxchg rax,[rbp]; R>add rbp,8mov [rbp],raxpop rax; 16; OPTN *>>cqoimul qword[rbp]sub rbp,8shrd rax,rdx,16; SWAPxchg rax,[rbp]; B>add rbp,8mov [rbp],raxmov rax,r9; 8; OPTN +add rax,8; +!mov rcx,[rbp]add dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; B>add rbp,8mov [rbp],raxmov rax,r9; 4; OPTN +add rax,4; +!mov rcx,[rbp]add dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; ;ret;--------------------------; :IOrobot  |5001480|l     . I| calls:1 niv:5 len:55 (  --  )w4AB:;---------GEN; CODEadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C8]; 256; OPTN +add rax,256; 8; OPTN +add rax,8; @movsxd rax,dword [rax]; $1; OPTN and?test rax,1jz _o1EB; (; 0.001add rbp,8mov [rbp],raxmov rax,65; B>add rbp,8mov [rbp],raxmov rax,r9; 24; OPTN +add rax,24; +!mov rcx,[rbp]add dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; )_o1EB:; $2; OPTN and?test rax,2jz _o1EC; (; -0.001add rbp,8mov [rbp],raxmov rax,-65; B>add rbp,8mov [rbp],raxmov rax,r9; 24; OPTN +add rax,24; +!mov rcx,[rbp]add dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; )_o1EC:; $4; OPTN and?test rax,4jz _o1ED; (; 0.02add rbp,8mov [rbp],raxmov rax,1310; motorcall w4A9; )_o1ED:; $8; OPTN and?test rax,8jz _o1EE; (; -0.02add rbp,8mov [rbp],raxmov rax,-1310; motorcall w4A9; )_o1EE:; $10; OPTN and?test rax,16jz _o1EF; (; 0.2add rbp,8mov [rbp],raxmov rax,13107; B>add rbp,8mov [rbp],raxmov rax,r9; 24; OPTN +add rax,24; @movsxd rax,dword [rax]; B>add rbp,8mov [rbp],raxmov rax,r9; 4; OPTN +add rax,4; @+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; SWAPxchg rax,[rbp]; @movsxd rax,dword [rax]; +disparocall w4A8; )_o1EF:; $f; OPTN ANDand rax,15; CODEadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C8]; 256; OPTN +add rax,256; 8; OPTN +add rax,8; !mov rcx,[rbp]mov dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; ;ret;--------------------------; :coderobot  |10014C4|l'   [. I| calls:1 niv:1 len:43 ( ab --  )w4AC:;---------GEN; >Bmov r9,raxmov rax,[rbp]sub rbp,8; B@+add rbp,8mov [rbp],raxmovsxd rax,dword[r9]add r9,4; DUPadd rbp,8mov [rbp],rax; 'IPadd rbp,8mov [rbp],raxmov rax,w3C2; SWAPxchg rax,[rbp]; 8add rbp,8mov [rbp],raxmov rax,8; MOVEmov rcx,raxmovsxd rsi,dword[rbp]movsxd rdi,dword[rbp-8]rep movsdmov rax,[rbp-8*2]sub rbp,8*3; IPadd rbp,8mov [rbp],raxmovsxd rax,dword[w3C2]; CODE; OPTV +movsxd rbx,dword[w3C8]add rax,rbx; vmstepcall w42A; CODE; OPTV -movsxd rbx,dword[w3C8]sub rax,rbx; 'IP; OPTAV !mov dword[w3C2],eaxmov rax,[rbp]sub rbp,8; 'IPadd rbp,8mov [rbp],raxmov rax,w3C2; 8add rbp,8mov [rbp],raxmov rax,8; MOVEmov rcx,raxmovsxd rsi,dword[rbp]movsxd rdi,dword[rbp-8]rep movsdmov rax,[rbp-8*2]sub rbp,8*3; IOrobotcall w4AB; mat>add rbp,8mov [rbp],raxmovsxd rax,dword[w2ED]; DUPadd rbp,8mov [rbp],rax; 64; OPTN +add rax,64; DUPadd rbp,8mov [rbp],rax; 'mat>; OPTAV !mov dword[w2ED],eaxmov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; 16add rbp,8mov [rbp],raxmov rax,16; MOVEmov rcx,raxmovsxd rsi,dword[rbp]movsxd rdi,dword[rbp-8]rep movsdmov rax,[rbp-8*2]sub rbp,8*3; B@+add rbp,8mov [rbp],raxmovsxd rax,dword[r9]add r9,4; 'ink; OPTAV !mov dword[w53],eaxmov rax,[rbp]sub rbp,8; B@+add rbp,8mov [rbp],raxmovsxd rax,dword[r9]add r9,4; B@+add rbp,8mov [rbp],raxmovsxd rax,dword[r9]add r9,4; B@+add rbp,8mov [rbp],raxmovsxd rax,dword[r9]add r9,4; mtransicall w2F3; 8; OPTN B+add r9,8; B@+add rbp,8mov [rbp],raxmovsxd rax,dword[r9]add r9,4; mrotzicall w2FB; drawtankcall w497; tankinguicall w49F; [jmp ja1F0anon1F0:; DUPadd rbp,8mov [rbp],rax; nowrobot; OPTV =?cmp eax,dword[w4A0]jne _o1F1; (; 0add rbp,8mov [rbp],raxxor rax,rax; NIPsub rbp,8; )_o1F1:; 'nowrobot; OPTAV !mov dword[w4A0],eaxmov rax,[rbp]sub rbp,8; ;ret; ]ja1F0:add rbp,8mov [rbp],raxmov rax,anon1F0; onClickcall w29D; mat>add rbp,8mov [rbp],raxmovsxd rax,dword[w2ED]; 64; OPTN -sub rax,64; 'mat>; OPTAV !mov dword[w2ED],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :+robot  |2001480|l     . I| calls:1 niv:2 len:29 ( abcd --  )w4AD:;---------GEN; 'coderobotadd rbp,8mov [rbp],raxmov rax,w4AC; 'screenadd rbp,8mov [rbp],raxmov rax,w490; DUPadd rbp,8mov [rbp],rax; >Rpush raxmov rax,[rbp]sub rbp,8; @movsxd rax,dword [rax]; !+mov rcx,[rbp]mov dword[rax],ecxadd rax,4sub rbp,8; 64add rbp,8mov [rbp],raxmov rax,64; R>add rbp,8mov [rbp],raxpop rax; +!mov rcx,[rbp]add dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; >Amov r8,raxmov rax,[rbp]sub rbp,8; $fffadd rbp,8mov [rbp],raxmov rax,4095; vmcpucall w434; DUPadd rbp,8mov [rbp],rax; A!+mov dword[r8],eaxadd r8,4mov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; vmloadcall w474; A!+mov dword[r8],eaxadd r8,4mov rax,[rbp]sub rbp,8; SWAPxchg rax,[rbp]; A!+mov dword[r8],eaxadd r8,4mov rax,[rbp]sub rbp,8; A!+mov dword[r8],eaxadd r8,4mov rax,[rbp]sub rbp,8; 0; OPTN A!+mov dword[r8],0add r8,4; 0add rbp,8mov [rbp],raxxor rax,rax; 0add rbp,8mov [rbp],raxxor rax,rax; 0; OPTN A!+mov dword[r8],0add r8,4; A!+mov dword[r8],eaxadd r8,4mov rax,[rbp]sub rbp,8; A!+mov dword[r8],eaxadd r8,4mov rax,[rbp]sub rbp,8; 0add rbp,8mov [rbp],raxxor rax,rax; 0add rbp,8mov [rbp],raxxor rax,rax; 0; OPTN A!+mov dword[r8],0add r8,4; A!+mov dword[r8],eaxadd r8,4mov rax,[rbp]sub rbp,8; A!+mov dword[r8],eaxadd r8,4mov rax,[rbp]sub rbp,8; ;ret;--------------------------; :screenrobot  |3001484|l'    . I| calls:1 niv:3 len:23 ( a -- b )w4AF:;---------GEN; DUPadd rbp,8mov [rbp],rax; >Amov r8,raxmov rax,[rbp]sub rbp,8; A@+add rbp,8mov [rbp],raxmovsxd rax,dword[r8]add r8,4; A@+add rbp,8mov [rbp],raxmovsxd rax,dword[r8]add r8,4; A@+add rbp,8mov [rbp],raxmovsxd rax,dword[r8]add r8,4; A@add rbp,8mov [rbp],raxmovsxd rax,dword[r8]; 2SWAPxchg rax,[rbp-8]mov rcx,[rbp-8*2]xchg rcx,[rbp]mov [rbp-8*2],rcx; 'codepathadd rbp,8mov [rbp],raxmov rax,w487; "%s%w.r3i"add rbp,8mov [rbp],raxmov rax,strDA1; markcall w14D; 'buffadd rbp,8mov [rbp],raxmov rax,w177; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; (_i1F2:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o1F2; ,emitcall w175; )jmp _i1F2_o1F2:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 0add rbp,8mov [rbp],raxxor rax,rax; here; OPTV C!+movsxd rbx,dword[w14A]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; emptycall w14E; 'buffadd rbp,8mov [rbp],raxmov rax,w177; +robotcall w4AD; DUPadd rbp,8mov [rbp],rax; 16; OPTN +add rax,16; >Amov r8,raxmov rax,[rbp]sub rbp,8; erroradd rbp,8mov [rbp],raxmovsxd rax,dword[w43A]; DUPadd rbp,8mov [rbp],rax; 'anyerror; OPTAV +!add dword[w4AE],eaxmov rax,[rbp]sub rbp,8; A!+mov dword[r8],eaxadd r8,4mov rax,[rbp]sub rbp,8; lerror; OPTV A!movsxd rbx,dword[w43B]mov dword[r8],ebx; ;ret;--------------------------; :xbye  |1001484|l'    . I| calls:1 niv:1 len:2 (  --  )w4B8:;---------GEN; 1mov dword[w118],1; ;ret;--------------------------; :printinfo  |2001490|l  ;  . I| calls:1 niv:2 len:44 ( a -- b )w4BD:;---------GEN; nowrobotadd rbp,8mov [rbp],raxmovsxd rax,dword[w4A0]; 0?or rax,raxjnz _o1F3; (; DROPmov rax,[rbp]sub rbp,8; ;ret; )_o1F3:; $ffffffmov dword[w53],16777215; 4; OPTN +add rax,4; @+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; 'IPadd rbp,8mov [rbp],raxmov rax,w3C2; SWAPxchg rax,[rbp]; 8add rbp,8mov [rbp],raxmov rax,8; MOVEmov rcx,raxmovsxd rsi,dword[rbp]movsxd rdi,dword[rbp-8]rep movsdmov rax,[rbp-8*2]sub rbp,8*3; @+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; 'ink; OPTAV !mov dword[w53],eaxmov rax,[rbp]sub rbp,8; @+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; "x:%f "add rbp,8mov [rbp],raxmov rax,str10EE; markcall w14D; 'buffadd rbp,8mov [rbp],raxmov rax,w177; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; (_i1F4:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o1F4; ,emitcall w175; )jmp _i1F4_o1F4:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 0add rbp,8mov [rbp],raxxor rax,rax; here; OPTV C!+movsxd rbx,dword[w14A]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; emptycall w14E; 'buffadd rbp,8mov [rbp],raxmov rax,w177; (_i1F5:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o1F5; $ff; OPTN ANDand rax,255; DUPadd rbp,8mov [rbp],rax; _charemit; OPTV EXmov ecx,dword[w1F3]call rcx; _charsize; OPTV EXmov ecx,dword[w1F4]call rcx; 'ccx; OPTAV +!add dword[w1B5],eaxmov rax,[rbp]sub rbp,8; )jmp _i1F5_o1F5:; 2DROPmov rax,[rbp-8]sub rbp,8*2; @+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; "y:%f "add rbp,8mov [rbp],raxmov rax,str10FF; markcall w14D; 'buffadd rbp,8mov [rbp],raxmov rax,w177; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; (_i1F6:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o1F6; ,emitcall w175; )jmp _i1F6_o1F6:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 0add rbp,8mov [rbp],raxxor rax,rax; here; OPTV C!+movsxd rbx,dword[w14A]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; emptycall w14E; 'buffadd rbp,8mov [rbp],raxmov rax,w177; (_i1F7:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o1F7; $ff; OPTN ANDand rax,255; DUPadd rbp,8mov [rbp],rax; _charemit; OPTV EXmov ecx,dword[w1F3]call rcx; _charsize; OPTV EXmov ecx,dword[w1F4]call rcx; 'ccx; OPTAV +!add dword[w1B5],eaxmov rax,[rbp]sub rbp,8; )jmp _i1F7_o1F7:; 2DROPmov rax,[rbp-8]sub rbp,8*2; cchadd rbp,8mov [rbp],raxmovsxd rax,dword[w1EE]; 'ccy; OPTAV +!add dword[w1B6],eaxmov rax,[rbp]sub rbp,8; 0mov dword[w1B5],0; @+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; "%h "add rbp,8mov [rbp],raxmov rax,str1115; markcall w14D; 'buffadd rbp,8mov [rbp],raxmov rax,w177; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; (_i1F8:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o1F8; ,emitcall w175; )jmp _i1F8_o1F8:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 0add rbp,8mov [rbp],raxxor rax,rax; here; OPTV C!+movsxd rbx,dword[w14A]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; emptycall w14E; 'buffadd rbp,8mov [rbp],raxmov rax,w177; (_i1F9:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o1F9; $ff; OPTN ANDand rax,255; DUPadd rbp,8mov [rbp],rax; _charemit; OPTV EXmov ecx,dword[w1F3]call rcx; _charsize; OPTV EXmov ecx,dword[w1F4]call rcx; 'ccx; OPTAV +!add dword[w1B5],eaxmov rax,[rbp]sub rbp,8; )jmp _i1F9_o1F9:; 2DROPmov rax,[rbp-8]sub rbp,8*2; @+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; "%h "add rbp,8mov [rbp],raxmov rax,str1124; markcall w14D; 'buffadd rbp,8mov [rbp],raxmov rax,w177; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; (_i1FA:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o1FA; ,emitcall w175; )jmp _i1FA_o1FA:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 0add rbp,8mov [rbp],raxxor rax,rax; here; OPTV C!+movsxd rbx,dword[w14A]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; emptycall w14E; 'buffadd rbp,8mov [rbp],raxmov rax,w177; (_i1FB:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o1FB; $ff; OPTN ANDand rax,255; DUPadd rbp,8mov [rbp],rax; _charemit; OPTV EXmov ecx,dword[w1F3]call rcx; _charsize; OPTV EXmov ecx,dword[w1F4]call rcx; 'ccx; OPTAV +!add dword[w1B5],eaxmov rax,[rbp]sub rbp,8; )jmp _i1FB_o1FB:; 2DROPmov rax,[rbp-8]sub rbp,8*2; cchadd rbp,8mov [rbp],raxmovsxd rax,dword[w1EE]; 'ccy; OPTAV +!add dword[w1B6],eaxmov rax,[rbp]sub rbp,8; 0mov dword[w1B5],0; DROPmov rax,[rbp]sub rbp,8; "> "add rbp,8mov [rbp],raxmov rax,str114E; markcall w14D; 'buffadd rbp,8mov [rbp],raxmov rax,w177; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; (_i1FC:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o1FC; ,emitcall w175; )jmp _i1FC_o1FC:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 0add rbp,8mov [rbp],raxxor rax,rax; here; OPTV C!+movsxd rbx,dword[w14A]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; emptycall w14E; 'buffadd rbp,8mov [rbp],raxmov rax,w177; (_i1FD:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o1FD; $ff; OPTN ANDand rax,255; DUPadd rbp,8mov [rbp],rax; _charemit; OPTV EXmov ecx,dword[w1F3]call rcx; _charsize; OPTV EXmov ecx,dword[w1F4]call rcx; 'ccx; OPTAV +!add dword[w1B5],eaxmov rax,[rbp]sub rbp,8; )jmp _i1FD_o1FD:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 'spadadd rbp,8mov [rbp],raxmov rax,w488; 64add rbp,8mov [rbp],raxmov rax,64; 'proinputaadd rbp,8mov [rbp],raxmov rax,w2CD; 'iniinputadd rbp,8mov [rbp],raxmov rax,w2CB; w/fococall w2B4; 'clickfocoadd rbp,8mov [rbp],raxmov rax,w2B1; onClickcall w29D; DROPmov rax,[rbp]sub rbp,8; (_i1FE:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o1FE; $ff; OPTN ANDand rax,255; DUPadd rbp,8mov [rbp],rax; _charemit; OPTV EXmov ecx,dword[w1F3]call rcx; _charsize; OPTV EXmov ecx,dword[w1F4]call rcx; 'ccx; OPTAV +!add dword[w1B5],eaxmov rax,[rbp]sub rbp,8; )jmp _i1FE_o1FE:; 2DROPmov rax,[rbp-8]sub rbp,8*2; KEYadd rbp,8mov [rbp],raxmov eax,dword[SYSKEY]; $d; OPTN =?cmp rax,13jne _o1FF; (; 0mov dword[w488],0; -1mov dword[w28C],-1; 0mov dword[w28B],0; )_o1FF:; DROPmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :runscr  |9001484|l'    . I| calls:1 niv:9 len:27 ( a --  )w4BE:;---------GEN; VFRAMEadd rbp,8mov [rbp],raxmov rax,[SYSFRAME]; 0add rbp,8mov [rbp],raxxor rax,rax; SWadd rbp,8mov [rbp],raxmov rax,XRES; SHadd rbp,8mov [rbp],raxmov rax,YRES; *imul rax,[rbp]sub rbp,8; FILLmov rcx,raxmovsxd rax,dword[rbp]movsxd rdi,dword[rbp-8]rep stosdmov rax,[rbp-8*2]sub rbp,8*3; 0mov dword[w1B5],0; 0mov dword[w1B6],0; guicall w29B; $ffffmov dword[w53],65535; " FRobots"add rbp,8mov [rbp],raxmov rax,str11C1; markcall w14D; 'buffadd rbp,8mov [rbp],raxmov rax,w177; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; (_i200:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o200; ,emitcall w175; )jmp _i200_o200:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 0add rbp,8mov [rbp],raxxor rax,rax; here; OPTV C!+movsxd rbx,dword[w14A]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; emptycall w14E; 'buffadd rbp,8mov [rbp],raxmov rax,w177; (_i201:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o201; $ff; OPTN ANDand rax,255; DUPadd rbp,8mov [rbp],rax; _charemit; OPTV EXmov ecx,dword[w1F3]call rcx; _charsize; OPTV EXmov ecx,dword[w1F4]call rcx; 'ccx; OPTAV +!add dword[w1B5],eaxmov rax,[rbp]sub rbp,8; )jmp _i201_o201:; 2DROPmov rax,[rbp-8]sub rbp,8*2; cchadd rbp,8mov [rbp],raxmovsxd rax,dword[w1EE]; 'ccy; OPTAV +!add dword[w1B6],eaxmov rax,[rbp]sub rbp,8; 0mov dword[w1B5],0; printinfocall w4BD; Omodecall w305; 0add rbp,8mov [rbp],raxxor rax,rax; 0add rbp,8mov [rbp],raxxor rax,rax; 50.0add rbp,8mov [rbp],raxmov rax,3276800; mtranscall w2F2; drawbackgroudcall w499; 'screenadd rbp,8mov [rbp],raxmov rax,w490; p.drawcall w321; KEYadd rbp,8mov [rbp],raxmov eax,dword[SYSKEY]; $101b; OPTN =?cmp rax,4123jne _o202; (; 1mov dword[w118],1; )_o202:; DROPmov rax,[rbp]sub rbp,8; XYPENadd rbp,8mov [rbp],raxmov eax,dword[SYSXM]add rbp,8mov [rbp],raxmov eax,dword[SYSYM]; 'arrow8add rbp,8mov [rbp],raxmov rax,w254; spritejmp w230; ;;--------------------------; :modrun  |1001480|l     . I| calls:1 niv:1 len:18 (  --  )w4BF:;---------GEN; markcall w14D; 'wsysdicadd rbp,8mov [rbp],raxmov rax,w4B9; 'systemwords; OPTAV !mov dword[w44B],eaxmov rax,[rbp]sub rbp,8; 'xsysadd rbp,8mov [rbp],raxmov rax,w4BA; 'exsys; OPTAV !mov dword[w3CA],eaxmov rax,[rbp]sub rbp,8; 100add rbp,8mov [rbp],raxmov rax,100; 'screenadd rbp,8mov [rbp],raxmov rax,w490; hereadd rbp,8mov [rbp],raxmovsxd rax,dword[w14A]; DUPadd rbp,8mov [rbp],rax; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; !+mov rcx,[rbp]mov dword[rax],ecxadd rax,4sub rbp,8; !mov rcx,[rbp]mov dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; 6; OPTN <<shl rax,6; 'here; OPTAV +!add dword[w14A],eaxmov rax,[rbp]sub rbp,8; 0mov dword[w4AE],0; 'screenrobotadd rbp,8mov [rbp],raxmov rax,w4AF; 'robotsadd rbp,8mov [rbp],raxmov rax,w48C; p.mapvcall w324; 'runscradd rbp,8mov [rbp],raxmov rax,w4BE; onshowcall w119; emptyjmp w14E; ;;--------------------------; :modedit  |2001480|l     . I| calls:1 niv:2 len:13 (  --  )w4C0:;---------GEN; nr>add rbp,8mov [rbp],raxmovsxd rax,dword[w489]; 'robotsadd rbp,8mov [rbp],raxmov rax,w48C; 4; OPTN +add rax,4; @movsxd rax,dword [rax]; SWAPxchg rax,[rbp]; 6; OPTN <<shl rax,6; +add rax,[rbp]sub rbp,8; 4; OPTN +add rax,4; @movsxd rax,dword [rax]; 'codepathadd rbp,8mov [rbp],raxmov rax,w487; "%s%w.r3i"add rbp,8mov [rbp],raxmov rax,str1356; markcall w14D; 'buffadd rbp,8mov [rbp],raxmov rax,w177; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; (_i203:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o203; ,emitcall w175; )jmp _i203_o203:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 0add rbp,8mov [rbp],raxxor rax,rax; here; OPTV C!+movsxd rbx,dword[w14A]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; emptycall w14E; 'buffadd rbp,8mov [rbp],raxmov rax,w177; edloadcall w3BB; 0mov dword[w353],0; 0mov dword[w369],0; 'editandoadd rbp,8mov [rbp],raxmov rax,w3BD; onshowcall w119; edsavejmp w3BC; ;;--------------------------; :addrobot  |1004480|l     . I| calls:4 niv:1 len:13 ( abcd --  )w4C1:;---------GEN; 'robotsadd rbp,8mov [rbp],raxmov rax,w48C; DUPadd rbp,8mov [rbp],rax; >Rpush raxmov rax,[rbp]sub rbp,8; @movsxd rax,dword [rax]; !+mov rcx,[rbp]mov dword[rax],ecxadd rax,4sub rbp,8; 64add rbp,8mov [rbp],raxmov rax,64; R>add rbp,8mov [rbp],raxpop rax; +!mov rcx,[rbp]add dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; >Amov r8,raxmov rax,[rbp]sub rbp,8; A!+mov dword[r8],eaxadd r8,4mov rax,[rbp]sub rbp,8; A!+mov dword[r8],eaxadd r8,4mov rax,[rbp]sub rbp,8; A!+mov dword[r8],eaxadd r8,4mov rax,[rbp]sub rbp,8; 0; OPTN A!+mov dword[r8],0add r8,4; 0; OPTN A!+mov dword[r8],0add r8,4; 0; OPTN A!+mov dword[r8],0add r8,4; ;ret;--------------------------; :delrobot  |1001490|l  ;  . I| calls:1 niv:1 len:20 (  --  )w4C2:;---------GEN; nr>add rbp,8mov [rbp],raxmovsxd rax,dword[w489]; 'robotsadd rbp,8mov [rbp],raxmov rax,w48C; 4; OPTN +add rax,4; @movsxd rax,dword [rax]; SWAPxchg rax,[rbp]; 6; OPTN <<shl rax,6; +add rax,[rbp]sub rbp,8; 'robotsadd rbp,8mov [rbp],raxmov rax,w48C; >Rpush raxmov rax,[rbp]sub rbp,8; R@add rbp,8mov [rbp],raxmov rax,[rsp]; @movsxd rax,dword [rax]; 64; OPTN -sub rax,64; 8add rbp,8mov [rbp],raxmov rax,8; QMOVEmov rcx,raxmovsxd rsi,dword[rbp]movsxd rdi,dword[rbp-8]rep movsqmov rax,[rbp-8*2]sub rbp,8*3; -64add rbp,8mov [rbp],raxmov rax,-64; R>add rbp,8mov [rbp],raxpop rax; +!mov rcx,[rbp]add dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; nr>add rbp,8mov [rbp],raxmovsxd rax,dword[w489]; 'robots; OPTAV @+add rbp,8mov [rbp],raxmov rbx,w48Cmovsxd rax,dword [rbx]add rbx,4add rbp,8mov [rbp],raxmov [rbp],rbx; SWAPxchg rax,[rbp]; @movsxd rax,dword [rax]; -neg raxadd rax,[rbp]sub rbp,8; 6; OPTN >>sar rax,6; 0?or rax,raxjnz _o204; (; 2DROPmov rax,[rbp-8]sub rbp,8*2; ;ret; )_o204:; 1; OPTN -sub rax,1; DUPadd rbp,8mov [rbp],rax; NEGneg rax; 63; OPTN >>sar rax,63; ANDand rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; -neg raxadd rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; ANDand rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; 'nr>; OPTAV !mov dword[w489],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :drawinlist  |1001490|l  ;  . I| calls:1 niv:1 len:39 ( a -- b )w4C3:;---------GEN; 'robots; OPTAV @+add rbp,8mov [rbp],raxmov rbx,w48Cmovsxd rax,dword [rbx]add rbx,4add rbp,8mov [rbp],raxmov [rbp],rbx; SWAPxchg rax,[rbp]; @movsxd rax,dword [rax]; -neg raxadd rax,[rbp]sub rbp,8; 6; OPTN >>sar rax,6; >=?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjl _o205; (; ;ret; )_o205:; DUPadd rbp,8mov [rbp],rax; 'robotsadd rbp,8mov [rbp],raxmov rax,w48C; 4; OPTN +add rax,4; @movsxd rax,dword [rax]; SWAPxchg rax,[rbp]; 6; OPTN <<shl rax,6; +add rax,[rbp]sub rbp,8; @+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; 'ink; OPTAV !mov dword[w53],eaxmov rax,[rbp]sub rbp,8; @+movsxd rbx,dword [rax]add rax,4add rbp,8mov [rbp],raxmov rax,rbx; " %s "add rbp,8mov [rbp],raxmov rax,str14F6; markcall w14D; 'buffadd rbp,8mov [rbp],raxmov rax,w177; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; (_i206:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o206; ,emitcall w175; )jmp _i206_o206:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 0add rbp,8mov [rbp],raxxor rax,rax; here; OPTV C!+movsxd rbx,dword[w14A]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; emptycall w14E; 'buffadd rbp,8mov [rbp],raxmov rax,w177; (_i207:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o207; $ff; OPTN ANDand rax,255; DUPadd rbp,8mov [rbp],rax; _charemit; OPTV EXmov ecx,dword[w1F3]call rcx; _charsize; OPTV EXmov ecx,dword[w1F4]call rcx; 'ccx; OPTAV +!add dword[w1B5],eaxmov rax,[rbp]sub rbp,8; )jmp _i207_o207:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 8; OPTN +add rax,8; @movsxd rax,dword [rax]; 1?or rax,raxjz _o208; (; DUPadd rbp,8mov [rbp],rax; $ff0000mov dword[w53],16711680; " %s "add rbp,8mov [rbp],raxmov rax,str154C; markcall w14D; 'buffadd rbp,8mov [rbp],raxmov rax,w177; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; (_i209:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o209; ,emitcall w175; )jmp _i209_o209:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 0add rbp,8mov [rbp],raxxor rax,rax; here; OPTV C!+movsxd rbx,dword[w14A]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; emptycall w14E; 'buffadd rbp,8mov [rbp],raxmov rax,w177; (_i20A:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o20A; $ff; OPTN ANDand rax,255; DUPadd rbp,8mov [rbp],rax; _charemit; OPTV EXmov ecx,dword[w1F3]call rcx; _charsize; OPTV EXmov ecx,dword[w1F4]call rcx; 'ccx; OPTAV +!add dword[w1B5],eaxmov rax,[rbp]sub rbp,8; )jmp _i20A_o20A:; 2DROPmov rax,[rbp-8]sub rbp,8*2; )_o208:; DROPmov rax,[rbp]sub rbp,8; nr>; OPTV =?cmp eax,dword[w489]jne _o20B; (; $ffffffmov dword[w53],16777215; "<-"add rbp,8mov [rbp],raxmov rax,str157A; markcall w14D; 'buffadd rbp,8mov [rbp],raxmov rax,w177; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; (_i20C:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o20C; ,emitcall w175; )jmp _i20C_o20C:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 0add rbp,8mov [rbp],raxxor rax,rax; here; OPTV C!+movsxd rbx,dword[w14A]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; emptycall w14E; 'buffadd rbp,8mov [rbp],raxmov rax,w177; (_i20D:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o20D; $ff; OPTN ANDand rax,255; DUPadd rbp,8mov [rbp],rax; _charemit; OPTV EXmov ecx,dword[w1F3]call rcx; _charsize; OPTV EXmov ecx,dword[w1F4]call rcx; 'ccx; OPTAV +!add dword[w1B5],eaxmov rax,[rbp]sub rbp,8; )jmp _i20D_o20D:; 2DROPmov rax,[rbp-8]sub rbp,8*2; )_o20B:; cchadd rbp,8mov [rbp],raxmovsxd rax,dword[w1EE]; 'ccy; OPTAV +!add dword[w1B6],eaxmov rax,[rbp]sub rbp,8; 0mov dword[w1B5],0; ;ret;--------------------------; :upr  |1001480|l     . I| calls:1 niv:1 len:15 (  --  )w4C4:;---------GEN; nr>add rbp,8mov [rbp],raxmovsxd rax,dword[w489]; 1; OPTN -sub rax,1; 0add rbp,8mov [rbp],raxxor rax,rax; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; SWAPxchg rax,[rbp]; -neg raxadd rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; ANDand rax,[rbp]sub rbp,8; -neg raxadd rax,[rbp]sub rbp,8; nrp; OPTV <?cmp eax,dword[w48A]jge _o20E; (; DUPadd rbp,8mov [rbp],rax; 'nrp; OPTAV !mov dword[w48A],eaxmov rax,[rbp]sub rbp,8; )_o20E:; 'nr>; OPTAV !mov dword[w489],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :dnr  |1001480|l     . I| calls:1 niv:1 len:27 (  --  )w4C5:;---------GEN; nr>add rbp,8mov [rbp],raxmovsxd rax,dword[w489]; 1; OPTN +add rax,1; 'robots; OPTAV @+add rbp,8mov [rbp],raxmov rbx,w48Cmovsxd rax,dword [rbx]add rbx,4add rbp,8mov [rbp],raxmov [rbp],rbx; SWAPxchg rax,[rbp]; @movsxd rax,dword [rax]; -neg raxadd rax,[rbp]sub rbp,8; 6; OPTN >>sar rax,6; 1; OPTN -sub rax,1; DUPadd rbp,8mov [rbp],rax; NEGneg rax; 63; OPTN >>sar rax,63; ANDand rax,[rbp]sub rbp,8; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; -neg raxadd rax,[rbp]sub rbp,8; DUPadd rbp,8mov [rbp],rax; 63; OPTN >>sar rax,63; ANDand rax,[rbp]sub rbp,8; +add rax,[rbp]sub rbp,8; nrcadd rbp,8mov [rbp],raxmovsxd rax,dword[w48B]; nrp; OPTV +movsxd rbx,dword[w48A]add rax,rbx; 1; OPTN -sub rax,1; >=?mov rbx,raxmov rax,[rbp]sub rbp,8cmp rax,rbxjl _o20F; (; DUPadd rbp,8mov [rbp],rax; nrc; OPTV -movsxd rbx,dword[w48B]sub rax,rbx; 1; OPTN +add rax,1; 'nrp; OPTAV !mov dword[w48A],eaxmov rax,[rbp]sub rbp,8; )_o20F:; 'nr>; OPTAV !mov dword[w489],eaxmov rax,[rbp]sub rbp,8; ;ret;--------------------------; :menu  |9001484|l'    . I| calls:1 niv:9 len:99 ( a --  )w4C6:;---------GEN; VFRAMEadd rbp,8mov [rbp],raxmov rax,[SYSFRAME]; 0add rbp,8mov [rbp],raxxor rax,rax; SWadd rbp,8mov [rbp],raxmov rax,XRES; SHadd rbp,8mov [rbp],raxmov rax,YRES; *imul rax,[rbp]sub rbp,8; FILLmov rcx,raxmovsxd rax,dword[rbp]movsxd rdi,dword[rbp-8]rep stosdmov rax,[rbp-8*2]sub rbp,8*3; 0mov dword[w1B5],0; 0mov dword[w1B6],0; guicall w29B; $ffffmov dword[w53],65535; " FRobots "add rbp,8mov [rbp],raxmov rax,str165B; markcall w14D; 'buffadd rbp,8mov [rbp],raxmov rax,w177; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; (_i210:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o210; ,emitcall w175; )jmp _i210_o210:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 0add rbp,8mov [rbp],raxxor rax,rax; here; OPTV C!+movsxd rbx,dword[w14A]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; emptycall w14E; 'buffadd rbp,8mov [rbp],raxmov rax,w177; (_i211:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o211; $ff; OPTN ANDand rax,255; DUPadd rbp,8mov [rbp],rax; _charemit; OPTV EXmov ecx,dword[w1F3]call rcx; _charsize; OPTV EXmov ecx,dword[w1F4]call rcx; 'ccx; OPTAV +!add dword[w1B5],eaxmov rax,[rbp]sub rbp,8; )jmp _i211_o211:; 2DROPmov rax,[rbp-8]sub rbp,8*2; cchadd rbp,8mov [rbp],raxmovsxd rax,dword[w1EE]; 'ccy; OPTAV +!add dword[w1B6],eaxmov rax,[rbp]sub rbp,8; 0mov dword[w1B5],0; cchadd rbp,8mov [rbp],raxmovsxd rax,dword[w1EE]; 'ccy; OPTAV +!add dword[w1B6],eaxmov rax,[rbp]sub rbp,8; 0mov dword[w1B5],0; $202020mov dword[w53],2105376; 0add rbp,8mov [rbp],raxxor rax,rax; 2add rbp,8mov [rbp],raxmov rax,2; 40add rbp,8mov [rbp],raxmov rax,40; OVERadd rbp,8mov [rbp],raxmov rax,[rbp-8]; nrc; OPTV +movsxd rbx,dword[w48B]add rax,rbx; backfillcall w212; 0add rbp,8mov [rbp],raxxor rax,rax; 2add rbp,8mov [rbp],raxmov rax,2; cch; OPTV *movsxd rbx,dword[w1EE]imul rax,rbx; 'ccy; OPTAV !mov dword[w1B6],eaxmov rax,[rbp]sub rbp,8; ccw; OPTV *movsxd rbx,dword[w1EF]imul rax,rbx; 'ccx; OPTAV !mov dword[w1B5],eaxmov rax,[rbp]sub rbp,8; $ff00mov dword[w53],65280; 0add rbp,8mov [rbp],raxxor rax,rax; (_i212:; nrc; OPTV <?cmp eax,dword[w48B]jge _o212; nrp; OPTV +movsxd rbx,dword[w48A]add rax,rbx; drawinlistcall w4C3; nrp; OPTV -movsxd rbx,dword[w48A]sub rax,rbx; 1; OPTN +add rax,1; )jmp _i212_o212:; DROPmov rax,[rbp]sub rbp,8; 0add rbp,8mov [rbp],raxxor rax,rax; rowsadd rbp,8mov [rbp],raxmovsxd rax,dword[w1EC]; 1; OPTN -sub rax,1; cch; OPTV *movsxd rbx,dword[w1EE]imul rax,rbx; 'ccy; OPTAV !mov dword[w1B6],eaxmov rax,[rbp]sub rbp,8; ccw; OPTV *movsxd rbx,dword[w1EF]imul rax,rbx; 'ccx; OPTAV !mov dword[w1B5],eaxmov rax,[rbp]sub rbp,8; $ffffffmov dword[w53],16777215; "F1-Run "add rbp,8mov [rbp],raxmov rax,str1713; markcall w14D; 'buffadd rbp,8mov [rbp],raxmov rax,w177; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; (_i213:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o213; ,emitcall w175; )jmp _i213_o213:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 0add rbp,8mov [rbp],raxxor rax,rax; here; OPTV C!+movsxd rbx,dword[w14A]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; emptycall w14E; 'buffadd rbp,8mov [rbp],raxmov rax,w177; (_i214:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o214; $ff; OPTN ANDand rax,255; DUPadd rbp,8mov [rbp],rax; _charemit; OPTV EXmov ecx,dword[w1F3]call rcx; _charsize; OPTV EXmov ecx,dword[w1F4]call rcx; 'ccx; OPTAV +!add dword[w1B5],eaxmov rax,[rbp]sub rbp,8; )jmp _i214_o214:; 2DROPmov rax,[rbp-8]sub rbp,8*2; "F2-Edit "add rbp,8mov [rbp],raxmov rax,str1725; markcall w14D; 'buffadd rbp,8mov [rbp],raxmov rax,w177; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; (_i215:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o215; ,emitcall w175; )jmp _i215_o215:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 0add rbp,8mov [rbp],raxxor rax,rax; here; OPTV C!+movsxd rbx,dword[w14A]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; emptycall w14E; 'buffadd rbp,8mov [rbp],raxmov rax,w177; (_i216:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o216; $ff; OPTN ANDand rax,255; DUPadd rbp,8mov [rbp],rax; _charemit; OPTV EXmov ecx,dword[w1F3]call rcx; _charsize; OPTV EXmov ecx,dword[w1F4]call rcx; 'ccx; OPTAV +!add dword[w1B5],eaxmov rax,[rbp]sub rbp,8; )jmp _i216_o216:; 2DROPmov rax,[rbp-8]sub rbp,8*2; "F4-Add "add rbp,8mov [rbp],raxmov rax,str174C; markcall w14D; 'buffadd rbp,8mov [rbp],raxmov rax,w177; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; (_i217:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o217; ,emitcall w175; )jmp _i217_o217:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 0add rbp,8mov [rbp],raxxor rax,rax; here; OPTV C!+movsxd rbx,dword[w14A]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; emptycall w14E; 'buffadd rbp,8mov [rbp],raxmov rax,w177; (_i218:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o218; $ff; OPTN ANDand rax,255; DUPadd rbp,8mov [rbp],rax; _charemit; OPTV EXmov ecx,dword[w1F3]call rcx; _charsize; OPTV EXmov ecx,dword[w1F4]call rcx; 'ccx; OPTAV +!add dword[w1B5],eaxmov rax,[rbp]sub rbp,8; )jmp _i218_o218:; 2DROPmov rax,[rbp-8]sub rbp,8*2; "F5-Del "add rbp,8mov [rbp],raxmov rax,str175E; markcall w14D; 'buffadd rbp,8mov [rbp],raxmov rax,w177; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; (_i219:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o219; ,emitcall w175; )jmp _i219_o219:; 2DROPmov rax,[rbp-8]sub rbp,8*2; 0add rbp,8mov [rbp],raxxor rax,rax; here; OPTV C!+movsxd rbx,dword[w14A]mov byte[rbx],aladd rbx,1mov rax,rbx; 'here; OPTAV !mov dword[w14A],eaxmov rax,[rbp]sub rbp,8; emptycall w14E; 'buffadd rbp,8mov [rbp],raxmov rax,w177; (_i21A:; C@+movsx rbx,byte [rax]add rax,1add rbp,8mov [rbp],raxmov rax,rbx; 1?or rax,raxjz _o21A; $ff; OPTN ANDand rax,255; DUPadd rbp,8mov [rbp],rax; _charemit; OPTV EXmov ecx,dword[w1F3]call rcx; _charsize; OPTV EXmov ecx,dword[w1F4]call rcx; 'ccx; OPTAV +!add dword[w1B5],eaxmov rax,[rbp]sub rbp,8; )jmp _i21A_o21A:; 2DROPmov rax,[rbp-8]sub rbp,8*2; cchadd rbp,8mov [rbp],raxmovsxd rax,dword[w1EE]; 'ccy; OPTAV +!add dword[w1B6],eaxmov rax,[rbp]sub rbp,8; 0mov dword[w1B5],0; KEYadd rbp,8mov [rbp],raxmov eax,dword[SYSKEY]; $4052; OPTN =?cmp rax,16466jne _o21B; (; uprcall w4C4; )_o21B:; $4051; OPTN =?cmp rax,16465jne _o21C; (; dnrcall w4C5; )_o21C:; $403a; OPTN =?cmp rax,16442jne _o21D; (; modruncall w4BF; )_o21D:; $403b; OPTN =?cmp rax,16443jne _o21E; (; modeditcall w4C0; )_o21E:; $403d; OPTN =?cmp rax,16445jne _o21F; (; 0add rbp,8mov [rbp],raxxor rax,rax; 0add rbp,8mov [rbp],raxxor rax,rax; $ffffffadd rbp,8mov [rbp],raxmov rax,16777215; ""add rbp,8mov [rbp],raxmov rax,str17F5; addrobotcall w4C1; )_o21F:; $403e; OPTN =?cmp rax,16446jne _o220; (; delrobotcall w4C2; )_o220:; $101b; OPTN =?cmp rax,4123jne _o221; (; 1mov dword[w118],1; )_o221:; DROPmov rax,[rbp]sub rbp,8; XYPENadd rbp,8mov [rbp],raxmov eax,dword[SYSXM]add rbp,8mov [rbp],raxmov eax,dword[SYSYM]; 'arrow8add rbp,8mov [rbp],raxmov rax,w254; spritejmp w230; ;;--------------------------; :  |3001480|l     . I| calls:1 niv:3 len:28 (  --  )INICIO:;---------GEN; 16mov dword[w1EF],16; 16mov dword[w1EE],16; 'char8j2add rbp,8mov [rbp],raxmov rax,w2DB; 'size8j2add rbp,8mov [rbp],raxmov rax,w2DC; '_charsize; OPTAV !mov dword[w1F4],eaxmov rax,[rbp]sub rbp,8; '_charemit; OPTAV !mov dword[w1F3],eaxmov rax,[rbp]sub rbp,8; SWadd rbp,8mov [rbp],raxmov rax,XRES; ccw; OPTV /movsxd rbx,dword[w1EF]cqoidiv rbx; 'cols; OPTAV !mov dword[w1ED],eaxmov rax,[rbp]sub rbp,8; SHadd rbp,8mov [rbp],raxmov rax,YRES; cch; OPTV /movsxd rbx,dword[w1EE]cqoidiv rbx; 'rows; OPTAV !mov dword[w1EC],eaxmov rax,[rbp]sub rbp,8; markcall w14D; 32add rbp,8mov [rbp],raxmov rax,32; 'robotsadd rbp,8mov [rbp],raxmov rax,w48C; hereadd rbp,8mov [rbp],raxmovsxd rax,dword[w14A]; DUPadd rbp,8mov [rbp],rax; ROTmov rcx,[rbp]mov [rbp],raxmov rax,[rbp-8]mov [rbp-8],rcx; !+mov rcx,[rbp]mov dword[rax],ecxadd rax,4sub rbp,8; !mov rcx,[rbp]mov dword[rax],ecxmov rax,[rbp-8]sub rbp,8*2; 6; OPTN <<shl rax,6; 'here; OPTAV +!add dword[w14A],eaxmov rax,[rbp]sub rbp,8; -5.0add rbp,8mov [rbp],raxmov rax,-327680; -5.0add rbp,8mov [rbp],raxmov rax,-327680; "test1"add rbp,8mov [rbp],raxmov rax,str18CB; $ff00add rbp,8mov [rbp],raxmov rax,65280; addrobotcall w4C1; -5.0add rbp,8mov [rbp],raxmov rax,-327680; 5.0add rbp,8mov [rbp],raxmov rax,327680; "test2"add rbp,8mov [rbp],raxmov rax,str18ED; $ff0000add rbp,8mov [rbp],raxmov rax,16711680; addrobotcall w4C1; 5.0add rbp,8mov [rbp],raxmov rax,327680; -5.0add rbp,8mov [rbp],raxmov rax,-327680; "test3"add rbp,8mov [rbp],raxmov rax,str1911; $ffadd rbp,8mov [rbp],raxmov rax,255; addrobotcall w4C1; 1add rbp,8mov [rbp],raxmov rax,1; 2add rbp,8mov [rbp],raxmov rax,2; 40add rbp,8mov [rbp],raxmov rax,40; 25mov dword[w350],25; 'wcode; OPTAV !mov dword[w34F],eaxmov rax,[rbp]sub rbp,8; 'ycode; OPTAV !mov dword[w34E],eaxmov rax,[rbp]sub rbp,8; 'xcode; OPTAV !mov dword[w34D],eaxmov rax,[rbp]sub rbp,8; calcselectcall w380; edramcall w3BF; 0mov dword[w48A],0; rowsadd rbp,8mov [rbp],raxmovsxd rax,dword[w1EC]; 16; OPTN -sub rax,16; 'nrc; OPTAV !mov dword[w48B],eaxmov rax,[rbp]sub rbp,8; 'menuadd rbp,8mov [rbp],raxmov rax,w4C6; onshowjmp w119; ; 